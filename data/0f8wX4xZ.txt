using Exam.RePlay;
using NUnit.Framework;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;

public class RePlayerTests_27
{
    private IRePlayer rePlayer;

    private Track GetRandomTrack()
    {
        Random random = new Random();

        return new Track(
            Guid.NewGuid().ToString(),
            Guid.NewGuid().ToString(),
            Guid.NewGuid().ToString(),
            random.Next(1, 1_000_000_000),
            random.Next(10, 1000));
    }

    [SetUp]
    public void Setup()
    {
        this.rePlayer = new RePlayer();
    }

    [Test]
    [Category("Correctness")]
    public void TestRemoveTrack_WithCorrectData_ShouldSuccessfullyRemoveTrackFromQueue()
    {
        Track track = new Track("asd", "bsd", "Donald", 4000, 400);
        Track track2 = new Track("csd", "dsd", "Donald", 4000, 400);
        Track track3 = new Track("esd", "bsd", "Donald", 4000, 400);
        Track track4 = new Track("hsd", "isd", "Donald", 4000, 400);

        this.rePlayer.AddTrack(track, "randomAlbum");
        this.rePlayer.AddTrack(track2, "randomAlbum2");
        this.rePlayer.AddTrack(track3, "randomAlbum2");
        this.rePlayer.AddTrack(track4, "randomAlbum");

        this.rePlayer.AddToQueue("bsd", "randomAlbum");
        this.rePlayer.AddToQueue("dsd", "randomAlbum2");
        this.rePlayer.AddToQueue("bsd", "randomAlbum2");
        this.rePlayer.RemoveTrack("dsd", "randomAlbum2");

        Assert.AreEqual(track, this.rePlayer.Play());
        Assert.AreEqual(track3, this.rePlayer.Play());
    }
}