#include <bits/stdc++.h>

using namespace std;

const int n = 3;
vector<int> a {1,2,5};
vector<int> b {4,3,7};

void generate_combinations(int value, int pos) {
    if (pos == n) {
        cout << value << "\n";
        return;
    }

    generate_combinations(value + a[pos], pos + 1);
    generate_combinations(value + b[pos], pos + 1);
}

int main() {
    cout << "With recursion:\n";
    generate_combinations(0, 0);

    cout << "\n";
    cout << "With bitmasks:\n";
    for (int mask = 0; mask < (1 << n); mask++) {
        int value = 0;
        for (int i = 0; i < n; i++) {
            value += ((mask >> i) & 1) ? b[i] : a[i];
        }

        cout << bitset<n>(mask) << " => " << value << "\n";
    }
}
