function() {
  var react_formdata = JSON.parse(sessionStorage.getItem('form_state'));
  var pricinginfo = react_formdata.build.sidebar.pricing;
  var promoinfo = [];
  var promocodes = '';
  if (Object.keys(pricinginfo).length > 0){
  promoinfo.push({discount:"monthly bundle discount applied",id:"0",value:"10",ongoing_discount:"10",upfront_discount:"0"});
    promocodes = promocodes + "bundle discount applied|";
  }
  var i;
  for (i = 0; i < react_formdata.promo.codes.length; i++) {
    var tcode = react_formdata.promo.codes[i];
    var ongoing_discount = 0;
    var upfront_discount = 0;
    if ('config' in tcode && 'discounts' in tcode.config && tcode.config.discounts.length > 0){
      ongoing_discount = tcode.config.discounts[0].ongoingDiscount;
      upfront_discount = tcode.config.discounts[0].upfrontDiscount;
    }
    promoinfo.push({discount:tcode.displayName,id:tcode.id,ongoing_discount:ongoing_discount,upfront_discount:upfront_discount});
    promocodes = promocodes + tcode.displayName + "|";
    
  }
  pricinginfo['promo'] = promoinfo;
  
  
  if ('payment' in react_formdata && 'info' in react_formdata.payment && 'data' in react_formdata.payment.info && 'orders' in react_formdata.payment.info.data && 'data' in react_formdata.payment.info.data.orders && react_formdata.payment.info.data.orders.data.length > 0){
    var orderinfo = react_formdata.payment.info.data.orders.data[0];
    var payment = {};
    payment['accountNumber'] = react_formdata.payment.info.data.accountNumber;
    payment['orderNumber'] = orderinfo.orderNumber;
    payment['totalUpfront'] = orderinfo.totalUpfront;
    payment['totalOngoing'] = orderinfo.totalOngoing;
    pricinginfo['payment'] = payment;
  }
  
  var ecommerce = {};
  
  ecommerce.purchase = {};
  ecommerce.purchase.products = [];
  
  for (var key in pricinginfo.products) {
  var tprod = pricinginfo.products[key];
  var prod = {name:tprod.displayName,id:tprod.id,price:tprod.upfront,ongoing:tprod.ongoing,quantity:tprod.quantity};
  ecommerce.purchase.products.push(prod);
  }  
  if ('payment' in pricinginfo){
    ecommerce.purchase.actionField = {
      id:pricinginfo.payment.orderNumber,
      accountNumber:pricinginfo.payment.accountNumber,
      revenue:pricinginfo.payment.totalUpfront,
      ongoing:pricinginfo.payment.totalOngoing,
      coupon:promocodes
    };
  }
 
  /*
 window.dataLayer = window.dataLayer || [];
 dataLayer.push({
  'event': 'eec.purchase',
  'ecommerce':ecommerce});
  */
  return {ecommerce:ecommerce};
}