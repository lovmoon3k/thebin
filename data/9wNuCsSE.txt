

 
local term = require("term")
local event = require("event")
local component = require("component")
local os = require("os")

local robot = require("robot")
local modem = component.modem
local geo = component.geolyzer

 pos = {}

 pos.x = 0

 pos.y = 0

 pos.z = 0

local vector = "north"
local message = " "
local robotBusy = 0
local variables = {}
 
function setCursorPos (posX, posY)
  term.setCursor(posX, posY)
end

function renderText(text)
  term.write(text)
end

function executeTurnLeft()
  print("message from computer received=LFT")
  print("executing command robot.turnLeft()")
  if vector == "north" then
    vector = "west"
  elseif vector == "west" then
    vector = "south"
  elseif vector == "south" then
    vector = "east"
  elseif vector == "east" then
    vector = "north"
  end
  robot.turnLeft()
  print(vector)
  sendMsgToComputer("robot.turnLeft()")
  executed = true
end

function executeTurnRight()
  print("message from computer received=RHT")
  print("executing command robot.turnRight()")
  if vector == "north" then
    vector = "east"
  elseif vector == "east" then
    vector = "south"
  elseif vector == "south" then
    vector = "west"
  elseif vector == "west" then
    vector = "north"
  end
  robot.turnRight()
  print(vector)
  sendMsgToComputer("robot.turnRight()")
  executed = true
end

function executeForward()
  print("message from computer received=FWD")
  print("executing command robot.forward()")
  if vector == "north" then
    pos.y = pos.y + 1
  elseif vector == "east" then
    pos.x = pos.x + 1
  elseif vector == "south" then
    pos.y = pos.y - 1
  elseif vector == "west" then
    pos.x = pos.x - 1
  end
  robot.forward()
  print(vector)
  sendMsgToComputer("robot.forward()")
  executed = true
end

function executeBack()
  print("message from computer received=BWD")
  print("executing command robot.back()")
  if vector == "north" then
    pos.y = pos.y - 1
  elseif vector == "east" then
    pos.x = pos.x - 1
  elseif vector == "south" then
    pos.y = pos.y + 1
  elseif vector == "west" then
    pos.x = pos.x + 1
  end
  robot.back()
  print(vector)
  sendMsgToComputer("robot.back()")
  executed = true
end

function executeUp()
  print("message from computer received=UP")
  print("executing command robot.up()")
  pos.z = pos.z + 1
  robot.up()
  print(vector)
  sendMsgToComputer("robot.up()")
  executed = true
end

function executeDown()
  print("message from computer received=DWN")
  print("executing command robot.down()")
  pos.z = pos.z - 1
  robot.down()
  print(vector)
  sendMsgToComputer("robot.down()")
  executed = true
end

function executeDetctUpward()
  print("message from computer recieved="..message)
   print("executing command geo.analyze(1)")
    detctionResult = geo.analyze(1)
    sendMsgToComputer("geo.analyze(1)")
    os.sleep(0.2)
    sendMsgToComputer(detctionResult.name)
  executed = true
end

function executeDetctDownward()
  print("message from computer recieved="..message)
   print("executing command robot.detectDown()")
   detctionResult = geo.analyze(0)
   sendMsgToComputer("geo.analyze(0)")
   os.sleep(0.2)
   sendMsgToComputer(detctionResult.name)
  executed = true
end

function executeDetctForward()
  print("message from computer recieved="..message)
   print("executing command geo.analyze(3)")
   detctionResult = geo.analyze(3)
   print("detctionResult = "..detctionResult.name)
   sendMsgToComputer("geo.analyze(3)")
   os.sleep(0.2)
   sendMsgToComputer(detctionResult.name)
     
    
  executed = true
end

function executeUseForward()
  print("message from computer recieved="..message)
   print("executing command robot.use(3)")
   robot.use(3)
   sendMsgToComputer("robot.use(3)")
     
    
  executed = true
end


function modemListen()
    modem.open(5)
    executed = false
  _, _, from, port, _, msg = event.pull(0.05,  "modem_message")
 if msg ~= nil then
  message = msg
  
  if message == "LFT" and not executed then
    executeTurnLeft()
    message = " "
  end
  
  if message == "RHT" and not executed then
    executeTurnRight()
    message = " "
  end
  
  if message == "FWD" and not executed then
    executeForward()
    message = " "
  end
  
  if message == "BWD" and not executed then
    executeBack()
    message = " "
  end
  
  if message == "UP" and not executed then
    executeUp()
    message = " "
  end
  
  if message == "DWN" and not executed then
    executeDown()
    message = " "
  end


  if message == "DCT_UPW" and not executed then
    executeDetctUpward()
    message = " "
  end
  if message == "DCT_DWD" and not executed then
    executeDetctDownward()
    message = " "
  end
  if message == "DCT_FWD" and not executed then
    executeDetctForward()
    message = " "
  end
  if message == "USE_FWD" and not executed then
    executeUseForward()
    message = " "
  end
 else 
    
    message = " "
 end
 os.sleep(0.0)
end

function sendMsgToComputer (msg)
    modem.open(5)
    modem.setStrength(255)
    sendMessageSuccess = modem.send("07bdaacd-57ba-467b-8522-3f40cb93e491", 5, msg)
    print("message "..msg.." sent="..tostring(sendMessageSuccess))
end
 
 
 
while true do 
 modemListen()

 
 

end
 
