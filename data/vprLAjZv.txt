import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.List;

public class Yandex3 {
    @Test
    public void firstTest() {
        List<String> lines = new ArrayList<>();
        lines.add("2");
        lines.add("10 9");
        lines.add("1 0");
        lines.add("0 1");
        lines.add("5");
        lines.add("0 0 11 10 9");
        lines.add("0 1 0 1 1");
        lines.add("2 1 0 0 0");
        Assertions.assertEquals(8, lines.size());
        Assertions.assertEquals(2, parseSingleValue(lines.get(0)));
        Assertions.assertEquals(5, parseSingleValue(lines.get(4)));
        List<Integer> list = parseMultiValue(lines.get(1));
        Assertions.assertEquals(2, list.size());
        Assertions.assertEquals(10, list.get(0));
        Assertions.assertEquals(9, list.get(1));

    }


    @Test
    public void secondTest() {
        List<String> lines = new ArrayList<>();
        lines.add("2");
        lines.add("10 9");
        lines.add("1 0");
        lines.add("0 1");
        lines.add("5");
        lines.add("0 0 11 10 9");
        lines.add("0 1 0 1 1");
        lines.add("2 1 0 0 0");
        List<Integer> peoplesTooCountries = peoplesTooCountries(lines);
        Assertions.assertEquals(5, peoplesTooCountries.size());
        Assertions.assertEquals(2, peoplesTooCountries.get(0));
        Assertions.assertEquals(0, peoplesTooCountries.get(1));
        Assertions.assertEquals(2, peoplesTooCountries.get(2));
        Assertions.assertEquals(1, peoplesTooCountries.get(3));
        Assertions.assertEquals(2, peoplesTooCountries.get(4));
    }

    private List<Integer> peoplesTooCountries(List<String> lines) {
        int amountOfCountries = parseSingleValue(lines.get(0));
        List<Integer> minCelery = parseMultiValue(lines.get(1));
        List<Integer> isHighEducation = parseMultiValue(lines.get(2));
        List<Integer> isFamilyMembers = parseMultiValue(lines.get(3));
        int amountOfClassmates = parseSingleValue(lines.get(4));
        List<Integer> classmateSalary = parseMultiValue(lines.get(5));
        List<Integer> classmateEducation = parseMultiValue(lines.get(6));
        List<Integer> classmateFamily = parseMultiValue(lines.get(7));
        List<Integer> peopleTooCountries = new ArrayList<>();
        for (int i = 0; i < amountOfClassmates; i++) {
            for (int j = 0; j < amountOfCountries; j++) {
                if (classmateSalary.get(i) >= minCelery.get(j)) {
                    if (isHighEducation.get(j) == 0) {
                        peopleTooCountries.add(j + 1);
                        break;
                    } else if (classmateEducation.get(i) == 1) {
                        peopleTooCountries.add(j + 1);
                        break;
                    }
                } else if (isFamilyMembers.get(j) == 1 & classmateFamily.get(i) == j + 1) {
                    peopleTooCountries.add(j + 1);
                    break;
                } else if (j == amountOfCountries - 1) peopleTooCountries.add(0);
            }
        }
        return peopleTooCountries;


    }

    private int parseSingleValue(String line) {
        return Integer.parseInt(line);
    }

    private List<Integer> parseMultiValue(String line) {
        List<Integer> list = new ArrayList<>();
        String[] numbs = line.split(" ");
        for (String num : numbs)
            list.add(Integer.parseInt(num));
        return list;

    }


}
