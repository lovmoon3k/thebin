using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace Основы.Практика
{
    class Program
    {
        static void Main(string[] args)
        {
            Menu menu = new Menu();
            menu.Run();
        }
    }

    class Menu
    {
        private Library _library;

        public Menu()
        {
            _library = new Library();
        }

        public void Run()
        {
            bool isRun = true;

            while(isRun)
            {
                Console.WriteLine("\n[1] - Добавить книгу\n" +
                    "[2] - Убрать книгу\n" +
                    "[3] - Показать все книги\n" +
                    "[4] - Показать книги по определенному параметру");
                Console.Write("Ввод: ");

                string userInput = Console.ReadLine();

                Console.Clear();

                switch (userInput)
                {
                    case "1":
                        _library.AddBook();
                        break;
                    case "2":
                        _library.RemoveBook();
                        break;
                    case "3":
                        _library.ShowBooks();
                        break;
                    case "4":
                        _library.ShowBooksByParametr();
                        break;
                    default:
                        Console.WriteLine("Некорректный ввод!");
                        break;
                }
            }
        }
    }

    class Library
    {
        private List<Book> _books;

        public Library()
        {
            _books = new List<Book>()
            {
                new Book("Метро 2033", "Глуховский", 2005),
                new Book("Ведьмак", "Сапковский", 1986),
                new Book("Кровь, пот и пиксели", "Шрейер", 2018),
                new Book("Метро 2034", "Глуховский", 2009),
                new Book("Метро 2035", "Глуховский", 2015)
            };
        }

        public void AddBook()
        {
            Console.Write("Введите название книги: ");
            string name = Console.ReadLine();

            Console.Write("\nВведите автора: ");
            string author = Console.ReadLine();

            Console.Write("\nВведите год выпуска: ");
            int releaseYear = Convert.ToInt32(Console.ReadLine());

            Book book = new Book(name, author, releaseYear);

            _books.Add(book);
        }

        public void RemoveBook()
        {
            Console.WriteLine("Выберите из списка книгу, необходимую для удаления: ");

            for (int i = 0; i < _books.Count; i++)
            {
                Console.WriteLine($"{i}) Название: {_books[i].Name}; Автор: {_books[i].Author}; " +
                    $"Год выпуска: {_books[i].ReleaseYear}");
            }

            Console.Write("Ввод: ");
            int userInput = Convert.ToInt32(Console.ReadLine()) - 1;

            if(userInput < 0 && userInput > _books.Count)
            {
                Console.WriteLine("Некорректный ввод!");
                return;
            }

            _books.RemoveAt(userInput);
        }

        public void ShowBooks()
        {
            foreach (Book book in _books)
            {
                Console.WriteLine($"Название: {book.Name}; Автор: {book.Author}; " +
                    $"Год выпуска: {book.ReleaseYear}");
            }
        }

        public void ShowBooksByParametr()
        {
            Console.WriteLine("Выберите параметр:\n" +
                "[1] - по названию\n" +
                "[2] - по авторам\n" +
                "[3] - по году выпуска");

            Console.Write("Ввод: ");
            string userInput = Console.ReadLine();

            Console.WriteLine();

            switch (userInput)
            {
                case "1":
                    ShowBookByName();
                    break;
                case "2":
                    ShowBookByAuthor();
                    break;
                case "3":
                    ShowBookByReleaseYear();
                    break;
                default:
                    Console.WriteLine("Такого параметра нет!");
                    break;
            }
        }

        private void ShowBookByAuthor()
        {
            List<string> booksByAuthors = new List<string>();

            foreach (Book book in _books)
            {
                booksByAuthors.Add(book.Author);
                Console.WriteLine(book.Author);
            }

            Console.Write("\nВведите интересующего автора: ");
            string userInput = Console.ReadLine();

            if(booksByAuthors.Contains(userInput) == false)
            {
                Console.WriteLine("Такого автора нет!");
                return;
            }

            Console.WriteLine($"Список книг автора {userInput}");

            foreach (Book book in _books)
            {
                if(book.Author == userInput)
                {
                    Console.WriteLine($"Название: {book.Name}. " +
                    $"Год выпуска: {book.ReleaseYear};");
                }
            }
        }

        private void ShowBookByName()
        {
            List<string> booksByName = new List<string>();

            foreach (Book book in _books)
            {
                booksByName.Add(book.Name);
                Console.WriteLine(book.Name);
            }

            Console.Write("\nВведите название: ");
            string userInput = Console.ReadLine();

            if (booksByName.Contains(userInput) == false)
            {
                Console.WriteLine("Такого названия нет!");
                return;
            }

            Console.WriteLine($"Информация об одноименной книге <{userInput}>");

            foreach (Book book in _books)
            {
                if (book.Name == userInput)
                {
                    Console.WriteLine($"Автора: {book.Author}. " +
                    $"Год выпуска: {book.ReleaseYear};");
                }
            }
        }

        private void ShowBookByReleaseYear()
        {
            List<int> booksByReleaseYear = new List<int>();

            foreach (Book book in _books)
            {
                booksByReleaseYear.Add(book.ReleaseYear);
                Console.WriteLine(book.ReleaseYear);
            }

            Console.Write("\nВведите год: ");
            int userInput = Convert.ToInt32(Console.ReadLine());

            if (booksByReleaseYear.Contains(userInput) == false)
            {
                Console.WriteLine("Такого года выпуска нет!");
                return;
            }

            Console.WriteLine($"Информация релизах в {userInput} г.");

            foreach (Book book in _books)
            {
                if (book.ReleaseYear == userInput)
                {
                    Console.WriteLine($"Название: {book.Name}. " +
                    $"Автор: {book.Author};");
                }
            }
        }

    }

    class Book
    {
        public string Name { get; private set; }
        public string Author { get; private set; }
        public int ReleaseYear { get; private set; }

        public Book(string name, string author, int releaseYear)
        {
            Name = name;
            Author = author;
            ReleaseYear = releaseYear;
        }
    }
}