// AutoCar.cpp : This file contains the 'main' function. Program execution begins and ends there.
/*
Даден е базов абстрактен клас Auto, който съдържа полетата тип на автомобила (лек, товарен).
Съдържа символен низ със съответната дума - марка на автомобила и година на производство.
Инициализиращия конструктор да задава стойност на тези полета чрез параметри.
Реализирайте абстрактен метод за извеждане на съдържанието на обекта в символен низ.
Даден е производен клас на класа Auto - лек автомобил - Car с полета наследени от Auto и
максимална скорост.
Демонстрирайте работата на класовете със създаване на колекция от различен тип автомобили и
извеждане на информация за всички леки автомобили, които са произведени преди 2000 година.
*/

#include <iostream>
#include <string.h>
using namespace std;

class Auto
{
private:
    string type;
    string brand;
    int buildYear;
public:
    Auto(string Type, string Brand, int yearBuild)
    {
        type = Type;
        brand = Brand;
        buildYear = yearBuild;
    }
    virtual void display() = 0;

    string getType()
    {
        return type;
    }

    string getBrand()
    {
        return brand;
    }

    int getYearBuild()
    {
        return buildYear;
    }
};

class Car : public Auto
{
private:
    int maxSpeed;
public:
    Car(int speedMax, string Type, string Brand, int yearBuild) : Auto (Type,  Brand, yearBuild)
    {
        maxSpeed = speedMax;
    }

    void display() 
    {
        cout << "Tip: " << getType() << endl;
        cout << "Marka: " << getBrand() << endl;
        cout << "Godina: " << getYearBuild () << endl;
        cout << "Max skorost: " << maxSpeed << endl;
    }
};

Car* carArray[2];
void addCarToArray(Car* car, int size)
{
    for (int i = 0; i < size; i++)
    {
        carArray[i] = car;
    }
};

int main()
{
    Auto* p;
    Auto* arr[2];

    Car c1(202, "lek", "AUDI", 1997);
    p = &c1;
    arr[0] = p;

    Car c2(201, "tovaren", "BMW", 2005);
    p = &c2;
    arr[1] = p;

    for (int i = 0; i < 2; i++)
    {
        if (arr[i]->getYearBuild() < 2000 && arr[i]->getType() == "lek") {
            arr[i]->display();
        }
    }
}

// Run program: Ctrl + F5 or Debug > Start Without Debugging menu
// Debug program: F5 or Debug > Start Debugging menu

// Tips for Getting Started: 
//   1. Use the Solution Explorer window to add/manage files
//   2. Use the Team Explorer window to connect to source control
//   3. Use the Output window to see build output and other messages
//   4. Use the Error List window to view errors
//   5. Go to Project > Add New Item to create new code files, or Project > Add Existing Item to add existing code files to the project
//   6. In the future, to open this project again, go to File > Open > Project and select the .sln file
