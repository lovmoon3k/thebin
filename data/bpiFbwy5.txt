local bitutils = {}

---Parses a number of bits at an index of the bit to start at from a series of bytes, and returns the number formed by the bits
---@param bytes string Bytes to read from
---@param bits integer Number of bits to read
---@param bitIndex integer Starts at index 0
function bitutils.extractBits (bytes, bits, bitIndex)
  local startByteIndex = 1 + math.floor(bitIndex / 8)
  local endByteIndex = 1 + math.floor((bitIndex + bits - 1) / 8)
  local neededBytes = { bytes:byte(startByteIndex, endByteIndex) }

  local combinedNumber = 0
  for i, byte in ipairs(neededBytes) do
    combinedNumber = combinedNumber + bit32.lshift(byte, (i - 1) * 8)
  end

  return bit32.extract(combinedNumber, bitIndex % 8, bits)
end

return bitutils
