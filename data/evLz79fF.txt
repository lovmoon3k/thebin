local template = script:WaitForChild("RoleTextButton")

local rs = game:GetService("ReplicatedStorage")
local roles = rs:WaitForChild("Roles")
local remotes = rs:WaitForChild("RemoteEvents")


local roleButtons = {}
local selectedButton = nil

for _, role in pairs(roles:GetChildren()) do
	
	local config = role.Configuration
	
	local newButton = template:Clone()
	newButton.Name = role.Name
	newButton.NameTextLabel.Text = role.Name
	newButton.DescriptionTextLabel.Text = config.Description.Value
	newButton.BackgroundColor3 = config.Color.Value
	
	local vpfCam = Instance.new("Camera")
	vpfCam.Parent = newButton.CharacterViewportFrame
	newButton.CharacterViewportFrame.CurrentCamera = vpfCam
	
	local charModel = role.Character:FindFirstChildOfClass("Model"):Clone()
	charModel:PivotTo(CFrame.new())
	charModel.Parent = newButton.CharacterViewportFrame
	
	vpfCam.CFrame = CFrame.new(Vector3.new(0.5, 1.2, -3), charModel:GetPivot().Position + Vector3.new(0, 1, 0))
	
	newButton.MouseButton1Click:Connect(function()
		
		if selectedButton == newButton then return end
		
		if selectedButton then
			selectedButton.BackgroundColor3 = Color3.new(selectedButton.BackgroundColor3.R - 0.2, selectedButton.BackgroundColor3.G - 0.2, selectedButton.BackgroundColor3.B - 0.2)
		end
		
		selectedButton = newButton
		selectedButton.BackgroundColor3 = Color3.new(selectedButton.BackgroundColor3.R + 0.2, selectedButton.BackgroundColor3.G + 0.2, selectedButton.BackgroundColor3.B + 0.2)
	end)
	
	table.insert(roleButtons, newButton)
end

table.sort(roleButtons, function(a, b)
	return a.Name < b.Name
end)

for _, button in pairs(roleButtons) do
	button.Parent = script.Parent.RoleSelectorFrame.RolesScrollingFrame
end


script.Parent.RoleSelectorFrame.DeployTextButton.MouseButton1Click:Connect(function()
	
	if selectedButton then
		remotes.ChooseRole:FireServer(selectedButton.Name)
		script.Parent:Destroy()
	end
end)