#include <iostream>

// A utility function to swap to integers
void swap (int *a, int *b)
{
    int temp = *a;
    *a = *b;
    *b = temp;
}

void Permute(int arr[], int n);

int main()
{
    int N;
    std::cin >> N;
    int arr[N] = {0};
    int s[N] = {0};
    int input;
    
    for(int i = 0; i < N; i++) {
        std::cin >> input;
        s[i] = input;
        arr[i] = i+1;
    }
    // In each turn we Permute()
    int k = 0; // turns
    int score[N] = {0};
    
    for(int i = 0; i < N; i++) {
        Permute(arr, N);
        
        score[i] += arr[i];
        
        if (score[i] == s[i]) {
            break;
        }
        k++;
    }
    std::cout << std::endl;
    std::cout << "Turns: " << k << std::endl;
    
    return 0;
}

void Permute(int arr[], int n) {
    // Use a different seed value so that we don't get the same result each time
    srand (time(NULL));
 
    // Start from the last element. We don't need to run for the first element that's why i > 0
    for (int i = n - 1; i > 0; i--)
    {
        // Pick a random index from 0 to i
        int j = rand() % (i + 1);
 
        // Swap arr[i] with the element at random index
        swap(&arr[i], &arr[j]);
    }
}