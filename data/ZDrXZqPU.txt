#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
#define ll long long
#define OO 2'000'000'000
#define ull unsigned long long
#define nl '\n'
#define sz(x) (ll)(x.size())
#define all(x) x.begin(),x.end()
#define rall(s)  s.rbegin(), s.rend()
#define getline(s) getline(cin>>ws,s)
#define ceill(n, m) (((n) / (m)) + ((n) % (m) ? 1 : 0))
#define pi  3.141592653589793
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>
#define multi_ordered_set tree<int, null_type,less_equal<int>, rb_tree_tag,tree_order_statistics_node_update>

 
void Fast_IO(){
ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
// freopen("filename.in", "r", stdin);
// freopen("filename.txt", "w", stdout);
#ifndef ONLINE_JUDGE
freopen("input.txt", "r", stdin), freopen("output.txt", "w", stdout); 
#endif
}

int dx[] = { 2, 1, -1, -2, -2, -1, 1, 2 };
int dy[] = { 1, 2, 2, 1, -1, -2, -2, -1 };

map<ll,ll>mp;

ll dp[55][100005];
ll n;
vector<ll>v;
ll rec(ll idx,ll x){
  if(x==0) return 1;
  if(x<0) return 0;
  ll &ret = dp[idx][x];
  if(ret!=-1)return ret;
  ret = 0;
  for(int i=idx;i<n;i++){
    if(x-v[i]>=0 and mp[v[i]]){
      mp[v[i]]--;
      ret|=rec(i,x-v[i]);
      mp[v[i]]++;
    }
  }
  return ret;
}


void solve(){
  ll x; cin>>n>>x;
      v = vector<ll>(n);
  for(int i=0;i<n;i++){
    cin>>v[i];
    ll t; cin>>t;
    mp[v[i]] = t;
  }
  memset(dp,-1,sizeof(dp));
  if(rec(0,x))cout<<"Yes"<<nl;
  else cout<<"No"<<nl;




}
 
int main(){
    Fast_IO();
int t =1; 
//cin>>t;
while(t--){
solve();
}
return 0;
}  