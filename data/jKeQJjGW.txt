using FishNet.Object;
using System.Collections.Generic;
using UnityEngine;

public class GamePlayManager : NetworkBehaviour
{
    public static GamePlayManager instance;

    public Dictionary<int, PlayerMovementSP> players = new Dictionary<int, PlayerMovementSP>();

    public LocalShipDB LC_ShipDB;
    public LocalPlayerData LC_PlayerData;

    public int LC_PlayerShipID;

    public GameObject SpawnPoint;
    public GameObject LC_PlayerPrefab;


    public override void OnStartClient()
    {
        base.OnStartClient(); // call First Before Override

        if (base.IsOwner)
        {
            LC_PlayerShipID = LC_PlayerData.DBF_ShipModelID;
            LC_PlayerPrefab = LC_ShipDB.GetShip(LC_PlayerShipID);
            RPC_SelectplayerAndSpawn(LC_PlayerPrefab);
        }
      
    }

    public override void OnStartServer()
    {
        base.OnStartServer();
    }

    // Runs On Sterver
    [ServerRpc(RequireOwnership = false)]
    public void RPC_SelectplayerAndSpawn(GameObject gameObjectToSpawn)
    {
        GameObject go = Instantiate(gameObjectToSpawn);
        Spawn(go, base.Owner);
    }

    public void Start()
    {
        LC_ShipDB.InitData();
    }

    public void Awake()
    {
        instance = this;
    }
}


