using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;

namespace EntornosMultijugador2023.Tema2.EjersSemaforos
{
    class E09Semaforos
    {
        private const int N_FRAGMENTOS = 10;
        private const int N_HILOS = 3;
        private static volatile int[] fichero = new int[N_FRAGMENTOS];
        static Random _random = new Random();

        //static volatile int fragHechos = 0;
        static volatile int fragPendienteDescarga = 0;
        static SemaphoreSlim sem = new SemaphoreSlim(1);



        ////////////////////////////////////////////////////////////////////////////////////////////////////

        private static int DescargaDatos(int numFragmento)
        {
            Thread.Sleep(_random.Next(1000));
            return numFragmento * 2;
        }
        private static void MostrarFichero()
        {
            Console.WriteLine("-------------------");
           
            Console.Write("File = [");
            for (int i = 0; i < N_FRAGMENTOS; i++)
            {
                Console.WriteLine(fichero[i] + ",");
            }
            Console.WriteLine("]");
        }
        public static void Downloader()
        {
            // Mientras haya fragmentos que descargar
            // Descargar los datos del siguiente fragmento
            // Almacenar los datos en el array

            while (true)
            {
                sem.Wait();
                if (fragPendienteDescarga == N_FRAGMENTOS)
                {
                    sem.Release();
                    break;
                }
                int frag = fragPendienteDescarga;
                fragPendienteDescarga++;
                sem.Release();

                int dato = DescargaDatos(frag);
                fichero[frag] = dato;
            }

        }
        public static void Main(String[] args)
        {
            Thread[] threads = new Thread[N_HILOS];
            for (int i = 0; i < N_HILOS; i++)
            {
                threads[i] = new Thread(Downloader);
                threads[i].Start();
            }
            for (int i = 0; i < N_HILOS; i++)
            {
                threads[i].Join();
            }
            MostrarFichero();
        }

    }
}
