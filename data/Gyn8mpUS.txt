// NgJaBach: Forever Meadow <3

#include<bits/stdc++.h>

using namespace std;
typedef long long int ll;
typedef unsigned long long ull;
#define pb push_back
#define pob pop_back
#define mp make_pair
#define upb upper_bound
#define lwb lower_bound
#define bend(a) a.begin(),a.end()
#define rev(x) reverse(bend(x))
#define mset(a) memset(a, 0, sizeof(a))
#define fi first
#define se second
#define gcd __gcd
#define getl(s) getline(cin, s);
#define setpre(x) fixed << setprecision(x)
#define endl '\n'
const int N=200050,M=1000000007;
const ll INF=1e18+7;
map<string,set<string> >beside;
bool check(vector<string>A){
	map<string,int>totalbeside;
	for(int i=1;i<8;++i){
		if(beside[A[i-1]].count(A[i])){
			++totalbeside[A[i]];
			++totalbeside[A[i-1]];
		}
	}
	for(auto tmp:A) if(totalbeside[tmp]!=(int)beside[tmp].size()) return false;
	return true;
}
vector<string> minvec(vector<string>a,vector<string>b){
	for(int i=0;i<8;++i){
		if(a[i]<b[i]) return a;
		else if(a[i]>b[i]) return b;
	}
	return a;
}
int main(){
    ios_base::sync_with_stdio(NULL); cin.tie(nullptr); cout.tie(nullptr);
    freopen("lineup.in","r",stdin);
    freopen("lineup.out","w",stdout);
    int t;
    string a,b,c;
    vector<string>vec,ans;
    cin>>t;
    while(t--){
    	cin>>a;
    	cin>>c; cin>>c; cin>>c; cin>>c;
    	cin>>b;
//    	cout<<"--> "<<a<<" "<<b<<endl;
    	beside[a].insert(b);
    	beside[b].insert(a);
	}
	vec.pb("Bessie");
	vec.pb("Buttercup");
	vec.pb("Belinda");
	vec.pb("Beatrice");
	vec.pb("Bella");
	vec.pb("Blue");
	vec.pb("Betsy");
	vec.pb("Sue");
	sort(bend(vec));
	ans.clear();
	do{
		if(check(vec)){
			if(ans.empty()) ans=vec;
			else ans=minvec(ans,vec);
		}
	}while(next_permutation(bend(vec)));
	for(auto tmp:ans) cout<<tmp<<endl;
    return 0;
}
/*
==================================+
INPUT:                            |
------------------------------    |
3
Buttercup must be milked beside Bella
Blue must be milked beside Bella
Sue must be milked beside Beatrice
------------------------------    |
==================================+
OUTPUT:                           |
------------------------------    |

------------------------------    |
==================================+
*/
