#include <iostream>
#include <cmath>
#include <vector>
#include <queue>
#include <algorithm>
#include <string>
#include <stack>
#include <set>
#include <map>
#define pii pair <int, int>
#define pb(x) push_back(x)
using namespace std;
using ll = long long;
using ld = long double;
using db = double;
void cv(vector <int> &v) {
    for (auto x : v) cout << x << ' ';
    cout << "\n";
}

void cvl(vector <ll> &v) {
    for (auto x : v) cout << x << ' ';
    cout << "\n";
}


void cvv(vector <vector <int> > &v) {
    for (auto x : v) cv(x);
    cout << "\n";
}

void cvb(vector <bool> v) {
    for (bool x : v) cout << x << ' ';
    cout << "\n";
}

void cvs(vector <string>  v) {
    for (auto a : v) {
        cout << a << "\n";
    }
}

void cvp(vector <pii> a) {
    for (auto p : a) {
        cout << p.first << ' ' << p.second << "\n";
    }
    cout << "\n";
}



int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    int n;
    cin >> n;
    vector <int> v(n);
    vector <ll> dp(600, 0);
    for (int &i: v) {
        cin >> i;
        dp[i]++;
    }
    ll ans = 0;
    int til = 10;
    for (int a = 0; a < til; ++a) {
        for (int b = 0; b < til; ++b) {
            for (int c = 0; c < til; ++c) {
                for (int d = 0; d < til; ++d) {
                    if (a * b <= c * d) {
                        ans += dp[a] * dp[b] * dp[c] * dp[d];
                    }
                }
            }
        }
    }
    cout << ans;
}
