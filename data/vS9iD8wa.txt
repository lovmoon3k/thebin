#include<iostream>
using namespace std;

class Queue{
    private:
        int front,rear,size;
        int *elements;
    public:
        Queue() {
            front=rear=-1;
            size = 10;
            elements = new int[size];
        }
        Queue(int max_size) {
            front=rear=-1;
            size = max_size;
            elements = new int[size];
        }
        void enqueue(int data);
        int dequeue();
        void display();
};
void Queue :: enqueue(int data) {
    if(rear+1 != size) {
        if(rear==-1) 
            front++;
        elements[++rear] = data;
    }
    else {
        cout<<"overflow"<<endl;
    }
}
int Queue :: dequeue() {
    if(front<=rear) {
        return elements[front++];
    }
    else {
        cout<<"underflow"<<endl;
        return -1;
    }
}
void Queue :: display() {
    if(front == -1) {
        cout<<"Queue is empty"<<endl;
    }
    else {
        cout<<"Elements in Queue: "<<endl;
        for(int i=front; i<=rear; i++) {
            cout<<elements[i]<<endl;
        }
    }
}
int main() {
    Queue obj(5);
    obj.enqueue(10);
    obj.enqueue(87);
    obj.enqueue(13);
    obj.enqueue(90);
    obj.enqueue(45);
    obj.enqueue(85);
    obj.display();
    cout<<"Elements in Dequeue : "<<endl;
    cout<<obj.dequeue()<<endl;
    cout<<obj.dequeue()<<endl;
    cout<<obj.dequeue()<<endl;
    cout<<obj.dequeue()<<endl;
    cout<<obj.dequeue()<<endl;
    cout<<obj.dequeue()<<endl;
    return 0;
}