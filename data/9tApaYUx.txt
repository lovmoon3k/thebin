#include <iostream>
#include <vector>
#include <fstream>
#include <algorithm>

#define inputFile "sotrang.inp"
#define outputFile "sotrang.out"

using namespace std;

int n;
vector<int> v(2800, 0);

void Input()
{
    ifstream f;
    f.open(inputFile);

    f >> n;

    f.close();
}

int Process()
{
    v[4] = 1;
    for (int page = 5; page < 10; ++page)
    {
        v[page] = v[page - 1] + 1;
    }

    for (int page = 10; page < 100; ++page)
    {
        v[page] = v[page - 1] + 2;
    }

    for (int page = 100; page < 1000; ++page)
    {
        v[page] = v[page - 1] + 3;
    }

    for (int page = 1000; page < 2800; ++page)
    {
        v[page] = v[page - 1] + 4;
    }

    vector<int>::iterator i;
    i = find(v.begin(), v.end(), n);

    int position = 0;
    if (i != v.end())
    {
        position = i - v.begin();
    }

    return position;
}

void Output()
{
    int result = Process();

    ofstream f;
    f.open(outputFile);

    f << result;

    f.close();
}

int main()
{
    Input();
    Process();
    Output();

    return 0;
}