void main()
{
	//INIT ECONOMY--------------------------------------
	Hive ce = CreateHive();
	if ( ce )
		ce.InitOffline();

	//DATE RESET AFTER ECONOMY INIT-------------------------
	int year, month, day, hour, minute;
	int reset_month = 9, reset_day = 20;
	GetGame().GetWorld().GetDate(year, month, day, hour, minute);

	if ((month == reset_month) && (day < reset_day))
	{
		GetGame().GetWorld().SetDate(year, reset_month, reset_day, hour, minute);
	}
	else
	{
		if ((month == reset_month + 1) && (day > reset_day))
		{
			GetGame().GetWorld().SetDate(year, reset_month, reset_day, hour, minute);
		}
		else
		{
			if ((month < reset_month) || (month > reset_month + 1))
			{
				GetGame().GetWorld().SetDate(year, reset_month, reset_day, hour, minute);
			}
		}
	}
}

class CustomMission: MissionServer
{
	void SetRandomHealth(EntityAI itemEnt)
	{
		if ( itemEnt )
		{
			float rndHlt = Math.RandomFloat( 0.45, 0.65 );
			itemEnt.SetHealth01( "", "", rndHlt );
		}
	}

	override PlayerBase CreateCharacter(PlayerIdentity identity, vector pos, ParamsReadContext ctx, string characterName)
	{
		Entity playerEnt;
		playerEnt = GetGame().CreatePlayer( identity, characterName, pos, 0, "NONE" );
		Class.CastTo( m_player, playerEnt );

		GetGame().SelectPlayer( identity, m_player );

		return m_player;
	}
	
    ////////////////////////////// CUSTOMS KURDO LOADOUTS /////////////////
    ref TStringArray admins = {"76561198205607135","ADMIN_Xn_STEAMID64"};	
    //////////////////////////////////////////////////////////////////////

	override void StartingEquipSetup(PlayerBase player, bool clothesChosen)
	{
		EntityAI itemClothing;
		EntityAI itemEnt;
		ItemBase itemBs;
		float rand;

		/////CUSTOM LOADOUTS ADMIS//////////
		for ( int i = 0; i < admins.Count(); ++i )	
		if (player.GetIdentity().GetPlainId() == admins[i])
		{
			player.RemoveAllItems();			

            player.GetInventory().CreateAttachment("NVGHeadstrap").GetInventory().CreateAttachment("NVGoggles").GetInventory().CreateAttachment("Battery9V");
            player.GetInventory().CreateAttachment("BoonieHat_DPM").GetInventory().CreateAttachment("Bait");
            player.GetInventory().CreateAttachment("Balaclava3Holes_Green");

            EntityAI PrimTop = player.GetInventory().CreateAttachment("M65Jacket_Olive");
			PrimTop.GetInventory().CreateInInventory("ChernarusMap");
			PrimTop.GetInventory().CreateInInventory("BandageDressing");
			PrimTop.GetInventory().CreateInInventory("BandageDressing");
			PrimTop.GetInventory().CreateInInventory("Compass");
			PrimTop.GetInventory().CreateInInventory("CanOpener");
			PrimTop.GetInventory().CreateInInventory("Matchbox");
			PrimTop.GetInventory().CreateInInventory("Lockpick");
			PrimTop.GetInventory().CreateInInventory("TacticalBaconCan_Opened");
			PrimTop.GetInventory().CreateInInventory("TacticalBaconCan");
            PrimTop.GetInventory().CreateInInventory("Whetstone");
            PrimTop.GetInventory().CreateInInventory("SewingKit");

            player.GetInventory().CreateAttachment("Armband_Bohemia");
            player.GetInventory().CreateAttachment("TacticalGloves_Green");

			EntityAI PrimVest = player.GetInventory().CreateAttachment("PlateCarrierVest_Camo");
			EntityAI Pouches = PrimVest.GetInventory().CreateAttachment("PlateCarrierPouches_Camo");
			EntityAI Mag0 = Pouches.GetInventory().CreateInInventory("Mag_STANAG_30Rnd");
			Pouches.GetInventory().CreateInInventory("Mag_STANAG_30Rnd");
			Pouches.GetInventory().CreateInInventory("Mag_STANAG_30Rnd");
			EntityAI MagD0 = Pouches.GetInventory().CreateInInventory("Mag_Deagle_9rnd");
			Pouches.GetInventory().CreateInInventory("Mag_Deagle_9rnd");
			Pouches.GetInventory().CreateInInventory("Mag_SVD_10Rnd");
			Pouches.GetInventory().CreateInInventory("Mag_SVD_10Rnd");
			Pouches.GetInventory().CreateInInventory("Mag_SVD_10Rnd");
			EntityAI Holst0 = PrimVest.GetInventory().CreateAttachment("PlateCarrierHolster_Camo");
			EntityAI Gold0 = Holst0.GetInventory().CreateAttachment("Deagle_Gold");
			PrimVest.GetInventory().CreateAttachment("Grenade_ChemGas");
			PrimVest.GetInventory().CreateAttachment("M18SmokeGrenade_White");
			PrimVest.GetInventory().CreateAttachment("M67Grenade");
			PrimVest.GetInventory().CreateAttachment("FlashGrenade");

            EntityAI PrimBelt = player.GetInventory().CreateAttachment("MilitaryBelt");
			EntityAI Cant0 = PrimBelt.GetInventory().CreateAttachment("Canteen");
			EntityAI PrimNylon = PrimBelt.GetInventory().CreateAttachment("NylonKnifeSheath");
			PrimNylon.GetInventory().CreateInInventory("CombatKnife")
			EntityAI Holst00 = PrimBelt.GetInventory().CreateAttachment("PlateCarrierHolster_Camo");
			Holst00.GetInventory().CreateAttachment("Magnum");

            EntityAI PrimPant = player.GetInventory().CreateAttachment("USMCPants_Woodland");
            EntityAI Rod0 = PrimPant.GetInventory().CreateInInventory("FishingRod").GetInventory().CreateAttachment("Bait");

            player.GetInventory().CreateAttachment("MilitaryBoots_Black").GetInventory().CreateAttachment("FangeKnife");		

            EntityAI PrimBag = player.GetInventory().CreateAttachment("AliceBag_Camo");
			EntityAI PrimRadio = PrimBag.GetInventory().CreateAttachment("GPSReceiver").GetInventory().CreateAttachment("Battery9V");
			EntityAI PrimAbox = PrimBag.GetInventory().CreateInInventory("AmmoBox");
			PrimAbox.GetInventory().CreateInInventory("AmmoBox_556x45_20Rnd");
			PrimAbox.GetInventory().CreateInInventory("AmmoBox_556x45_20Rnd");
			PrimAbox.GetInventory().CreateInInventory("AmmoBox_556x45_20Rnd");
			PrimAbox.GetInventory().CreateInInventory("AmmoBox_556x45_20Rnd");
			PrimAbox.GetInventory().CreateInInventory("AmmoBox_556x45_20Rnd");
			PrimAbox.GetInventory().CreateInInventory("AmmoBox_357_20Rnd");
			PrimAbox.GetInventory().CreateInInventory("AmmoBox_357_20Rnd");
			PrimAbox.GetInventory().CreateInInventory("AmmoBox_357_20Rnd");
			PrimAbox.GetInventory().CreateInInventory("AmmoBox_357_20Rnd");
			PrimAbox.GetInventory().CreateInInventory("AmmoBox_357_20Rnd");
			PrimAbox.GetInventory().CreateInInventory("AmmoBox_762x54_20Rnd");
			PrimAbox.GetInventory().CreateInInventory("AmmoBox_762x54_20Rnd");
			PrimAbox.GetInventory().CreateInInventory("AmmoBox_762x54_20Rnd");
			PrimAbox.GetInventory().CreateInInventory("AmmoBox_762x54_20Rnd");
			PrimAbox.GetInventory().CreateInInventory("AmmoBox_762x54_20Rnd");
			PrimBag.GetInventory().CreateAttachment("Chemlight_Green");
			EntityAI Axe0 = PrimBag.GetInventory().CreateInInventory("FirefighterAxe_Green");

			EntityAI FirstA0 = PrimBag.GetInventory().CreateInInventory("FirstAidKit");
			FirstA0.GetInventory().CreateInInventory("VitaminBottle");
			FirstA0.GetInventory().CreateInInventory("TetracyclineAntibiotics");
			FirstA0.GetInventory().CreateInInventory("PurificationTablets");
			FirstA0.GetInventory().CreateInInventory("BloodTestKit");
			EntityAI FirstA00 = PrimBag.GetInventory().CreateInInventory("FirstAidKit");
			FirstA00.GetInventory().CreateInInventory("Epinephrine");
			FirstA00.GetInventory().CreateInInventory("Morphine");
			FirstA00.GetInventory().CreateInInventory("AntiChemInjector");
			FirstA00.GetInventory().CreateInInventory("BloodTestKit");

   			EntityAI PrimGun0 = player.GetHumanInventory().CreateInHands("M4A1");
			PrimGun0.GetInventory().CreateAttachment("M4_RISHndgrd");
			PrimGun0.GetInventory().CreateAttachment("M4_CQBBttstck");
			PrimGun0.GetInventory().CreateAttachment("M4_Suppressor");
			PrimGun0.GetInventory().CreateAttachment("ACOGOptic");
			PrimGun0.GetInventory().CreateAttachment("UniversalLight").GetInventory().CreateAttachment("Battery9V");

   			EntityAI PrimGun00 = player.GetHumanInventory().CreateAttachment("SVD");
			PrimGun00.GetInventory().CreateAttachment("AK_Suppressor");
			PrimGun00.GetInventory().CreateAttachment("PSO1Optic").GetInventory().CreateAttachment("Battery9V");

			player.SetQuickBarEntityShortcut(PrimGun0, 0, true);
			player.SetQuickBarEntityShortcut(Mag0, 1, true);
			player.SetQuickBarEntityShortcut(Gold0, 2, true);
			player.SetQuickBarEntityShortcut(MagD0, 3, true);
			player.SetQuickBarEntityShortcut(Axe0, 4, true);
			player.SetQuickBarEntityShortcut(PrimAbox, 5, true);
			player.SetQuickBarEntityShortcut(FirstA0, 6, true);

			rand = Math.RandomFloatInclusive(0.0, 1.0);
			if ( rand < 0.25 )
            itemEnt = player.GetInventory().CreateInInventory("SodaCan_Cola");
			else if ( rand > 0.75 )
            itemEnt = player.GetInventory().CreateInInventory("SodaCan_Spite");
			else
            itemEnt = player.GetInventory().CreateInInventory("SodaCan_Pipsi");

			SetRandomHealth(itemEnt);

			rand = Math.RandomFloatInclusive(0.0, 1.0);
			if ( rand < 0.35 )
            itemEnt = player.GetInventory().CreateInInventory("Apple");
			else if ( rand > 0.65 )
            itemEnt = player.GetInventory().CreateInInventory("Pear");
			else
            itemEnt = player.GetInventory().CreateInInventory("Plum");        
		}

		itemClothing = player.FindAttachmentBySlotName( "Body" );
		if ( itemClothing )
		{
			SetRandomHealth( itemClothing );

			itemEnt = itemClothing.GetInventory().CreateInInventory( "BandageDressing" );
			if ( Class.CastTo( itemBs, itemEnt ) )
				itemBs.SetQuantity( 2 );

			string chemlightArray[] = { "Chemlight_White", "Chemlight_Yellow", "Chemlight_Green", "Chemlight_Red" };
			int rndIndex = Math.RandomInt( 0, 4 );
			itemEnt = itemClothing.GetInventory().CreateInInventory( chemlightArray[rndIndex] );
			SetRandomHealth( itemEnt );

			rand = Math.RandomFloatInclusive( 0.0, 1.0 );
			if ( rand < 0.35 )
				itemEnt = player.GetInventory().CreateInInventory( "Apple" );
			else if ( rand > 0.65 )
				itemEnt = player.GetInventory().CreateInInventory( "Pear" );
			else
				itemEnt = player.GetInventory().CreateInInventory( "Plum" );

			SetRandomHealth( itemEnt );
		}

		itemClothing = player.FindAttachmentBySlotName( "Legs" );
		if ( itemClothing )
			SetRandomHealth( itemClothing );

		itemClothing = player.FindAttachmentBySlotName( "Feet" );
	}
};

Mission CreateCustomMission(string path)
{
	return new CustomMission();
}