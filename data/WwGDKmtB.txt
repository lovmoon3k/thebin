/*
by: senb1
*/

#include <bits/stdc++.h>

#define ll long long
#define all(x) x.begin(), x.end()
#define fr first
#define sc second
#define mk make_pair

using namespace std;

const ll mod = 1e9 + 7;
const ll maxn = 1e3 + 5;
const ll inf = 1e9 + 6;

int dp[maxn][maxn];
void solve() {
    string a, b;
    cin >> a >> b;
    int n = a.size();

    for (int i = 0; i <= n; i++) {
        dp[i][0] = i;
        dp[0][i] = i;
    }

    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= n; j++) {
            if (a[i - 1] == b[j - 1])
                dp[i][j] = dp[i - 1][j - 1];
            else
                dp[i][j] = min(dp[i - 1][j - 1] + 2,
                               min(dp[i][j - 1] + 1, dp[i - 1][j] + 1));
        }
    }
    cout << dp[n][n];
}
/*
PQS
QPS
*/

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);

    int t = 1;
    // cin >> t;
    while (t--)
        solve();
}