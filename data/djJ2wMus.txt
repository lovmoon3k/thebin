const int buttonPin = 2;  // the number of the pushbutton pin
const int ledPin = 13;    // the number of the LED pin
int number = 0;
String message;

// variables will change:
int buttonState = 0;  // variable for reading the pushbutton status

void setup() {
  // initialize the LED pin as an output:
  pinMode(ledPin, OUTPUT);
  // initialize the pushbutton pin as an input:
  pinMode(buttonPin, INPUT);
  Serial.begin(9600);
}

void loop() {
  // read the state of the pushbutton value:
  buttonState = digitalRead(buttonPin);

  // check if the pushbutton is pressed. If it is, the buttonState is HIGH:
  if (buttonState == HIGH) {
    // turn LED on:
    digitalWrite(ledPin, HIGH);
    char buffer[10];
    char array[20] = "Ala ma kota ";
	sprintf(buffer, "%d", number);
	strcat(array, buffer);
    strcat(array, "\n");
    Serial.write(array);
    number++;
  } else {
    // turn LED off:
    digitalWrite(ledPin, LOW);
  }
}


#include <LiquidCrystal.h>

// initialize the library with the numbers of the interface pins
LiquidCrystal lcd(12, 11, 5, 4, 3, 2);

void setup() {
  // set up the LCD's number of columns and rows:
  lcd.begin(16, 2);
  // initialize the serial communication:
  Serial.begin(9600);
  
   // initialize the LED pin as an output:
  pinMode(13, OUTPUT);
  // initialize the pushbutton pin as an input:
  pinMode(2, INPUT);
}

void loop() {
  // read the incoming data:
  if (Serial.available() > 0) {
    digitalWrite(13, HIGH);
    // read the incoming line:
    String incomingLine = Serial.readStringUntil('\n');
    // trim the line to a maximum of 32 characters (16 per row):
    incomingLine = incomingLine.substring(0, 32);
    // write the first 16 characters on the first row:
    lcd.setCursor(0, 0);
    if (incomingLine.length() > 16) {
      lcd.print(incomingLine.substring(0, 16));
    } else {
      lcd.print("                "); // clear the first row if the text is shorter than 16 characters
      lcd.setCursor(0, 0);
      lcd.print(incomingLine);
    }
    // write the remaining characters on the second row:
    lcd.setCursor(0, 1);
    if (incomingLine.length() > 16) {
      lcd.print(incomingLine.substring(16, incomingLine.length()));
    } else {
      lcd.print("                "); // clear the second row if the text is shorter than 32 characters
    }
  }
}

