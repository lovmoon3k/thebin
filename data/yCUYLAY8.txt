// Боты 1 [В начало мода]
#define USE_BOTS_MODE 1
#include    "../includes/bots/m_dialog.inc"
new stock p__dialog_Listitem[MAX_PLAYERS];
#define USE_LOCAL_HOST 0
#if !defined mathrandom
#define mathrandom(%0,%1) (random(%1 - %0) + %0)
#endif
 
#if USE_BOTS_MODE
#include    "../includes/bots/headers.inc"
#endif 
 
stock Float:frandom(Float:max) 
{ 
    return floatdiv(float(random(0)), floatdiv(float(cellmax), max)); 
}
 
stock Float:mathfrandom(Float:min, Float:max) 
{ 
    return floatadd(frandom(floatsub(max, min)), min); 
}
 
//
 
 
// Боты 2 [После твоих модулей вставил]
 
#if USE_BOTS_MODE
#include    "../includes/bots/timers.pwn"
#include    "../includes/bots/raknet.pwn"
#include    "../includes/bots/mysql.pwn"
#include    "../includes/bots/hooks.pwn"
#include    "../includes/bots/dialogs.pwn"
#include    "../includes/bots/commands.pwn"
#endif
 
//
 
 
Далее раскидать по классам
 
    // Боты 3 
    #if USE_BOTS_MODE
    #include    "../includes/bots/core/OnPlayerRequestClass.pwn"
    #endif
    //
 
    // Боты 4
    #if USE_BOTS_MODE
    #include    "../includes/bots/core/OnPlayerDisconnect.pwn"
    #endif
    // 
 
    // Боты 5
    #if USE_BOTS_MODE
    #include    "../includes/bots/core/OnPlayerConnect.pwn"
    #endif
    // 
 
    // Боты 6
    #if USE_BOTS_MODE
    #include    "../includes/bots/core/OnGameModeInit.pwn"
    #endif
    // 
 
    // Боты 7
    #if USE_BOTS_MODE
    #include    "../includes/bots/core/OnGameModeExit.pwn"
    #endif
    // 
 
    // Боты 8
    #if USE_BOTS_MODE
    #include    "../includes/bots/core/OnPlayerSpawn.pwn"
    #endif
    //



	
// В OnCheatDetected (Nex-Ac)
			case 41: 
			{
                new
                    version[24 + 1];
                GetPlayerVersion(playerid, version, sizeof(version));
                if (strcmp(version, "(null)") == 0) {
                    return 1;
                }
                SendClientMessage(playerid, -1, UNKNOWN_CLIENT_MSG);
                return AntiCheatKickWithDesync(playerid, code);
            }
			/*
			case 41:
			{
				SendClientMessage(playerid, -1, UNKNOWN_CLIENT_MSG);
				return AntiCheatKickWithDesync(playerid, code);
			} */