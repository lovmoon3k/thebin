
// clang-format off
#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <cmath>
#include <stack>
#include <iomanip>
#include <fstream>
#include <string>
#include <set>
#include <deque>
#include <queue>
#include <map>
#include <bitset>
#include <random>
#include <list>
#include <unordered_map>
#include <unordered_set>
#include <cassert>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef string str;
//typedef __int128 ultraint;
#define sqrt sqrtl
#define F first
#define S second
#define endl '\n'
#define all(vc666) vc666.begin(), vc666.end()
#define allr(vc666) vc666.rbegin(), vc666.rend()
#define int long long
#define degug(x) cerr (#x) << " " << (x) << endl;

const ll INF = (ll)2e18;
const ll inf = 1e9 + 7;
const ll ONE = -1;
const ll mod = 998244353;
const ll LG = 20;
ld EPS = 1e-12;
ld PI = 3.1415926535897932384;
mt19937_64 gen(rand() + rand());

string s;
vector <__int128> pw(51);
int i, j, m, k, n;
__int128 zxc = 64;

__int128 number(string& s2, int id) {
    __int128 res = 0;
    if (id == s2.size()) {
        return 0;
    }
    for (i = 0; i < 64; i++) {
        if (s2[id] == s[i]) {
            res += number(s2, id + 1);
            break;
        }
        else {
            res += pw[(int)s2.size() - id - 1];
        }
    }
    return res;
}

void solve() {
    s = "#$0123456789";
    string s2, s3;
    for (i = 0; i < 26; i++) {
        s.push_back('a' + i);
        s.push_back('A' + i);
    }
    sort(all(s));
    i = 0;
    pw[i] = 1;
    for (i = 1; i <= 50; i++) {
        pw[i] = pw[i - 1] * zxc;
    }
    cin >> k >> m;
    __int128 id1, id2;
    while (m--) {
        cin >> s2 >> s3;
        id1 = number(s2, 0);
        id2 = number(s3, 0);
        bool flag = false;
        for (i = 0; i < k * 6; i++) {
            if (id1 == id2) {
                cout << i << endl;
                flag = true;
                break;
            }
            id1 = id1 + id1;
            if (id1 >= pw[k]) {
                id1 = id1 % pw[k];
                id1++;
            }
        }
        if (!flag) {
            cout << -1 << endl;
        }
    }
}

signed main() {
#ifdef _DEBUG
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    //freopen("concert.in", "r", stdin);
    //freopen("concert.out", "w", stdout);
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    int t = 1;
    //cin >> t;
    while (t--) solve();
}
//Deisgned by skimono
