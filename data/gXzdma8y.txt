#include <iostream>
#include <fstream>

using namespace std;
// Создать класс для работы с текстовым файлом.
// В файл записать название, фамилию автора и год издания книги.
// Переписать в новый файл все книги после указанного года (год вводится с клавиатуры).
// Перегрузить ввод/вывод.

struct Book{
    char name[50];
    char author[50];
    char year[10];
    Book(){
        strcpy(this -> name, "undefined");
        strcpy(this -> author, "undefined");
        strcpy(this -> year, "undefined");
    }
    Book(const Book& book) {
        strcpy(this -> name, book.name);
        strcpy(this -> author, book.author);
        strcpy(this -> year, book.year);
    }
    void setName(char* name){
        strcpy(this -> name, name);
    }
    void setAuthor(char* author){
        strcpy(this -> author, author);
    }
    void setYear(char* year){
        strcpy(this -> year, year);
    }
    Book(char* name, char* author, char* year) {
        strcpy(this -> name, name);
        strcpy(this -> author, author);
        strcpy(this -> year, year);
    }
    friend ostream& operator << (ostream& out, Book book) {
        out << book.name << " " << book.author << " " << book.year << endl;
        return out;
    }
    friend istream& operator >> (istream& in, Book& book) {
        cout << "Введите название книги: ";
        char* s = new char[50];
        in >> s;
        book.setName(s);
        cout << "Введите автора книги: ";
        in >> s;
        book.setAuthor(s);
        s = new char[20];
        cout << "Введите год издания книги: ";
        in >> s;
        book.setYear(s);
        return in;
    }
};

class File{
    fstream file;
    fpos_t pos;
    void updatePos(){
        pos = file.tellg();
    }
public:
    File(char* path) {
        file.open(path, ios::in | ios::out);
        pos = 0;
    }
    friend File& operator << (File& out, Book book) {
        out.file << book.name << " " << book.author << " " << book.year << endl;
        return out;
    }
    friend File& operator >> (File& in, Book& book) {
        in.file >> book.name >> book.author >> book.year;
        return in;
    }
    void resetPos() {
        file.seekp(0);
        pos = 0;
    }
};

int main() {
    File file("/Users/dankulakovich/CLionProjects/untitled17/text.txt"),
    file1("/Users/dankulakovich/CLionProjects/untitled17/text1.txt");
    int n;
    cout << "Enter amount of books" << endl;
    cin >> n;
    Book *books1 = new Book[n], *books = new Book[n];
    for (int i = 0; i < n; i++) {
        cin >> books1[i];
    }
    for (int i = 0; i < n; i++) {
        file << books1[i];
    }
    file.resetPos();
    for (int i = 0; i < n; i++) {
        file >> books[i];
    }
    int year;
    cout << "Enter year" << endl;
    cin >> year;
    for (int i = 0; i < n; i++) {
        int cur_year = atoi(books[i].year);
        if (cur_year >= year) {
            file1 << books[i];
        }
    }
    return 0;
}