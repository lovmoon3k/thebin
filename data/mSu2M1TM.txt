using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;
namespace TasksOOP
{
    
    class TK
    {
        private string name;
        private int count;
        public List<string> countries = new List<string>();
        public string Name { get => name; }
        public int Count { get => count; set => count = value; }
        public string this[int index]
        {
            get => countries[index];
        }
        public TK(string name, int count, List<string> vs)
        {
            this.name = name;
            Count = count;
            countries.AddRange(vs);
        }
        public override string ToString()
        {
            return $"Транспортная компания - {Name} с автопарком в {Count} машин, который сотрудничает с такими странами, как {string.Join(", ", countries)}";
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            
            //7 task
            List<TK> tKs = new List<TK>() { new TK("dada", 6, new List<string>(){"bdadda", "dadad", "dasdasdasdsad", "nurlat", "sdsadadasdsa", "OAE"}), new TK("dada", 5, new List<string>() { "bdsa", "dadadasdasdd", "dasda12sdasdsad", "dubai", "aseqs"}), new TK("aedd", 4, new List<string>() { "aoas", "fvs", "sdad", "nurlat" }), };
            var svs = tKs.Max(x => x.countries.Count);
            Console.WriteLine($"Max: {svs}");
            var selected = tKs.Where(x => x.countries.Count == svs);
            foreach (var item in selected)
            {
                Console.WriteLine(item + "\t");
            }
            Console.WriteLine("\nSorted by Name");
            var sorted = tKs.OrderBy(x => x.Name);
            foreach (var item in sorted)
            {
                Console.WriteLine(item + "\t");
            }
            Console.ReadKey();
        }
    }
}
