//  Репетиторство: a-1a.livejournal.com/52305.html

//  Файл №1 "main.cpp"


#include <windows.h>                    //  Подключаем (заголовочный файл ) библиотеки функций WinAPI  

//////////////////////////////////////////  Глобальные переменные 
HWND                  hWnd;             //  хедер ГЛАВНОГО! окна  
HINSTANCE        hInstance; 			//  Экземпляр этой программы 


LRESULT CALLBACK WndProc(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)   //  Функция обработки сообщений от...
{																				  //  ...OS Windows	
	switch(message)
	{
		case  WM_CREATE:   break;                          //  Принимаем однократное сообщение для инициализации
		
	    case WM_DESTROY:   PostQuitMessage(0);             //  Принимаем однократное сообщение для ДЕ_инициализации
		 	 			   break;		 	 			   
		        default:   return DefWindowProc(hWnd, message, wParam, lParam);   // обработка OS остальных сообщений
	}
	return 0;
}

//---------------------------------------------------------------------------------------------------------------------
int WINAPI WinMain(HINSTANCE hInst, HINSTANCE hPrevInstance, LPSTR lpszCmd, int nCmdShow)
{
	
	WNDCLASS WC;                                                         //   Создаём элемент оконной структуры	
			 WC.style         = 0;
			 WC.lpfnWndProc   = WndProc;                                 //   Имя оконной функции
			 WC.cbClsExtra    = 0;
			 WC.cbWndExtra    = 0;
			 WC.hInstance     = hInstance = hInst;                       //   Дескриптор приложения
			 WC.hIcon		  = LoadIcon(hInstance, "MYICON");           //   Загружаем иконку
			 WC.hCursor	      = LoadCursor(NULL, IDC_ARROW);             //   Загружаем тип курсора 
			 WC.hbrBackground = (HBRUSH)GetStockObject(BLACK_BRUSH);     //   Цвет заливки окна выбрали
			 WC.lpszMenuName  = "x1MENU";                                //   Указываем имя меню 
			 WC.lpszClassName = "dllBridge";                             //   Придумали сами имя класса окна  
                                                     // Cначала регистрируем класс главного окна программы  
	if(!RegisterClass(&WC)) return 0;                // если класс не зарегистрирован, то выходим 
	
	hWnd =  CreateWindow("dllBridge",                // ————— создаем окно класса dllBridge —————
						  "Template",                // заголовок окна (надпись на верхней-синей полосе)
				 WS_OVERLAPPEDWINDOW,                // стиль окна (перекрывающееся)
						    100, 100,                // координата X, Y левого верхнего угла окна						
						    648, 526,                // размеры окна (Ширина & Высота)					                           
					          0,   0,                // Дескриптор родительского окна и идентификатор дочернего окна.					                              
				        hInstance, 0);               // Дескриптор экземпляра приложения
					                                
	         if(!hWnd)  return 0;				     //  если окно не создано, то выходим (программа не запустилась)
	ShowWindow  (hWnd, nCmdShow);				     //  отобразить окно на экране
	UpdateWindow(hWnd);								 //  обновить окно       								  									   								   


               MSG      msg;                         //  Создаём элемент структуры сообщений от OS Windows
	while(  GetMessage(&msg, 0, 0, 0))               //  Цикл обработки сообщений	
	{ TranslateMessage(&msg);                        //  Принятие и "проталкивание" сообщений в очереди
	   DispatchMessage(&msg);
	} 

return msg.wParam;
}



//  Файл №2 "Menu.rc" ////////////////////////////////////////////////////////////////////////////////////////////////////////

x1MENU MENU
{

	POPUP "&Options"
	{
	  MENUITEM "&About",        301
	  MENUITEM SEPARATOR
	  MENUITEM "&Exit" ,        302
	}
}

MYICON ICON ico.ico


