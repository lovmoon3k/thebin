

local Module = require(script.Parent:WaitForChild("EditThis"))

local GroupId = Module.GroupId
local Users = Module.Users
local AllowedCommands = Module.AllowedCommands
warn(AllowedCommands)


local MinimumRankToUseCommands = Module.MinimumRank

if Module.UserSetup == true and  Module.GroupSetup ~= true then
	GroupId = 000000
	MinimumRankToUseCommands = 9999
elseif Module.GroupSetup == true and  Module.UserSetup ~= true then
	Users = {}
end

local CustomSlock = Module.CustomSlockReason
local SetSlockReason = Module.SlockReason
local slock = false
local bans = {}
local SlockReason
local Prefix = Module.Prefix
warn("King Admin loaded! Prefix: "..Prefix.." Group ID: "..GroupId.." Minimum Rank: "..MinimumRankToUseCommands)

local function getPlayerFromPartialName(PartialName)
	local foundName = nil
	local Players = game.Players:GetPlayers()
	for i = 1, #Players do
		local PossiblePlayer = Players[i]
		if string.find(string.lower(PossiblePlayer.Name), string.lower(PartialName)) then
			foundName = PossiblePlayer.Name
		end
	end
	
	if not foundName then
		return nil
	else
		return foundName
	end
end

local function TeamPartial(PartialName)
	local foundName = nil
	local Players = game.Teams:GetTeams()
	for i = 1, #Players do
		local PossiblePlayer = Players[i]
		if string.find(string.lower(PossiblePlayer.Name), string.lower(PartialName)) then
			foundName = PossiblePlayer.Name
		end
	end
	
	if not foundName then
		return nil
	else
		return foundName
	end
end

game.Players.PlayerAdded:Connect(function(Player)
	
	
	Player.Chatted:Connect(function(Msg)
		local message = Msg:lower():split(" ")
		local msg = Msg:lower()
		local Split = Msg:split(" ")
		if Player:GetRankInGroup(GroupId) >= MinimumRankToUseCommands or table.find(Users,Player.Name) then
			if message[1] == Prefix.."ref" then
				local PlayerToRef
				local PlrtoRef
				if message[2] == "all" then
					for i, plr in pairs(game.Players:GetPlayers()) do
						local Pos = plr.Character:GetPrimaryPartCFrame()
						plr:LoadCharacter()
						plr.Character:SetPrimaryPartCFrame(Pos)
						local ForceField = Instance.new("ForceField")
						ForceField.Parent = plr.Character
						wait(5)
						ForceField:Destroy()
						warn("Refreshed "..plr.Name)
					end
				elseif message[2] == "others" then
					for i, plr in pairs(game.Players:GetPlayers()) do
						if  plr.Name ~= Player.Name then
						local Pos = plr.Character:GetPrimaryPartCFrame()
						plr:LoadCharacter()
						plr.Character:SetPrimaryPartCFrame(Pos)
						local ForceField = Instance.new("ForceField")
						ForceField.Parent = plr.Character
						wait(5)
						ForceField:Destroy()
							warn("Refreshed "..plr.Name)
							end
					end
				elseif message[2] == "me" then
						local Pos = Player.Character:GetPrimaryPartCFrame()
						Player:LoadCharacter()
						Player.Character:SetPrimaryPartCFrame(Pos)
						local ForceField = Instance.new("ForceField")
						ForceField.Parent = Player.Character
						wait(5)
						ForceField:Destroy()
						warn("Refreshed "..Player.Name)
				else
					PlayerToRef = getPlayerFromPartialName(message[2])
					PlrtoRef = game.Players:FindFirstChild(PlayerToRef)
					warn(PlrtoRef.Name)
					warn(PlrtoRef.Parent)
					if PlrtoRef ~= nil then
						warn("Found Player")
						local Pos = PlrtoRef.Character:GetPrimaryPartCFrame()
						PlrtoRef:LoadCharacter()
						PlrtoRef.Character:SetPrimaryPartCFrame(Pos)
						local ForceField = Instance.new("ForceField")
						ForceField.Parent = PlrtoRef.Character
						wait(5)
						ForceField:Destroy()
						warn("Refreshed "..PlrtoRef.Name)
					end
				end
		elseif message[1] == Prefix.."slock" then
			slock = true
			if CustomSlock == true then
				SlockReason = Msg:split(":slock ")[2]
				warn("Slock Reason custom")
			elseif CustomSlock == false then
				SlockReason = SetSlockReason
				warn("Slock Reason Set")
			end
			
			game.Players.PlayerAdded:Connect(function(Player)
				wait(10)
				if slock == true then
					Player:Kick(SlockReason)
				end
			end)
			warn("Locked Server for the reason of "..SlockReason)
		elseif message[1] == Prefix.."unslock" then
			slock = false
			SlockReason = nil
			warn("Un-locked the server")
			
		elseif message[1] == Prefix.."kick"  then
			local NameofPlrToKick
				local PlayerToKick
				local Reason = Msg:split(message[2])[2]
				if message[2] == "all" then
					for i, plr in pairs(game.Players:GetPlayers()) do
						warn(Reason)
						plr:Kick("You have been kicked from the game. Reason: "..Reason)
						warn("Kicked "..plr.Name.." for the reason of: "..Reason)
					end
				elseif message[2] == "others" then
					for i, plr in pairs(game.Players:GetPlayers()) do
						if  plr.Name ~= Player.Name then
						warn(Reason)
						plr:Kick("You have been kicked from the game. Reason: "..Reason)
							warn("Kicked "..plr.Name.." for the reason of: "..Reason)
							end
					end
				elseif message[2] == "me" then
					NameofPlrToKick = Player
					PlayerToKick = game.Players:FindFirstChild(NameofPlrToKick)
					

						PlayerToKick:Kick("You have been kicked from the game. Reason: "..Reason)
						warn("Kicked "..PlayerToKick.Name.." for the reason of: "..Reason)

				else
					NameofPlrToKick = getPlayerFromPartialName(message[2])
					PlayerToKick = game.Players:FindFirstChild(NameofPlrToKick)
					
					if PlayerToKick ~= nil then
						local Reason = Msg:split(message[2])[2]
						warn(Reason)
						PlayerToKick:Kick("You have been kicked from the game. Reason: "..Reason)
						warn("Kicked "..PlayerToKick.Name.." for the reason of: "..Reason)
					end
				end
		elseif message[1] == Prefix.."pban"then
			local NameOfPlrToBan
				local PlrToban
				if message[2] == "all" then
					for i, PlrToban in pairs(game.Players:GetPlayers()) do
						PlrToban.BanReason.Value = Msg:split(message[2])[2]
						PlrToban.Banned.Value = true
						PlrToban:Kick("You are permanently banned from this game. Reason: "..PlrToban.BanReason.Value)
					end
				elseif message[2] == "others" then
					for i, PlrToban in pairs(game.Players:GetPlayers()) do
						if  PlrToban.Name ~= Player.Name then
						PlrToban.BanReason.Value = Msg:split(message[2])[2]
						PlrToban.Banned.Value = true
							PlrToban:Kick("You are permanently banned from this game. Reason: "..PlrToban.BanReason.Value)
							end
					end
				elseif message[2] == "me" then
					PlrToban = Player
					PlrToban.BanReason.Value = Msg:split(message[2])[2]
					PlrToban.Banned.Value = true
					PlrToban:Kick("You are permanently banned from this game. Reason: "..PlrToban.BanReason.Value)
				else
					NameOfPlrToBan = getPlayerFromPartialName(message[2])
					PlrToban = game.Players:FindFirstChild(NameOfPlrToBan)
					PlrToban.BanReason.Value = Msg:split(message[2])[2]
					PlrToban.Banned.Value = true
					PlrToban:Kick("You are permanently banned from this game. Reason: "..PlrToban.BanReason.Value)
				end
		elseif message[1] == Prefix.."to" then
			local PlayerToTpto
				local PlayerToTp 
				if message[2] == "me" then
					Player.Character.HumanoidRootPart.CFrame = Player.Character.HumanoidRootPart.CFrame + Vector3.new(0,0,0)
					warn("Teleported "..Player.Name.." to "..PlayerToTp.Name)
				elseif message[2] == "random" then
					PlayerToTp = game.Players:GetPlayers()[math.random(1,#game.Players:GetPlayers())]
					warn(PlayerToTp)
					Player.Character.HumanoidRootPart.CFrame = PlayerToTp.Character.HumanoidRootPart.CFrame + Vector3.new(0,0,0)
				else
					
					PlayerToTpto = getPlayerFromPartialName(message[2])
					PlayerToTp = game.Players:FindFirstChild(PlayerToTpto)
					Player.Character.HumanoidRootPart.CFrame = PlayerToTp.Character.HumanoidRootPart.CFrame + Vector3.new(0,0,0)
					warn("Teleported "..Player.Name.." to "..PlayerToTp.Name)
				end
			elseif message[1] == Prefix.."bring" then
			local PlayerToTpto
				local PlayerToTp
				if message[2] == "all" then
					for i, PlayerToTp in pairs(game.Players:GetPlayers()) do
						PlayerToTp.Character.HumanoidRootPart.CFrame = Player.Character.HumanoidRootPart.CFrame + Vector3.new(0,0,0)
						warn("Teleported "..Player.Name.." to "..PlayerToTp.Name)
					end
				elseif message[2] == "others" then
					for i, PlayerToTp in pairs(game.Players:GetPlayers()) do
						if PlayerToTp.Name ~= Player.Name then
						PlayerToTp.Character.HumanoidRootPart.CFrame = Player.Character.HumanoidRootPart.CFrame + Vector3.new(0,0,0)
							warn("Teleported "..Player.Name.." to "..PlayerToTp.Name)
							end
					end
				elseif message[2] == "random" then
					PlayerToTp = game.Players:GetPlayers()[math.random(1,#game.Players:GetPlayers())]
					warn(PlayerToTp)
					PlayerToTp.Character.HumanoidRootPart.CFrame = Player.Character.HumanoidRootPart.CFrame + Vector3.new(0,0,0)
				elseif message[2] == "me" then
					PlayerToTp = Player
					PlayerToTp.Character.HumanoidRootPart.CFrame = Player.Character.HumanoidRootPart.CFrame + Vector3.new(0,0,0)
				else
					PlayerToTpto = getPlayerFromPartialName(message[2])
					PlayerToTp = game.Players:FindFirstChild(PlayerToTpto)
					
					PlayerToTp.Character.HumanoidRootPart.CFrame = Player.Character.HumanoidRootPart.CFrame + Vector3.new(0,0,0)
				end
			elseif message[1] == Prefix.."name"then
			local NameOf = message[2]
			local Nameofplrtoname
				local plrtoname 
				
				if NameOf == "all" then
					for i, plrtoname in pairs(game.Players:GetPlayers()) do
						plrtoname.Character.Humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.Subject
						plrtoname.Character.Humanoid.DisplayName = Msg:split(NameOf)[2]
					end
				elseif NameOf == "others" then
					for i, plrtoname in pairs(game.Players:GetPlayers()) do
						if plrtoname.Name ~= Player.Name then
						plrtoname.Character.Humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.Subject
							plrtoname.Character.Humanoid.DisplayName = Msg:split(NameOf)[2]
							end
					end
				elseif NameOf == "random" then
					plrtoname = game.Players:GetPlayers()[math.random(1,#game.Players:GetPlayers())]
					plrtoname.Character.Humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.Subject
					plrtoname.Character.Humanoid.DisplayName = Msg:split(NameOf)[2]
				elseif NameOf == "me" then
					plrtoname = Player
					plrtoname.Character.Humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.Subject
					plrtoname.Character.Humanoid.DisplayName = Msg:split(NameOf)[2]
				else
					Nameofplrtoname = getPlayerFromPartialName(message[3])
					plrtoname = game.Players:FindFirstChild(Nameofplrtoname)
					plrtoname.Character.Humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.Subject
					plrtoname.Character.Humanoid.DisplayName = Msg:split(NameOf)[2]
				end

			elseif message[1] == Prefix.."m" then
				local filter = game.Chat:FilterStringAsync(Msg:split(message[1].." ")[2],Player,Player)
				game.ReplicatedStorage.M_Command:FireAllClients(Player,filter)
				warn(filter)
			elseif message[1] == Prefix.."pm" then
			local nameOfP = message[2]
				local PlayerToGive
				local PlrPM
				local Message = Msg:split(nameOfP)[2]
				if message[2] == "all" then
					game.ReplicatedStorage.SendPrivateMessage:FireAllClients(Player,Message)
				elseif message[2] == "others" then
					for i, PlrPM in pairs(game.Players:GetPlayers()) do
						if PlrPM.Name ~= Player.Name then
							game.ReplicatedStorage.SendPrivateMessage:FireClient(PlrPM,Player,Message)
							end
					end
				elseif message[2] == "me" then
					PlrPM = Player
					game.ReplicatedStorage.SendPrivateMessage:FireClient(PlrPM,Player,Message)
				else
					PlayerToGive = getPlayerFromPartialName(message[2])
					PlrPM = game.Players:FindFirstChild(PlayerToGive)
					game.ReplicatedStorage.SendPrivateMessage:FireClient(PlrPM,Player,Message)
				end
			elseif message[1] == Prefix.."music" then
			local SoundId = message[2]
			workspace.SoundValue.Value = message[2]
			workspace.MusicCmd.SoundId = "rbxassetid://"..workspace.SoundValue.Value
			if string.find(msg,"loop") then
				workspace.MusicCmd.Looped = true
				warn("Is Looped")
			else
				workspace.MusicCmd.Looped = false
				warn("Is NOT LOOPED")
			end
			workspace.MusicCmd:Play()
			elseif message[1] == Prefix.."ban" then
			local mess = message[2]
			local nameof
			local banplr 
				local Reason = Msg:split(mess)[2]
				
				if mess == "all" then
					for i, banplr in pairs(game.Players:GetPlayers()) do
						table.insert(bans,banplr.UserId)
						banplr:Kick("You are server banned from this game. Reason: "..Reason)
					end
				elseif mess == "others" then
					for i, banplr in pairs(game.Players:GetPlayers()) do
						if banplr.Name ~= Player.Name then
						table.insert(bans,banplr.UserId)
							banplr:Kick("You are server banned from this game. Reason: "..Reason)
							end
					end
				elseif mess == "me" then
					banplr = Player
					table.insert(bans,banplr.UserId)
					banplr:Kick("You are server banned from this game. Reason: "..Reason)
				else
					nameof = getPlayerFromPartialName(message[2])
					banplr = game.Players:FindFirstChild(nameof)
					table.insert(bans,banplr.UserId)
					banplr:Kick("You are server banned from this game. Reason: "..Reason)
				end
			elseif message[1] == Prefix.."cmds" then
			game.ReplicatedStorage.OpenCmds:FireClient(Player)
			elseif message[1] == Prefix.."shutdown" then
			for i, p in pairs(game.Players:GetPlayers()) do
				p:Kick("The server has been shutdown by "..Player.Name..".")
			end
			elseif message[1] == Prefix.."team"then
			local PlayertoTeam
				local plr
				local T = msg:split(message[2].." ")[2]
				warn(T)
				local TeamName = TeamPartial(T)
				warn(TeamName)
				local Team = game.Teams:FindFirstChild(TeamName)
				warn(Team.Name)
				
				if message[2] == "all" then
					for i, plr in pairs(game.Players:GetPlayers()) do
						plr.Team = game.Teams[Team.Name]
					end
				elseif message[2] == "others" then
					for i, plr in pairs(game.Players:GetPlayers()) do
						if plr.Name ~= Player.Name then
							plr.Team = game.Teams[Team.Name]
							end
					end
				elseif message[2] == "me" then
					plr = Player
					plr.Team = game.Teams[Team.Name]
				else
					PlayertoTeam = getPlayerFromPartialName(message[2])
					plr = game.Players:FindFirstChild(PlayertoTeam)
					plr.Team = game.Teams[Team.Name]
				end
			elseif message[1] == Prefix.."speed" then
			local Speed = message[3]
			local p
			local nameof
				local plr
				
				if message[2] == "all" then
					for i, plr in pairs(game.Players:GetPlayers()) do
						plr.Character.Humanoid.WalkSpeed = Speed
					end
				elseif message[2] == "others" then
					for i, plr in pairs(game.Players:GetPlayers()) do
						if plr.Name ~= Player.Name then
							plr.Character.Humanoid.WalkSpeed = Speed
							end
					end
				elseif message[2] == "me" then
					plr = Player
					plr.Character.Humanoid.WalkSpeed = Speed
				else
					nameof = getPlayerFromPartialName(message[2])
					plr = game.Players:FindFirstChild(nameof)
					plr.Character.Humanoid.WalkSpeed = Speed
				end
			
			elseif message[1] == Prefix.."jumppower" then
				local Speed = message[3]
				local p
				local nameof
				local plr
				
				if message[2] == "all" then
					for i, plr in pairs(game.Players:GetPlayers()) do
						plr.Character.Humanoid.JumpPower = Speed
					end
				elseif message[2] == "others" then
					for i, plr in pairs(game.Players:GetPlayers()) do
						if plr.Name ~= Player.Name then
							plr.Character.Humanoid.JumpPower = Speed
						end
					end
				elseif message[2] == "me" then
					plr = Player
					plr.Character.Humanoid.JumpPower = Speed
				else
					nameof = getPlayerFromPartialName(message[2])
					plr = game.Players:FindFirstChild(nameof)
					plr.Character.Humanoid.JumpPower = Speed
				end
			end
		
			end
	end)
end)

--START OF PBAN KICK
game.Players.PlayerAdded:Connect(function(Player)
	wait(10)
	if Player:FindFirstChild("Banned") then
		if Player.Banned.Value == true then
			Player:Kick("\n King Admin \n You are permanently banned from this game. \n Reason: "..Player.BanReason.Value)
		end
	end
end)
--END OF PBAN KICK



game.Players.PlayerAdded:Connect(function(Player)
	wait(10)
	if table.find(bans,Player.UserId) then
		warn(Player.Name.." is server banned.")
		Player:Kick("\n King Admin \n You are server banned from this game.")
	else
		warn(Player.Name.." is a good boi.")
	end
end)

game.Players.PlayerAdded:Connect(function(Player)
	local WarningGUI = script.WarningGUI:Clone()
	WarningGUI.Warnings.Parent = Player
	Player.CharacterAdded:Connect(function(Character)
		if Character:FindFirstChild("WarningGUI") then
			WarningGUI:Destroy()
		end
		WarningGUI.Parent = Character.Head
	end)
	
	Player.Chatted:Connect(function(Message)
		local SplitMessage = Message:lower():split(" ")
		if SplitMessage[1] == Prefix.."warn"  then
			if Player:GetRankInGroup(GroupId) >= MinimumRankToUseCommands or table.find(Users,Player.UserId) then
			local NameOfPlayerToWarn
			local PlayerToWarn
			

				
				if SplitMessage[2] == "all" then
					for i, PlayerToWarn in pairs(game.Players:GetPlayers()) do
						local WarningGUI = PlayerToWarn.Character.Head.WarningGUI
						local CurrentWarnings = PlayerToWarn.Warnings
						local Reason = Message:split(SplitMessage[2])[2]
						
						CurrentWarnings.Value = CurrentWarnings.Value + 1
						WarningGUI.WarningLabel.Text = "W" .. CurrentWarnings.Value .. " - " .. Reason
						
						
						if CurrentWarnings.Value >= 3 then
							PlayerToWarn:Kick("\n King Admin \n You have reached the maximum number of warnings and have been kicked from the game.")
						end
					end
				elseif SplitMessage[2] == "others" then
					for i, PlayerToWarn in pairs(game.Players:GetPlayers()) do
						if PlayerToWarn.Name ~= Player.Name then
							local WarningGUI = PlayerToWarn.Character.Head.WarningGUI
							local CurrentWarnings = PlayerToWarn.Warnings
							local Reason = Message:split(SplitMessage[2])[2]
							
							CurrentWarnings.Value = CurrentWarnings.Value + 1
							WarningGUI.WarningLabel.Text = "W" .. CurrentWarnings.Value .. " - " .. Reason
							
							
							if CurrentWarnings.Value >= 3 then
								PlayerToWarn:Kick("\n King Admin \n You have reached the maximum number of warnings and have been kicked from the game.")
							end
						end
					end
				elseif SplitMessage[2] == "me" then
					PlayerToWarn = Player
					local WarningGUI = PlayerToWarn.Character.Head.WarningGUI
					local CurrentWarnings = PlayerToWarn.Warnings
					local Reason = Message:split(SplitMessage[2])[2]
					
					CurrentWarnings.Value = CurrentWarnings.Value + 1
					WarningGUI.WarningLabel.Text = "W" .. CurrentWarnings.Value .. " - " .. Reason
					
					
					if CurrentWarnings.Value >= 3 then
						PlayerToWarn:Kick("\n King Admin \n You have reached the maximum number of warnings and have been kicked from the game.")
					end
				else
					NameOfPlayerToWarn = getPlayerFromPartialName(SplitMessage[2])
					PlayerToWarn = game.Players:FindFirstChild(NameOfPlayerToWarn)
					local WarningGUI = PlayerToWarn.Character.Head.WarningGUI
					local CurrentWarnings = PlayerToWarn.Warnings
					local Reason = Message:split(SplitMessage[2])[2]
					
					CurrentWarnings.Value = CurrentWarnings.Value + 1
					WarningGUI.WarningLabel.Text = "W" .. CurrentWarnings.Value .. " - " .. Reason
					
					
					if CurrentWarnings.Value >= 3 then
						PlayerToWarn:Kick("\n King Admin \n You have reached the maximum number of warnings and have been kicked from the game.")
					end
				end
				end
			end
	end)
end)
