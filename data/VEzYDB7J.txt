#include <iostream>
#include <cmath>
#include <vector>
#include <queue>
#include <algorithm>
#include <string>
#include <stack>
#include <set>
#include <map>
#define pii pair <int, int>
#define pb(x) push_back(x)
using namespace std;
using ll = long long;
using ld = long double;
using db = double;
void cv(vector <int> &v) {
    for (auto x : v) cout << x << ' ';
    cout << "\n";
}

void cvl(vector <ll> &v) {
    for (auto x : v) cout << x << ' ';
    cout << "\n";
}


void cvv(vector <vector <int> > &v) {
    for (auto x : v) cv(x);
    cout << "\n";
}

void cvb(vector <bool> v) {
    for (bool x : v) cout << x << ' ';
    cout << "\n";
}

void cvs(vector <string>  v) {
    for (auto a : v) {
        cout << a << "\n";
    }
}

void cvp(vector <pii> a) {
    for (auto p : a) {
        cout << p.first << ' ' << p.second << "\n";
    }
    cout << "\n";
}



int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    vector <int> dp(70);
    for (int i = 69; i >= 15; --i) {
        dp[i] = 1;
    }
    for (int i = 14; i >= 0; --i) {
        if (dp[i * 2] >= 0 && dp[i + 1] >= 0) {
            dp[i] = -dp[i+1];
            continue;
        }
        if (dp[i * 2] < 0) {
            dp[i] = -dp[i * 2] + 1;
            continue;
        }
        if (dp[i + 1] < 0) {
            dp[i] = -dp[i + 1] + 1;
        }
    }
    for (int i = 0; i < 30; ++i) {
        cout << "(" << i << "," << dp[i] << ") ";
    }
}
