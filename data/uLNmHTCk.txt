#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

#define MAX_LINES 1000
#define MAX_LINE_LENGTH 200

int main() {
    char input_filename[MAX_LINE_LENGTH], output_filename[MAX_LINE_LENGTH];
    FILE *input_file, *output_file;
    char lines[MAX_LINES][MAX_LINE_LENGTH], search_query[MAX_LINE_LENGTH], new_string[MAX_LINE_LENGTH];
    int line_count = 0, num_replacements = 0;

    printf("Enter input filename: ");
    fgets(input_filename, MAX_LINE_LENGTH, stdin); input_filename[strcspn(input_filename, "\n")] = '\0';
    input_file = fopen(input_filename, "r"); if (!input_file) { printf("Error opening input file\n"); return 1; }

    printf("Enter output filename: ");
    fgets(output_filename, MAX_LINE_LENGTH, stdin); output_filename[strcspn(output_filename, "\n")] = '\0';
    output_file = fopen(output_filename, "w"); if (!output_file) { printf("Error opening output file\n"); return 1; }

    while (fgets(lines[line_count], MAX_LINE_LENGTH, input_file)) {
        if ((lines[line_count][0] == '1' && isspace(lines[line_count][1])) || (isspace(lines[line_count][0]) && lines[line_count][1] == '1')) {
            line_count++;
        } else {
            fprintf(output_file, "%s", lines[line_count]);
        }
    }

    do {
        printf("Enter the search query: ");
        fgets(search_query, MAX_LINE_LENGTH, stdin); search_query[strcspn(search_query, "\n")] = '\0';
    } while (strspn(search_query, " \t\n\r") == strlen(search_query));

    printf("Lines containing '%s':\n", search_query);
    for (int i = 0; i < line_count; i++) {
        if (strstr(lines[i], search_query)) {
            printf("%s", lines[i]);
        }
    }

    do {
        printf("\nEnter the string to replace '%s' with: ", search_query);
        fgets(new_string, MAX_LINE_LENGTH, stdin); new_string[strcspn(new_string, "\n")] = '\0';
    } while (strspn(new_string, " \t\n\r") == strlen(new_string) || strchr(new_string, ' ') != NULL);

    if (strcmp(search_query, new_string) == 0) {
        printf("\nSearch query and replacement string are the same. No replacements made.\n");
        fclose(input_file);
        fclose(output_file);
        return 0;
    }

    printf("\nLines replaced:\n");
    for (int i = 0; i < line_count; i++) {
        for (char *pos = lines[i]; (pos = strstr(pos, search_query)) != NULL;) {
            int index = pos - lines[i];
            memmove(&lines[i][index + strlen(new_string)], &lines[i][index + strlen(search_query)], strlen(&lines[i][index + strlen(search_query)]) + 1);
            memcpy(&lines[i][index], new_string, strlen(new_string));
            pos = &lines[i][index + strlen(new_string)];
            printf("%s", lines[i]);
            num_replacements++;
        }
    }

    for (int i = 0; i < line_count; i++) {
        fprintf(output_file, "%s", lines[i]);
    }

    fclose(input_file);
    fclose(output_file);
    printf("\nNumber of replacements made: %d\n", num_replacements);
    return 0;
}
