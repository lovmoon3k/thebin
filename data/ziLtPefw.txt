#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <stack>
#include <iomanip>
#include <fstream>
#include <string>
#include <set>
#include <deque>
#include <queue>
#include <map>
#include <bitset>
#include <random>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
#define endl "\n"
#define sqrt sqrtl

#define all(a) a.begin(), a.end();

const ll inf = 1e9 + 13;
long double eps = 1e-6;
const ll maxsz = 1e6 + 5;
ll mod = 1e9 + 7;

signed main() {
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios_base::sync_with_stdio(0);
	cin.tie(NULL);
	cout.tie(NULL);
    ll n, m, i, j, x;
    cin >> n >> m;
    vector <ll> a(n);
    map <ll, vector<pair<ll, ll>>> kek;
    for (i = 0; i < n; i++) {
        cin >> a[i];
        kek[a[i]].push_back({ i, i });
    }
    map <ll, ll> anss;
    for (auto& y : kek) {
        ll pans, mx = -1e9;
        for (ll i = 0; i < y.second.size(); i++) {
            ll pre_ans = (i + 1) * (n - (y.second[i].first + 1) - (y.second.size() - 1 - i));
            y.second[i].first = pre_ans;
            if (pre_ans > mx) {
                mx = pre_ans;
                anss[y.first] = mx;
            }
        }
    }
    for (i = 0; i < m; i++) {
        cin >> x;
        if (kek.find(x) != kek.end()) {
            cout << anss[x] << " ";
        }
        else {
            cout << 0 << " ";
        }
    }
    cout << endl;
	return 0;
}