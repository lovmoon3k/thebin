openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /api/order/{id}:
    get:
      tags:
        - product-order-controller
      operationId: getTestOrderById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductOrderDTO'
    put:
      tags:
        - product-order-controller
      operationId: updateOrder
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductOrderDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductOrderDTO'
  /api/user:
    get:
      tags:
        - user-controller
      operationId: getUser
      parameters:
        - name: userName
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
    post:
      tags:
        - user-controller
      operationId: createNewUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUserAccountDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserAccountDTO'
  /api/order:
    get:
      tags:
        - product-order-controller
      operationId: getOrders
      parameters:
        - name: status
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
    post:
      tags:
        - product-order-controller
      operationId: createOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProductOrderDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductOrderDTO'
  /api/herd/{id}/animal:
    get:
      tags:
        - herd-controller
      operationId: getAnimalsByHerd
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnimalDTO'
    post:
      tags:
        - herd-controller
      operationId: createNewAnimalInHerd
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAnimalDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AnimalDTO'
  /api/farm:
    get:
      tags:
        - farm-controller
      operationId: getFarm
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
    post:
      tags:
        - farm-controller
      operationId: createNewFarm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewFarmDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FarmDTO'
  /api/farm/{id}/owner:
    post:
      tags:
        - farm-controller
      operationId: addOwnerToFarm
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserToFarmForm'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/farm/{id}/herd:
    get:
      tags:
        - farm-controller
      operationId: getFarmHerdsById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HerdDTO'
    post:
      tags:
        - farm-controller
      operationId: addNewHerdToFarm
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HerdToFarmForm'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HerdDTO'
  /api/farm/{id}/award:
    get:
      tags:
        - farm-controller
      operationId: getFarmAwardsByFarmId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
    post:
      tags:
        - farm-controller
      operationId: addNewAwardToFarm
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AwardToFarmForm'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/admin/user/{id}/role:
    post:
      tags:
        - admin-controller
      operationId: assignRoleToUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleToUserForm'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/admin/role:
    post:
      tags:
        - admin-controller
      operationId: createNewRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRoleForm'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RoleDTO'
  /info:
    get:
      tags:
        - info-controller
      operationId: getInfo
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/product:
    get:
      tags:
        - product-order-controller
      operationId: getProducts
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/farm/{id}:
    get:
      tags:
        - farm-controller
      operationId: getFarmById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FarmDTO'
  /api/farm/{id}/notification:
    get:
      tags:
        - farm-controller
      operationId: getNotificationsByFarm
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FarmNotificationDTO'
  /api/award/farm:
    get:
      tags:
        - award-controller
      operationId: getFarmAwards
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/animal/{id}:
    get:
      tags:
        - animal-controller
      operationId: getAnimalById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AnimalDTO'
components:
  schemas:
    AnimalDTO:
      type: object
      properties:
        animalId:
          type: integer
          format: int64
        animalName:
          type: string
        uniqueIdentifier:
          type: string
        uniqueIdentifierIssuer:
          type: string
        sex:
          type: string
        breed:
          type: string
        species:
          type: string
        dateCreated:
          type: string
        dateLastUpdated:
          type: string
        activeTestOrders:
          type: array
          items:
            $ref: '#/components/schemas/ProductOrderDTO'
    ProductOrderDTO:
      type: object
      properties:
        orderId:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
        productName:
          type: string
        customerId:
          type: integer
          format: int64
        customerUserName:
          type: string
        farmId:
          type: integer
          format: int64
        farmName:
          type: string
        status:
          type: string
        dateCreated:
          type: string
        animals:
          type: array
          items:
            $ref: '#/components/schemas/AnimalDTO'
    NewUserAccountDTO:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        streetLine1:
          type: string
        streetLine2:
          type: string
        city:
          type: string
        postCode:
          type: string
        country:
          type: string
        gender:
          type: string
        phoneNumber:
          type: string
    UserAccountDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userName:
          type: string
        userStatus:
          type: string
        dateCreated:
          type: string
        dateLastLogin:
          type: string
        gender:
          type: string
        phoneNumber:
          type: string
        role:
          type: string
    NewProductOrderDTO:
      type: object
      properties:
        animalIds:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
        productId:
          type: integer
          format: int64
        farmId:
          type: integer
          format: int64
    NewAnimalDTO:
      type: object
      properties:
        animalName:
          type: string
        uniqueIdentifier:
          type: string
        uniqueIdentifierIssuer:
          type: string
        sex:
          type: string
        breed:
          type: string
        species:
          type: string
    NewFarmDTO:
      type: object
      properties:
        name:
          type: string
        streetLine1:
          type: string
        streetLine2:
          type: string
        city:
          type: string
        postCode:
          type: string
        country:
          type: string
    FarmDTO:
      type: object
      properties:
        farmId:
          type: integer
          format: int64
        farmName:
          type: string
        streetLine1:
          type: string
        streetLine2:
          type: string
        city:
          type: string
        postCode:
          type: string
        country:
          type: string
        numberOfAnimals:
          type: integer
          format: int32
        herds:
          type: array
          items:
            $ref: '#/components/schemas/HerdDTO'
    HerdDTO:
      type: object
      properties:
        herdId:
          type: integer
          format: int64
        herdName:
          type: string
        numOfAnimals:
          type: integer
          format: int32
    UserToFarmForm:
      type: object
      properties:
        userId:
          type: integer
          format: int64
    HerdToFarmForm:
      type: object
      properties:
        herdName:
          type: string
    AwardToFarmForm:
      type: object
      properties:
        farmAwardId:
          type: integer
          format: int64
    RoleToUserForm:
      type: object
      properties:
        roleId:
          type: integer
          format: int64
    NewRoleForm:
      type: object
      properties:
        roleName:
          type: string
    RoleDTO:
      type: object
      properties:
        roleId:
          type: integer
          format: int64
        roleName:
          type: string
    FarmNotificationDTO:
      type: object
      properties:
        farmNotificationId:
          type: integer
          format: int64
        category:
          type: string
        message:
          type: string
        farmId:
          type: integer
          format: int64
