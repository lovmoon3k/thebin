#include <iostream>
#include <algorithm>

using namespace std;

struct number {
	int x, y;
	number() : x(0), y(1) {}
	number(int x) : x(x), y(1) {}
	number(int x, int y) : x(x), y(y) {}
	refresh() {
		int g = __gcd(x, y);
		x /= g;
		y /= g;
	}
};

bool operator < (number a, number b) {
	return a.x*b.y < b.x*a.y;
}

bool operator == (number a, number b) {
	return a.x*b.y == b.x*a.y;
}

bool operator <= (number a, number b) {
	return a.x*b.y <= b.x*a.y;
}

number operator - (number a, number b) {
	number c = number(a.x*b.y-b.x*a.y, a.y*b.y);
	c.refresh();
	return c;
}

number operator + (number a, number b) {
	number c = number(a.x*b.y+b.x*a.y, a.y*b.y);
	c.refresh();
	return c;
}

number operator * (number a, number b) {
	number c = number(a.x*b.x, a.y*b.y);
	c.refresh();
	return c;
}

number operator / (number a, number b) {
	number c = number(a.x*b.y, a.y*b.x);
	c.refresh();
	return c;
}

int main() {
	number A, B, C, D, ans;
	cin >> A.x >> B.x >> C.x >> D.x;
	for (number i = number(1); i <= D - A; i = i + number(1)) {
		number d = (D - A) / i, sum = number(0);
		int flag = 1;
		for (number P = A; P <= D; P = P + d) {
			if (B < P && P < C) flag = 0;
			sum = sum + P;
		}
		if (flag) ans = sum;
	}
	cout << ans.x << "/" << ans.y << "\n";
	return 0;
}