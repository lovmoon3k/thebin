function w()
    turtle.up()
end
function s()
    turtle.down()
end
function a()
    turtle.forward()
end
function d()
    turtle.back()
end
function q()
    turtle.dig()
end
function e()
    turtle.digUp()
end

function fuel()
	if turtle.getFuelLevel() <= 10 then
		print("Refueling...")
		turtle.select(1)
		while turtle.getFuelLevel() <= 10 do
			turtle.refuel(1)
		end
		print("Success")
	end
end
    
function dropoff()
    local x = turtle.getItemCount(3)
    if x > 1 then 
        for t=1,2,1 do
		turtle.digDown()
		fuel()
		turtle.down()
	end
	turtle.select(3)
        repeat 
		turtle.turnRight()
        until turtle.compare() == true
		turtle.turnRight()
        for i=2,x do
			turtle.select(3)
            turtle.drop(1)
        end
        for p=4,16 do
        	turtle.select(p)
        	turtle.drop()
        end
    

        turtle.turnRight()
	if turtle.getItemCount(1) < 5 then
		turtle.select(1)
		print("Restocking Fuel")
		repeat
		turtle.suck(1)
		until turtle.getItemCount(1) >= 10
		print("Success")
	end
        turtle.turnRight()
		turtle.select(2)
		turtle.suck(5)
	for t=1,2,1 do
		turtle.up()
		fuel()
	end
    end
	
	
end
function chop()
	print("Tree=Die")
    q()
    a()
    turtle.select(3)
    height = 0
    repeat
        repeat
			e() 
		until turtle.up() == true
    	fuel()
		turtle.select(3)
		height = height + 1
     until turtle.compareUp() == false
    while height ~= 0 do
		repeat
        	if height ~= 1 
	    		then turtle.digDown()
        	end
		until turtle.down() == true
        fuel()
		height = height - 1
    end
    d()
end

function plant()
    turtle.select(2)
	print("Planting...")
	repeat
		turtle.suckDown(1)
	until turtle.place() == true
	print("Success")
end


while true do
    turtle.select(3)
	print("Waiting for Tree")
    repeat 
        turtle.turnRight()
    until turtle.compare() == true
    
        fuel()

    chop()
    plant()
	dropoff()
    
end    
