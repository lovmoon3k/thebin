using Microsoft.VisualStudio.TestTools.UnitTesting;
using CustomQueue;
using System;

namespace UnitTests
{
    [TestClass]
    public class UnitTest1
    {
        [TestMethod]
        public void CheckCountElement()
        {
            MyQueue<int> myQueue = new MyQueue<int>();
            int item = 123;
            myQueue.Push(item);
            Assert.AreEqual(1, myQueue.Count);
        }
        [TestMethod]
        public void CheckFirstItemAfterAddingElement()
        {
            MyQueue<int> myQueue = new MyQueue<int>();
            int item = 123;
            myQueue.Push(item);
            Assert.AreEqual(item, myQueue.Peek());
        }
        [TestMethod]
        [ExpectedException(typeof(ArgumentException))]
        public void DeleteElementWhenQueueIsEmpty()
        {
            MyQueue<int> myQueue = new MyQueue<int>();
            myQueue.Pop();
        }
        [TestMethod]
        [ExpectedException(typeof(ArgumentException))]
        public void GetPeekElementWhenQueueIsEmpty()
        {
            MyQueue<int> myQueue = new MyQueue<int>();
            myQueue.Pop();
        }
        [TestMethod]
        public void CheckCountItemsWhenQueueIsExpanded()
        {
            MyQueue<int> myQueue = new MyQueue<int>();
            for (int i = 0; i < 10; i++)
            {
                myQueue.Push(i);
            }
            Assert.AreEqual(10, myQueue.Count);
        }
        [TestMethod]
        public void CheckItemsWhenQueueIsExpanded()
        {
            MyQueue<int> myQueue = new MyQueue<int>();
            for (int i = 0; i < 10; i++)
            {
                myQueue.Push(i);
            }
            for (int i = 0; i < 10; i++)
            {
                Assert.AreEqual(i, myQueue.Peek());
                myQueue.Pop();
            }
        }
        [TestMethod]
        public void CheckContainsItemsInQueue()
        {
            MyQueue<int> myQueue = new MyQueue<int>();
            for (int i = 0; i < 5; i++)
            {
                myQueue.Push(i);
            }
            Assert.IsTrue(myQueue.Contains(4));
        }
        [TestMethod]
        public void CheckContainsItemsInQueueWhenQueueIsEmpty()
        {
            MyQueue<int> myQueue = new MyQueue<int>();
            Assert.IsFalse(myQueue.Contains(4));
        }
    }
}
