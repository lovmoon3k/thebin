from PIL import Image, ImageDraw, ImagePath

# Specify the width and height of the image
width = 800
height = 400

# Create a new image with the specified size
image = Image.new("RGB", (width, height), color="white")
draw = ImageDraw.Draw(image)

# Specify the percentage of the scaling bar that should be filled
percent_filled = 75

# Calculate the width of the filled part of the scaling bar
bar_width = int(width * percent_filled / 100)

# Specify the rounding radius for the corners
rounding_radius = 20

# Create a path object to draw the rounded rectangle
path = ImagePath.Path()

# Move the current point to the top left corner of the rectangle
path.moveto(0, height - 20)

# Draw the top left corner of the rectangle with the specified rounding radius
path.arc_to(x1=0, y1=height - 20 - rounding_radius, x2=0 + rounding_radius, y2=height - 20, radius=rounding_radius)

# Draw the top right corner of the rectangle with the specified rounding radius
path.arc_to(x1=bar_width - rounding_radius, y1=height - 20 - rounding_radius, x2=bar_width, y2=height - 20, radius=rounding_radius)

# Draw the bottom right corner of the rectangle with the specified rounding radius
path.arc_to(x1=bar_width - rounding_radius, y1=height - rounding_radius, x2=bar_width, y2=height, radius=rounding_radius)

# Draw the bottom left corner of the rectangle with the specified rounding radius
path.arc_to(x1=0, y1=height - rounding_radius, x2=0 + rounding_radius, y2=height, radius=rounding_radius)

# Close the path to complete the rectangle
path.close()

# Draw the rounded rectangle on the image
draw.rectangle([(0, height - 20), (bar_width, height)], fill="blue",outline=None)
draw.polygon(path,fill="blue",outline=None)

# Save the image
image.save("scaling_bar_rounded.jpg")