#include <iostream>
#include <string>
#include <map>
#include <ranges>
#include <algorithm>
#include <vector>
#include <set>
#include <unordered_map>

#pragma GCC optimize("O3")

using namespace std;

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);

	long long studentsNumber, variants, row, place;
	cin >> studentsNumber;
	cin >> variants;
	cin >> row;
	cin >> place;

	vector<long long> var_place(studentsNumber);
	for (long long i = 0, j = 1; i < studentsNumber; ++i)
	{
		var_place[i] = j;
		++j;
		if (j == variants + 1)
		{
			j = 1;
		}
		/*var_place.push_back(to_push);
		to_push = to_push % variants + 1;*/
	}

	long long vasya_variant, vasya_index;
	if(place == 1)
	{
		vasya_variant = var_place[row * 2 - 2];
		vasya_index = row * 2 - 2;
	}
	else if (place == 2)
	{
		vasya_variant = var_place[row * 2 - 1];
		vasya_index = row * 2 - 1;
	}

	if(studentsNumber / vasya_variant == 1 || studentsNumber == 2 && vasya_variant == 1 || vasya_variant + variants > studentsNumber)
	{
		cout << "-1" << "\n";
	}
	else
	{
		if(vasya_index / variants > 0 && vasya_index + variants < studentsNumber)
		{
			const long long front_row = (vasya_index - variants) / 2 + 1,
				back_row = (vasya_index + variants) / 2 + 1,
				answer_row = row - front_row < back_row - row ? front_row : back_row,
				answer_place = (vasya_index - variants) % 2 == 0 ? 1 : 2;

			cout << answer_row << " " << answer_place << "\n";
		}
		else if (vasya_index / variants > 0 && vasya_index + variants >= studentsNumber)
		{
			const long long answer_row = (vasya_index - variants) / 2 + 1,
				answer_place = (vasya_index - variants) % 2 == 0 ? 1 : 2;

			cout << answer_row << " " << answer_place << "\n";
		}
		else 
		{
			const long long answer_row = (vasya_index + variants) / 2 + 1,
				answer_place = (vasya_index + variants) % 2 == 0 ? 1 : 2;

			cout << answer_row << " " << answer_place << "\n";
		}
	}

	return 0;

}