const quirks = ['Earth Flow','Foldabody','Decay','Creation','Arbor','Air Cannon','Anthropomorph','Frog','Fierce wings','Foresight','Gas','Gatling','Gecko','Gigantification','Blackwhip','Boomerang','Big Fist','Black Hole','Glamour','Blood Control','Blade Tooth','Blazing Hair','Bloodcurdle','Blueflame','Brainwashing','High Spec','Hellflame','Hardening','Half-Cold Half-Hot','Hair Control','Impact Recoil','Cemedine','Cement','Chronostasis','Clones','Comic','Compress','Copy','Horn Cannon','Hydra','Incite','Jet','Love','Landmine','Longbow','Dark Shadow','Dragon','Dupli-arms','Double','Meatball','Manifest','Magnetism','Mushroom','Earphone Jack','Earth Flow','Elasticity','Electrification','Engine','Erasure','Eruption','Explosion','Extend-o-Hair','Navel Laser','Overhaul','Outburst','Permeation','Telepath','Tail','Telescopic','Transform','Twin Impact','Pliabody','Poltergeist','Pop Off','Pump Up','Vibrate','Vines','Voice','Rewind','Warp Gate','Water Control','Wave Motion','Weld','Whirlwind','Zero Gravity','Zoom','Sandstorm','Size','Sloshed','Softening','Solid Air','Somnambulist','Spotted Seal','Steel','Stiffening','Stress','Sugar Rush'];
 
let randomQuirk2 = quirks[Math.floor(Math.random() * quirks.length)];

switch (USER.toLowerCase()) {
  case 'hoodlumkira':
    let randomQuirk = `All for One`
  case 'simbaonfire':
    let randomQuirk = `Permeation`
    break;
  case 'saltibunni':
    let randomQuirk = `Blueflame`
    break;
  default:
    let randomQuirk = quirks[Math.floor(Math.random() * quirks.length)];


switch (TOUSER.toLowerCase()) {
  case 'hoodlumkira': {
    let randomAction = Math.floor(Math.random() * 6);
    switch (randomAction) {
      case 0:       
        `${USER} attempts to beat ${TOUSER} using their ${randomQuirk} quirk, but ${TOUSER} used All for One to steal their quirk rendering them defenceless`;
        break;
      case 1:
        `${USER} manages to bring ${TOUSER} to his knees using their ${randomQuirk} quirk, but before ${TOUSER} passes out he uses All for One to steal their quirk`;
        break;
      case 2:
        `${USER} tries to beat ${TOUSER}, but before they can even use their ${randomQuirk} quirk, ${TOUSER} uses Spring like limbs and Kinetic booster x4 quirks through All for One and knocks out ${USER}`;
        break;
      case 3:
        `${USER} tries to battle ${TOUSER}, but ${TOUSER} is so disinterested in fighting ${USER} and their ${randomQuirk} quirk that he just sends multiple Nomu after them to beat them`;
        break;
      case 4:
        `${USER} manages to restrain ${TOUSER} by using their ${randomQuirk} quirk, ${TOUSER} tries to escape but it is all in vain before he gets knocked out and sent off to Tartarus`;
        break;
      case 5:
      default:
        `${USER} is patroling the local area when ${TOUSER} uses his quirk All for One completely obliterating ${USER} leaving no trace of them or their ${randomQuirk} quirk`;
    }
  }
    break;
 
  case 'saltibunni': {
    let randomAction = Math.floor(Math.random() * 5);
    switch (randomAction) {
      case 0:
        `${USER} tries sneaking up on ${TOUSER} to use their ${randomQuirk} quirk, but ${TOUSER} heard them and uses her Blueflame quirk to trap ${USER}`;
        break;
      case 1:
        `${USER} tries to use their ${randomQuirk} quirk on ${TOUSER} to over power her, but it fails and ${USER} is overpowered by ${TOUSER}s Blueflame quirk and left severely burnt`;
        break;
      case 2:
        `${USER} manages to get the drop on ${TOUSER} thus surprising her enough to restraining her using their ${randomQuirk} quirk, though ${TOUSER} emits alot of heat using her Blueflame quirk making it difficult to turn her in`;
        break;
      case 3:
        `${USER} attempts to fight ${TOUSER} using their ${randomQuirk} quirk but, they end up losing and getting many innocent bystanders caught in the crossfire from ${TOUSER}s Blueflame quirk`;
        break;
      case 4:
      default:
        `${USER} manages to knock out ${TOUSER} using their ${randomQuirk} quirk before ${TOUSER} can even activate her Blueflame quirk but before they can arrest her a Warp Gate spews from her takes ${TOUSER} away to safety`;
        break;
    }
  }
    break;
 
  case 'mellbell83': {
    let randomAction = Math.floor(Math.random() * 5);
    switch (randomAction) {
      case 0:
        `${USER} tries to sneak up on ${TOUSER} to use their ${randomQuirk} but, hoodlumkira interferes using All for One and steals ${USER}s quirk protecting ${TOUSER} and rendering ${USER} helpless`;
        break;
      case 1:
        `${USER} tries to use their ${randomQuirk} quirk on ${TOUSER} to get sneak up on her, but they failed after ${TOUSER} uses her Incite quirk to beat them`;
        break;
      case 2:
        `${USER} manages to over power and restrain ${TOUSER} by using their ${randomQuirk} quirk before ${TOUSER} could use her Incite quirk on people around her`;
        break;
      case 3:
       `${USER} is patroling the area when ${TOUSER} ambushes them with a crowd of people, knocking ${USER} out before they can use their ${randomQuirk} quirk, leaving ${TOUSER} to cause chao in town`;
       break;
      case 4:
      default:
        `${USER} manages to knock out ${TOUSER} using their ${randomQuirk} quirk after a long battle but before ${TOUSER} can be restrained a Warp Gate teleports her away from the scene to saftey`;
        break;
    }
  }
    break;
 
  case 'shannonsully13': {
    let randomAction = Math.floor(Math.random() * 5);
    switch (randomAction) {
      case 0:
        `${USER} tries to run up and use their ${randomQuirk} to assasinate ${TOUSER} but, ${TOUSER} uses her Erasure quirk to erase ${USER}s quirk and restrains them`;
        break;
      case 1:
        `${USER} is minding their own buisness when ${TOUSER} ambushes the villain ${USER}, and ${USER} tries to use their ${randomQuirk} quirk but ${TOUSER} erases their quirk and apprehends them`;
        break;
      case 2:
        `${USER} tries to overpower ${TOUSER}, but as they go to activate their ${randomQuirk} quirk they quickly realize that their quirk is being erased by ${TOUSER}s Erasure quirk, and ${USER} are arrested`;
        break;
      case 3:
        `${USER} sneaks up on ${TOUSER} as she is talking to a civillian and manages to wound her badly using their ${randomQuirk} quirk before she can erase ${USER}s quirk, ${TOUSER} passes out from her wounds`;
        break;
      case 4:
      default: 
        `${USER} starts to fight ${TOUSER}, during the fight ${USER} finds an opening between ${TOUSER}s blinks to beable to get around her Erasure quirk to activate their ${randomQuirk} quirk, ${TOUSER} gets knocked out`;
        break;
    }
  }
    break; 
 
  case 'tomasenzo1999': {
    let randomAction = Math.floor(Math.random() * 5);
    switch (randomAction) {
      case 0:
        `${USER} tries to overpower ${TOUSER} using their ${randomQuirk} quirk but, by them time they got close to ${TOUSER} they get affected by his Sloshed quirk, ${USER} falls to the ground unable to stop everything spinning`;
        break;
      case 1:
        `${USER} attempts to apprehend ${TOUSER} using their ${randomQuirk} quirk but, as the battle goes on eventually ${USER} makes a mistake due to ${TOUSER}s Sloshed quirk allowing ${TOUSER} to knock them out`;
        break;
      case 2:
        `${USER} sneaks up on ${TOUSER} and using their ${randomQuirk} quirk quickly apprehending ${TOUSER} before he could activate his Sloshed quirk and he was taken to the nearest police station`;
        break;
      case 3:
        `${USER} manages to overcome ${TOUSER}s Sloshed quirk and overpowers him using their ${randomQuirk} quirk, ${TOUSER} stood no chance against the hero ${USER}`;
        break;
      case 4:
      default:
        `${USER} starts to fight ${TOUSER}, while they are fighting ${TOUSER} keeps drinking and eventually ${USER} eventually succumbs to ${TOUSER}s Sloshed quirk falling to the ground even with their ${randomQuirk} quirk`;
        break;
    }
  }
    break;

  case 'royalchachi': {
    let randomAction = Math.floor(Math.random() * 5);
    switch (randomAction) {
      case 0: 
        `${USER} tries to attack ${TOUSER} using their ${randomQuirk} quirk but, they are over powered by ${TOUSER}s Glamour quirk and ${USER} is arrested and taken to the nearest police station`; 
        break;
      case 1:
        `${USER} attempts to sneak up on ${TOUSER} to use their ${randomQuirk} quirk on them but they make too much noise, alerting ${TOUSER} who uses their Glamour quirk to knock out the villain ${USER}`;
        break;
      case 2:
        `${USER} tries to overpower ${TOUSER} using their ${randomQuirk} quirk but as the fight continues on ${TOUSER} slowly overpowers ${USER} using their Glamour quirk and apprehends the villain ${USER}`;
        break;
      case 3:
        `${USER} sneaks up on ${TOUSER} so they can use their ${randomQuirk} quirk on them, ${TOUSER} doesnt see ${USER} coming and gets knocked out by the villain ${USER} before even being able to use their Glamour quirk`;
        break;
      case 4:
      default:
        `${USER} attempts to overpower ${TOUSER} using their ${randomQuirk} quirk, as the fight continues on ${TOUSER} slips up using their Glamour quirk which ${USER} quickly acts to capitalize on it to end the fight knocking them out`;
        break;
    }     
  }
    break;

  default: {
    let randomAction = Math.floor(Math.random() * 4);
    switch (randomAction) {
      case 0:
        `${USER} attempts to sneak up on ${TOUSER} to use their ${randomQuirk} quirk, but they step on a twig alerting them and they are restrained using ${TOUSER}s ${randomQuirk2} quirk`;
        break;
      case 1:
        `${USER} sneaks up on and uses their ${randomQuirk} quirk on ${TOUSER} before they could use their ${randomQuirk2} quirk, they never stood a change against the villian ${USER}`;
        break;
      case 2:
        `${USER} holds up a convenience store using their ${randomQuirk} quirk, but ${TOUSER} intervenes and arrests you using their ${randomQuirk2} quirk`;
        break;
      case 3:
      default:
        `${USER} holds up a convenience store using their ${randomQuirk} quirk, ${TOUSER} attempts to stop them with their ${randomQuirk2} quirk, but they are over powered by the villain ${USER} who renders them unconscious`;
        break;
    }
  }
    break;
  }
}