Suppose we have three lists:
my_list = [[1, 2, 3], [1, 2, 3, 4, 5], [1, 2], [1, 2, 3], [1, 2, 3, 4, 5]]
to_be_inserted = ["A", "B", "C", "D", "E"]
pos_insert = [-1, 4, 9, 3, 2]

How to insert n-th element of to_be_inserted in n-th element of my_list
in the position defined by n-th element of pos_insert?
With these resterinctions:
If the position indicated by element in pos_insert is negative 
the n-th element of to_be_inserted must be inserted at the beginning of 
n-th element of my_list and if is greater than the lenght of the n-th element of my_list, 
then it must be appended at the end of the element  of my_list.

This is my solution
my_list = [[1, 2, 3], [1, 2, 3, 4, 5], [1, 2], [1, 2, 3], [1, 2, 3, 4, 5]]
to_be_inserted = ["A", "B", "C", "D", "E"]
pos_insert = [-1, 4, 9, 3, 2]
new_list = []
for i in range(len(my_list)):
    sub_list = []
    sub_list = my_list[i]
    pos = pos_insert[i]
    if pos < 0:
        sub_list.insert(0, to_be_inserted[i])
    elif pos >= len(sub_list):
        sub_list.append(to_be_inserted[i])
    else:
        sub_list.insert(pos, to_be_inserted[i])
    new_list.append(sub_list)
print(new_list)
[['A', 1, 2, 3], [1, 2, 3, 4, 'B', 5], [1, 2, 'C'], [1, 2, 3, 'D'], [1, 2, 'E', 3, 4, 5]]

Is there a better solution?
More elegant and performant?

