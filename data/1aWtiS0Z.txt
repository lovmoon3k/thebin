sub token_alighnment_chk($l , $s)
{
    loop (my $t = 0 ; $t <= 13 ; $t++)
    {
        if ($l[$t] ne $s[$t])
        {
        print("misaligned tokens, starting over again...\n");
        $l = (Empty);
        }
        else
        {
        return $l[$t];
        }
    }
}
           #1.1 prints 'misaligned tokens' but also gives an error: 'Cannot assign to a read-only variable or a value'
		   #1.0 however is converted to 1 by raku automatically and so it is printing 'misaligned tokens' but it still prints 
           #'1', so what token_alighnment_chk does, is being circumvented :/
my $line = (1.1,0,0,0,0,1,0,0,0,1,0,0,0,'3024.dat');
my $spec = ('%d','%d','%1.0f','%1.0f','%1.0f','%1.0f','%1.0f','%1.0f','%1.0f','%1.0f','%1.0f','%1.0f','%1.0f','%s');
my $format;

    loop (my $token = 0 ; $token <= 13 ; $token++)
    {
     $format[$token] = sprintf($spec[$token], $line[$token]);
         token_alighnment_chk($format[$token], $line[$token]);
    }

print($format, "\n");