import random


class Human:

    def hunger_check(self):
        if self.satiety < 0:
            return False
        else:
            return True

    def __init__(self, name, house, satiety=50):
        self.name = name
        self.satiety = satiety
        self.house = house

    def eat(self):
        if self.house.icebox > 0:
            self.satiety += 1
            self.house.icebox -= 1
            print('{} поел, в холодильнике: {}, сытость: {}'.format(self.name, self.house.icebox, self.satiety))
            return self.hunger_check()

        # elif self.house.icebox <= 0 and self.satiety >= 0:
        elif self.house.icebox <= 0 <= self.satiety:
            self.satiety -= 1
            print('Есть игроку {} нечего минус сытость: {}'.format(self.name, self.satiety))
            return self.hunger_check()

    def work(self):
        if self.satiety >= 0:
            self.satiety -= 1
            self.house.money += 1
            print('Игрок {} поработал, денег прибавилось и стало:{}, сытость {}'.format(self.name, self.house.money,
                                                                                        self.satiety))
            return self.hunger_check()

    def play(self):
        if self.satiety >= 0:
            self.satiety -= 1
            print('{} поиграл, сытость упала до: {}'.format(self.name, self.satiety))
        return self.hunger_check()

    def go_store_food(self):
        if self.house.money > 0:
            self.house.icebox += 1
            self.house.money -= 1
            print('Игрок {} сходил в магазин, потратил деньги {} пополнил запас еды {}'.format(self.name,
                                                                                               self.house.money,
                                                                                               self.house.icebox))
            return True
        elif self.house.money <= 0:
            print('Игрок {} не смог купить еды, т.к. денег {}'.format(self.name, self.house.money))


class House:
    def __init__(self, icebox=50, money=0):
        self.icebox = icebox
        self.money = money

    def print_info(self):
        print('В доме, в холодильнике еды: {}, денег в тумбочке: {}'.format(self.icebox, self.money))


def roll_the_dice():
    cube = random.randint(1, 6)
    # print('Кубик выпало: {}'.format(cube))
    return cube


def action_execute(cube, player):
    if cube == 5:
        if player.satiety < 20:
            satiety = player.eat()
            return satiety
        else:
            print('И так сыт, еда не требуется')
            return True

    elif cube == 3:
        if player.house.icebox < 10:
            go_store_food = player.go_store_food()
            return go_store_food
        elif player.house.icebox >= 10:
            print('Игроку {} не нужно идти в магазин, т.к. в холодильнике {} еды'.format(player.name,
                                                                                         player.house.icebox))
            return True
    elif cube == 4:
        if player.house.money < 50:
            work = player.work()
            return work
        elif player.house.money >= 50:
            print('Денег Хватает')
            return True

    elif cube == 1:
        work = player.work()
        return work

    elif cube == 2:
        satiety = player.eat()
        return satiety

    elif cube == 6:
        satiety = player.play()
        return satiety


def game(*players):
    cube_actions = {1: 'Работать', 2: 'Поесть', 3: 'Сходить в магазин', 4: 'Работать', 5: 'Поесть', 6: 'Играть'}
    players_list = list(players)
    list_of_the_dead = []

    for i_day in range(365):
        if len(players_list) != 1:
            for i_plaer in players_list:
                cube = roll_the_dice()
                print('|{:-^14}|{:-^12}|{:-^12}|{:-^12}|{:-^12}|{:-^19}|{:-^70}|'.format('Игрок кидает', 'Сытость',
                                                                                         'Холодильник', 'Деньги',
                                                                                         'Кубик', 'Значение',
                                                                                         'Комментарий'))

                print('|{:^14}|{:^12}|{:^12}|{:^12}|{:^12}|{:^19}|'.format(
                    i_plaer.name,
                    i_plaer.satiety,
                    i_plaer.house.icebox,
                    i_plaer.house.money,
                    cube, cube_actions[cube]), end='')

                state = action_execute(cube, i_plaer)

                print('|{:^14}|{:^12}|{:^12}|{:^12}|{:^12}|{:^19}|'.format(
                    i_plaer.name,
                    i_plaer.satiety,
                    i_plaer.house.icebox,
                    i_plaer.house.money,
                    '', ''))

                if not state:
                    print('{:-^150}'.format('Игрок с именем "{}" мертв!!!'.format(i_plaer.name)))
                    print('{}\n{}\n{}\n{}\n{}'.format('*' * 150, '*' * 150, '*' * 150, '*' * 150, '*' * 150))

                    list_of_the_dead.append(i_plaer)
                    players_list.remove(i_plaer)
                print()
        else:
            print('Игра окончена, победил {}!!!'.format(players_list[0].name))
            losers_list = [i_dead.name for i_dead in list_of_the_dead]
            print('Проигравшие {}'.format(losers_list[::-1]))
            break


hou = House()
name_1 = Human('Иван', hou)
name_2 = Human('Николай', hou)
name_3 = Human('Валера', hou)
name_4 = Human('Павел', hou)
name_5 = Human('Константин', hou)
name_6 = Human('Андрей', hou)

game(name_1, name_2, name_3, name_4, name_5, name_6)
