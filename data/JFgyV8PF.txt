package com.company;

import java.sql.*;

public class Main {

    public static void main(String[] args) throws Exception {

        String connectionUrl = "jdbc:mysql://localhost:3306/lab2";
        String connectionUser = "root";
        String connectionPassword = "root";

        Class.forName("com.mysql.cj.jdbc.Driver");

        try (Connection con = DriverManager.getConnection(connectionUrl, connectionUser, connectionPassword)) {

            System.out.println("Success connection");

            Statement stmt = con.createStatement();

            /*String addingProcessor = """
                    INSERT INTO processor (Name, NumCore)
                    VALUES ('Intel', '4'),
                           ('AMD', '5');
                    """;
            stmt.execute(addingProcessor);

            String addingRam = """
                    INSERT INTO ram (Name, NumGB) 
                    VALUES ('Kingston', '8'),
                           ('AMD', '16');
                    """;
            stmt.execute(addingRam);

            String addingSsd = """
                    INSERT INTO ssd (GB, Name) 
                    VALUES ('256', 'Kingston'),
                           ('512', 'StonyKing');
                    """;
            stmt.execute(addingSsd);

            String addingVideoCard = """
                    INSERT INTO videocard (Name, VRAM) 
                    VALUES ('GTX 1080 TI', '12'),
                           ('GT 240', '1');
                    """;
            stmt.execute(addingVideoCard);

            String addingPC = """
                    INSERT INTO pc (ProcessorID, RamID, SsdID, VidecardID)
                    VALUES ('1', '2', '1', '2');
                    """;
            stmt.execute(addingPC);*/

            String selectAMD = """ 
                                       SELECT pc.ID, p.ID, p.Name, p.NumCore, r.ID, r.Name, s.ID, s.Name, v.ID, v.Name
                                            FROM pc pc
                                                INNER JOIN processor p ON pc.ProcessorID = p.ID
                                                INNER JOIN ram r ON pc.RamID = r.ID
                                                INNER JOIN ssd s ON pc.SsdID = s.ID
                                                INNER JOIN videocard v ON pc.VidecardID = v.ID
                                            WHERE r.Name = 'AMD'
                                    """;

            ResultSet rs = stmt.executeQuery(selectAMD);

            while (rs.next()) {
                System.out.print(rs.getString("p.Name"));
                System.out.println(" NumCore:" + rs.getString("p.NumCore"));
                System.out.println(rs.getString("r.Name"));
                System.out.println(rs.getString("s.Name"));
                System.out.println(rs.getString("v.Name"));
            }
            System.out.println();

            String addingTestProcessor = "INSERT INTO processor (Name, NumCore) VALUES ('Intel i5-8400k', '8')";
            stmt.execute(addingTestProcessor);

            String readingTestProcessor = "SELECT * FROM processor";
            ResultSet testProcessorFirst = stmt.executeQuery(readingTestProcessor);

            while (testProcessorFirst.next()) {
                System.out.println(testProcessorFirst.getString("Name"));
                System.out.println(" NumCore:" + testProcessorFirst.getString("NumCore"));
            }
            System.out.println();

            String updatingTestProcessor = "UPDATE processor SET Name='AMD ryzen 5 3600' WHERE NumCore='8'";
            stmt.execute(updatingTestProcessor);

            ResultSet testProcessorSecond = stmt.executeQuery(readingTestProcessor);

            while (testProcessorSecond.next()) {
                System.out.println(testProcessorSecond.getString("Name"));
                System.out.println(" NumCore:" + testProcessorSecond.getString("NumCore"));
            }
            System.out.println();

            String deletingTestProcessor = "DELETE FROM processor WHERE Name='AMD ryzen 5 3600'";
            stmt.execute(deletingTestProcessor);

            ResultSet testProcessorThird = stmt.executeQuery("SELECT * FROM processor");

            while (testProcessorThird.next()) {
                System.out.println(testProcessorThird.getString("Name"));
                System.out.println(" NumCore:" + testProcessorThird.getString("NumCore"));
            }
        }
    }
}
