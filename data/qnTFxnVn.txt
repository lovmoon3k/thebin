class Solution {
public:
    int intersectionSizeTwo(vector<vector<int>>& intervals) {
        vector<pair<int,int>> inter1;
         vector<pair<int,int>> inter2;
        for(auto i:intervals){
            inter1.push_back(make_pair(i[0],i[1]));
        }
        sort(inter1.begin(),inter1.end());
        int start=0;
       vector<int> cut;
        int ans=0;
        int minf=200000000;
        for(int i=0;i<inter1.size();i++){
            minf=min(minf,inter1[i].second);
            if(minf<inter1[i].first){
                
                ans++;
                cut.push_back(minf);
                minf=inter1[i].second;
  
                start=i;
            }
        }
        cut.push_back(minf);
        ans++;
        start=0;
        for(int i=0;i<inter1.size();i++){
            minf=min(minf,inter1[i].second);
            for (auto j:cut){
                if(j==minf){
                    minf--;
                    break;
                }
            }
            if(minf<inter1[i].first){
                
                ans++;
                
                minf=inter1[i].second;
             for (auto j:cut){
                if(j==minf){
                    minf--;
                    break;
                }
            }
                start=i;
            }
        }
        ans++;

        return ans;
    }
};
/*
先把全部區間用最少次數射一次
把射的地方記起來，之後不可射
再用最小次數射一次
可以證明這樣是minimum的
shoot all intervals with least bullet
then put the shootplaces in vector, you can't shoot anypalce in vector
then shoot all intervals again with least bullet
this greedy algorithm can be proveed to be correct
*/