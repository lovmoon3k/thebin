#include <iostream>
#include <string_view>
#include <variant>
#include <vector>

using namespace std::literals;

struct Stop {
    void Print() const
    {
        puts("I'm stop");
    }
};
struct Bus {
    void Print() const
    {
        puts("I'm bus");
    }
};
struct Map {
    void Print() const
    {
        puts("I'm map");
    }
};

std::variant<Stop, Bus, Map> Read(std::string_view name)
{
    if (name == "Stop"sv)
        return Stop();
    if (name == "Bus"sv)
        return Bus();
    if (name == "Map"sv)
        return Map();
    throw std::invalid_argument("rong data"s);
}

int main()
{
    std::vector<std::string> requests { "Stop"s, "Stop"s, "Bus"s, "Map"s, "Map"s };
    for (auto const& node : requests) {
        std::visit([](auto const& request) { request.Print(); }, Read(node));
    }
}
