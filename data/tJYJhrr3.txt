function printclr(...)
    local colors = {
        ["white"] = colors.white,
        ["orange"] = colors.orange,
        ["magenta"] = colors.magenta,
        ["lightBlue"] = colors.lightBlue,
        ["yellow"] = colors.yellow,
        ["lime"] = colors.lime,
        ["pink"] = colors.pink,
        ["gray"] = colors.gray,
        ["lightGray"] = colors.lightGray,
        ["cyan"] = colors.cyan,
        ["purple"] = colors.purple,
        ["blue"] = colors.blue,
        ["brown"] = colors.brown,
        ["green"] = colors.green,
        ["red"] = colors.red,
        ["black"] = colors.black,
    }

    local args = {...}
    for i = 1, #args do
        local arg = args[i]
        if type(arg) == "string" and colors[arg] then
            term.setTextColor(colors[arg])
        else
            write(tostring(arg))
        end
    end
    term.setTextColor(colors.white)
end

if redstone.getAnalofInput("right",15) then
  while redstone.getAnalofInput("top") do
    printclr("red","Redstone ","white", "active. ","yellow","restocking all trades.","\n")
	
	printclr("white"," ","\n")

    peripheral.wrap("trading_interface_1").restock()
    peripheral.wrap("trading_interface_2").restock()
    peripheral.wrap("trading_interface_3").restock()
    peripheral.wrap("trading_interface_4").restock()
    peripheral.wrap("trading_interface_5").restock()
    peripheral.wrap("trading_interface_6").restock()
    peripheral.wrap("trading_interface_7").restock()
    peripheral.wrap("trading_interface_8").restock()
    peripheral.wrap("trading_interface_9").restock()
    peripheral.wrap("trading_interface_10").restock()

    printclr("green","Finished restocking.","white", "active. ","yellow","restocking all trades.","\n")
	
	printclr("white"," ","\n")
    printclr("gray","Waiting 10 seconds ","\n")
	sleep(10)
  end
end