
// clang-format off
#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <cmath>
#include <stack>
#include <iomanip>
#include <fstream>
#include <string>
#include <set>
#include <deque>
#include <queue>
#include <map>
#include <bitset>
#include <random>
#include <list>
#include <unordered_map>
#include <unordered_set>
#include <cassert>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef string str;
//typedef __int128 ultraint;
#define sqrt sqrtl
#define F first
#define S second
#define endl '\n'
#define all(vc666) vc666.begin(), vc666.end()
#define allr(vc666) vc666.rbegin(), vc666.rend()
#define int long long
#define degug(x) cerr (#x) << " " << (x) << endl;

const ll INF = (ll)2e18;
const ll inf = 1e9 + 7;
const ll ONE = 1;
const ll mod = 2012;
const ll LG = 20;
ld EPS = 1e-12;
ld PI = 3.1415926535897932384;
mt19937_64 gen(rand() + rand());

int x, a, b, y, l, i, j, ost, k, sz, best;
vector <vector <int> > dp;
pair <int, int> vars[(int)1e7];

bool check(int len) {
    dp.assign(x + 1, vector <int>(y + 1, -inf));
    sz = 0;
    best = -inf;
    for (i = min((len + a - 1) / a, x); i >= 0; i--) {
        ost = len - a * i;
        if (ost > 0) {
            j = min((ost + b - 1) / b, y);
            if (j * b + i * a >= len) {
                vars[sz] = { i, j };
                sz++;
            }
        }
        else {
            vars[sz] = { i, 0 };
            sz++;
        }
    }
    dp[0][0] = 0;
    for (i = 0; i <= x; i++) {
        for (j = 0; j <= y; j++) {
            if (dp[i][j] == -inf) continue;
            for (k = 0; k < sz; k++) {
                if (i + vars[k].first <= x && j + vars[k].second <= y) {
                    dp[i + vars[k].first][j + vars[k].second] = max(dp[i + vars[k].first][j + vars[k].second], dp[i][j] + 1);
                }
            }
            best = max(best, dp[i][j]);
        }
    }
    return best >= l;
}

void solve() {
    cin >> x >> a >> y >> b >> l;
    int L = 0, R = (int)506250002, M;
    while (R - L > 1) {
        M = (L + R) / 2;
        if (check(M)) {
            L = M;
        }
        else {
            R = M;
        }
    }
    cout << L << endl;
}

signed main() {
#ifdef _DEBUG
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    //freopen("concert.in", "r", stdin);
    //freopen("concert.out", "w", stdout);
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    int t = 1;
    //cin >> t;
    while (t--) solve();
}
//Deisgned by skimono
