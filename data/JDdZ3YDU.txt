#include<graphics.h>
#include<iostream>

enum Direction {dirLeft, dirRight};
using namespace std;
int i, manX, midy, GroundY;
Direction direction;

void setup();
void loop();
void drawCar();
void drawRoad();
void drawTreeAndHouse();
void drawTree();
void drawHouse();
void DrawManAndUmbrella(int x);

int main()
{
    setup();
    while(1)
    {
        loop();
        delay(5);
        cleardevice();
        // Check for input
        if (kbhit()) {
            int ch = getch();
            if (ch == ' ' && GroundY==240) {
                // move down
                GroundY-=40;
            }
        }
    }
    getch();
    closegraph();
    return 0;
}

void setup()
{
    initwindow(1200, 700);
    i = 0, manX = 20, midy=getmaxy()/2, GroundY=240;
    direction = dirRight;

}

void loop()
{
    if(direction==dirRight)
        i+=10;
    else
        i-=10;

    manX++;
    if (GroundY<240)GroundY++;
    if (manX>1190)manX=0;

    if(i>800)
    {
        direction=dirLeft;
    }
    else if(i<40)
    {
        direction=dirRight;
    }

    drawRoad();
    drawCar();
    drawTreeAndHouse();
    DrawManAndUmbrella(manX);

}

void drawRoad()
{
    setcolor(MAGENTA);
    setfillstyle(SOLID_FILL, MAGENTA);
    bar3d(0,550, 1110, 600, 90, 1);
}

void drawCar()
{
    setcolor(YELLOW);
    setfillstyle(SOLID_FILL, YELLOW);

    // left wheel
    pieslice(0+i,500,0-i,90-i,30);
    pieslice(0+i,500,180-i,270-i, 30);
    circle(0+i, 500, 30);


    // right wheel
    pieslice(300+i,500,0-i,90-i,30);
    pieslice(300+i,500,180-i,270-i, 30);
    circle(300+i, 500, 30);

    setcolor(LIGHTGREEN);
    setfillstyle(SOLID_FILL, LIGHTGREEN);

    // top half circle above wheel
    arc(0+i, 500, 0, 180, 40);
    arc(300+i, 500, 0, 180, 40);

    // center
    line(40+i, 500, 260+i, 500);
    // back
    line(-200+i, 500, -40+i, 500);
    // front
    line(340+i, 500, 540+i, 500);
    // back height
    line(-200+i, 500, -200+i, 400);
    // back body
    line(-200+i, 400, -110+i, 380);
    // back glass
    line(-110+i, 380, -30+i, 270);
    // ceiling
    line(-30+i, 270, 210+i, 270);
    // front glass
    line(210+i, 270, 320+i, 380);
    // front body
    line(320+i, 380, 500+i, 410);
    // front join
    line(500+i, 410, 540+i, 500);
    floodfill(5+i, midy+20, LIGHTGREEN);


    // draw left glass
    setcolor(BLACK);
    setfillstyle(SOLID_FILL, BLACK);

    line(-90+i, 380, -20+i, 280);
    line(-20+i, 280, 80+i, 280);
    line(80+i, 280, 80+i, 380);
    line(-90+i, 380, 80+i, 380);
    floodfill(30+i, midy-30, BLACK);

    // draw right glass
    line(200+i, 280, 300+i, 380);
    line(100+i, 280, 200+i, 280);
    line(100+i, 280, 100+i, 380);
    line(100+i, 380, 300+i, 380);
    floodfill(230+i, midy-30, BLACK);

    setcolor(LIGHTGREEN);
    setfillstyle(SOLID_FILL, LIGHTGREEN);
    char smuct[] = "Shanto-Mariam University of Creative Technology";
    settextstyle(3,0,3);
    outtextxy(-95+i, 400, smuct);
}

void drawTreeAndHouse()
{
    setcolor(MAGENTA);
    setfillstyle(SOLID_FILL, MAGENTA);
    rectangle(0, 240, 1200, 250);
    floodfill(700, 245, MAGENTA);
    drawTree();
    drawHouse();
}

void drawTree()
{
    setcolor(LIGHTGREEN);
    setfillstyle(SOLID_FILL, LIGHTGREEN);
    line(207,220-40,207,280-40);
    line(240,220-40,240,280-40);
    ellipse(200,200-40,90,280,25,30);
    ellipse(186,170-40,60,240,25,30);
    ellipse(190,142-40,40,200,29,30);
    ellipse(220,117-40,20,170,29,30);
    ellipse(250,117-40,0,120,29,30);
    ellipse(260,127-40,310,60,35,30);
    ellipse(274,150-40,280,50,35,30);
    ellipse(270,180-40,260,22,35,30);
    ellipse(243,200-40,270,340,35,30);
}

void drawHouse(){
    setcolor(WHITE);
    rectangle(150+500,180-60,250+500,300-60);
    rectangle(250+500,180-60,420+500,300-60);
    rectangle(180+500,250-60,220+500,300-60);

    line(200+500,100-60,150+500,180-60);
    line(200+500,100-60,250+500,180-60);
    line(200+500,100-60,370+500,100-60);
    line(370+500,100-60,420+500,180-60);

    /* Fill colours */
    setfillstyle(SOLID_FILL, BROWN);
    floodfill(152+500, 182-60, WHITE);
    floodfill(252+500, 182-60, WHITE);
    setfillstyle(SLASH_FILL, BLUE);
    floodfill(182+500, 252-60, WHITE);
    setfillstyle(HATCH_FILL, GREEN);
    floodfill(200+500, 105-60, WHITE);
    floodfill(210+500, 105-60, WHITE);
}

void DrawManAndUmbrella(int x)
{
    int ldisp = (i + 2) % 12;

    circle(x, GroundY - 90, 10);
    line(x, GroundY - 80, x,
         GroundY - 30);
    line(x, GroundY - 70,
         x + 10, GroundY - 60);
    line(x, GroundY - 65, x + 10,
         GroundY - 55);
    line(x + 10, GroundY - 60,
         x + 20, GroundY - 70);
    line(x + 10, GroundY - 55,
         x + 20, GroundY - 70);

    line(x, GroundY - 30,
         x + ldisp, GroundY);
    line(x, GroundY - 30,
         x - ldisp, GroundY);

    pieslice(x + 20, GroundY - 120,
             0, 180, 40);
    line(x + 20, GroundY - 120,
         x + 20, GroundY - 70);
}
// Written by Naimur Hasan
// Inspired from https://youtu.be/hkSYUgC_vL8
