--Receives Info about items to keep stocked and analyzes an inventory


rednet.open("back") ---side of modem
redstoneSide = "left" ---side of inventory
maxPercent = 100 ---maximum percentage supplied by main computer to keep stocked
minPercent = 50 ---kick in percentage supplied by main computer
waitTime = 3 ---time to wait before auto activation because of absence of messages, recommended double main pc refresh time



function receive()
	senderID, message, protocol = rednet.receive()
	split(message, " ")
	
	command = tostring(result[1])
	percent = tonumber(result[2])
	-- print(command, percent)

	if percent >= maxPercent then
		redstone.setOutput(redstoneSide, true)
	end
	if percent <= minPercent then
		redstone.setOutput(redstoneSide, false)
	end		
	term.clear()
	term.setCursorPos(1, 1)
	print("Resource currently at " ..math.floor(percent).. "%")
	if command ~= nil then 
		receiving = true
		-- print(receiving)
	end
end

function split(s, delimiter)
    result = {};
    for match in (s..delimiter):gmatch("(.-)"..delimiter) do
        table.insert(result, match);
    end
    return result;
end

function wait()
	while true do
		receiving = false
		sleep(waitTime)
		if receiving == false then
			redstone.setOutput(redstoneSide, false)
		end
	end
end


while true do
parallel.waitForAny(receive, wait)
-- receive()
end



