#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <unistd.h>

#include "read_file.h"

enum { BUFSIZE = 4096 };

struct FileContent read_file(int fd) {
    if (fd < 0) {
        struct FileContent fc = {-1, NULL};
        return fc;
    }

    char *data = NULL;
    char buf[BUFSIZE];
    ssize_t read_size = 0;
    ssize_t total_size = 0;

    while ((read_size = read(fd, buf, sizeof(buf))) > 0) {
        char *old_data = data;
        data = realloc(old_data, total_size + read_size + 1);

        if (data == NULL) {
            free(old_data);
            struct FileContent fc = {-1, NULL};
            return fc;
        }
        memcpy(data + total_size, buf, read_size);
        total_size += read_size;
    }

    if (read_size < 0 || data == NULL) {
        free(data);
        struct FileContent fc = {-1, NULL};
        return fc;
    } else {
        data[total_size] = '\0';
        struct FileContent fc = {total_size, data};
        return fc;
    }
}
