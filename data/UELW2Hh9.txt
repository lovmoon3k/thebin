game.Players.CharacterAutoLoads = false

local gui = script:WaitForChild("RoleSelectorScreenGui")

local rs = game:GetService("ReplicatedStorage")
local roles = rs:WaitForChild("Roles")
local remotes = rs:WaitForChild("RemoteEvents")


function giveGui(plr)
	gui:Clone().Parent = plr.PlayerGui
end

game.Players.PlayerAdded:Connect(function(plr)
	
	giveGui(plr)
	
	plr.CharacterAdded:Connect(function(char)
		char:WaitForChild("Humanoid").Died:Connect(function()
			plr.Character= nil
			char:Destroy()
			plr.Backpack:ClearAllChildren()
			giveGui(plr)
		end)
	end)
end)


remotes:WaitForChild("ChooseRole").OnServerEvent:Connect(function(plr, role)
	
	if plr and not plr.Character then
		if roles:FindFirstChild(role) then
			
			local newCharacter = roles[role].Character:FindFirstChildOfClass("Model"):Clone()
			newCharacter.Name = plr.DisplayName
			plr.Character = newCharacter
			newCharacter.Parent = workspace
			
			for _, tool in pairs(roles[role].Tools:GetChildren()) do
				tool:Clone().Parent = plr.Backpack
			end
		end
	end
end)