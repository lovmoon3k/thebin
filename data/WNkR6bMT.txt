#include <stdio.h>
#define getpos(a) pos[a-1]


// debug
// void init_arr(int arr[], int length){
//     for (int i=0; i<length; i++){
//         arr[i] = 0;
//     }
// }


// O(n) very nice
char validate(int length){
    int stack1[length], stack2[length];
    int top1 = -1, top2 = -1;
    // init_arr(stack1, length); init_arr(stack2, length);

    // hold the sequence & positions of elements
    int seq[length], pos[length];
    int s = 0;

    int i, num;
    char flag;
    
    for (i=0; i<length; i++){
        scanf("%d", &num);
        pos[num-1] = i;
        seq[i] = num;
    }

    for (i=1; i<=length; i++){
        flag = 1;
        do {    // pop as many element as possible
            if (top1 >= 0 && stack1[top1] == seq[s]){
                top1--;
                s++;
            }
            else if (top2 >= 0 && stack2[top2] == seq[s]){
                top2--;
                s++;
            }
            else flag = 0;
        } while (flag);

        // an element can be placed on stack only if
        // it has a lower pos than the top element,
        // otherwise the desired order cannot be obtained
        // by popping the stack
        if (top1 < 0 || getpos(stack1[top1]) > getpos(i))
            stack1[++top1] = i;
        else if (top2 < 0 || getpos(stack2[top2]) > getpos(i))
            stack2[++top2] = i;
        else return 0;
    }

    return 1;
}


int main(){
    freopen("in.txt", "r", stdin);
    
    int no_of_cases, case_length, i;

    scanf("%d\n", &no_of_cases);
    char result[no_of_cases];

    for (i=0; i<no_of_cases; i++){
        scanf("%d\n", &case_length);
        result[i] = validate(case_length);
    }

    for (i=0; i<no_of_cases; i++){
        if (result[i]){
            printf("Yes\n");
        }
        else{
            printf("No\n");
        }
    }

    fclose(stdin);
    return 0;
}