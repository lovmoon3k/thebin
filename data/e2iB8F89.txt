#include <iostream>
#include <vector>
#include <queue>
#include <set>
using namespace std;

const int N = 1e5 + 5;
const int INF = 1e9 + 9;

vector<int> g[N];
int n, sz[N], w[N];

void dfs(int v, int par) {
    for (auto u : g[v])
        if (u != par)
            dfs(u, v);
    ///sz[v] = 1 + sz[u1] + sz[u2] + sz[u3] + ... + sz[uk]
    ///iterate through g[v]
    sz[v] = w[v];
    for (auto u : g[v])
        if (u != par)
            sz[v] += sz[u];
}

int main()
{
    cin >> n;
    for (int i = 1; i <= n; i++)
        cin >> w[i];
    for (int i = 1; i < n; i++) {
        int a, b;
        cin >> a >> b;
        g[a].push_back(b);
        g[b].push_back(a);
    }
    dfs(1, -1);
    for (int i = 1; i <= n; i++)
        cout << sz[i] << ' ';
    return 0;
}