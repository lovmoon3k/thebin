import java.util.*;
class Pair{
    Character c;
    int n;

    public Pair (Character c, int n) {
        this.c = c;
        this.n = n;
    }

    public Character getC() {
        return c;
    }

    public int getN() {
        return n;
    }

    @Override
    public String toString() {
        String result;
        if(this.getN()==0){
            result= "-";
        }else {
            result= this.getC()+" "+this.getN();
        }
        return result;
    }
}

public class SymbolCount {
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        String input = scan.nextLine();
        Map<Character, Integer> sumbol = new HashMap<>();
        Map<Character, Integer> small = new HashMap<>();
        Map<Character, Integer> capital = new HashMap<>();
        Pair maxSymbol = new Pair('0', 0);
        Pair maxSmall = new Pair('0', 0);
        Pair maxCapital = new Pair('0', 0);


        for (int i = 0; i < input.length(); i++) {
            char actual = input.charAt(i);
            if (actual >= 65 && actual < 91) {
                capital.putIfAbsent(actual, 0);
                capital.put(actual, capital.get(actual) + 1);
                checkMax(capital, maxCapital, actual);
            } else if (actual >= 97 && actual < 123) {
                small.putIfAbsent(actual, 0);
                small.put(actual, small.get(actual) + 1);
                checkMax(small, maxSmall, actual);
            } else {
                sumbol.putIfAbsent(actual, 0);
                sumbol.put(actual, sumbol.get(actual) + 1);
                checkMax(sumbol, maxSymbol, actual);
            }
        }
        System.out.println(maxSymbol);
        System.out.println(maxSmall);
        System.out.println(maxCapital);

    }

    private static void checkMax(Map<Character, Integer> map, Pair max, char actual) {
        if (max.getN() < map.get(actual)) {
            max.c = actual;
            max.n = map.get(actual);
        }
        if (max.getN() == map.get(actual)) {
            if (max.getC() > actual) {
                max.c = actual;
                max.n = map.get(actual);
            }
        }
    }
}
