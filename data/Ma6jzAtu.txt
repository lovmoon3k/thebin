from tensorflow.keras.preprocessing.image import ImageDataGenerator
import matplotlib.pyplot as plt
 
# вместо одного генератора сделайте два: train_datagen и validation_datagen
train_datagen = ImageDataGenerator(validation_split=0.25, 
                                   rescale=1./255,
                                  vertical_flip=True,
                                  horizontal_flip=True,
                                  rotation_range=(0, 90),
                                  width_shift_range=0.2,
                                  height_shift_range=0.2)
validation_datagen = ImageDataGenerator(validation_split=0.25, 
    rescale=1./255)

train_datagen_flow = train_datagen.flow_from_directory(
    '/datasets/fruits_small/',
    target_size=(150, 150),
    batch_size=16,
    class_mode='sparse',
    subset='training',
    seed=12345)

val_datagen_flow = validation_datagen.flow_from_directory(
    '/datasets/fruits_small/',
    target_size=(150, 150),
    batch_size=16,
    class_mode='sparse',
    subset='validation',
    seed=12345)

features, target = next(train_datagen_flow)

# выводим 16 изображений
fig = plt.figure(figsize=(10,10))
for i in range(16):
    fig.add_subplot(4, 4, i+1)
    plt.imshow(features[i])
	# для компактности удаляем оси и прижимаем изображения друг к другу
    plt.xticks([])
    plt.yticks([])
    plt.tight_layout()