<?php

  // start a string variable that will eventually contain our complete xml:
  $newxml = "<playlist version=\"4\">\n";

  // make a loop here that reads your data from somewhere and insert it into the xml string.
  // I'm only using one variable ($tg) which is a number, e.g. 810. So it creates an alias
  // where the talkgroup # is 810, and the name of the alias is TG810 because I really don't
  // care what it's named, since I only listen to it, I don't "watch" it. However, if you do,
  // you'll want to modify the name=\"TG.$tg part to reference the name of your tg alias
  // from your source data.

  // again, I run this part in a loop, to loop through all of my talkgroups one by one, 
  // inserting an alias "record" into the xml string for that talkgroup. But for demonstration
  // purposes, I'm just loading it up with an array of a couple example talkgroups:

  $tgs = array("802", "810", "906");

  foreach($tgs as $tg) {
    $newxml = $newxml."  <alias color=\"0\" group=\"Anoka County\" list=\"anoka\" name=\"TG".$tg."\">\n";
    $newxml = $newxml."    <id type=\"talkgroup\" protocol=\"APCO25\" value=\"".$tg."\"/>\n";
    $newxml = $newxml."    <id type=\"broadcastChannel\" channel=\"AnokaScanner\"/>\n";
    $newxml = $newxml."  </alias>\n";
  }

  // add a blacklist alias if desired:
  $newxml = $newxml."    <alias color=\"0\" list=\"anoka\" name=\"blacklist\">\n";
  $newxml = $newxml."      <id type=\"priority\" priority=\"-1\"/>\n";
  $newxml = $newxml."      <id type=\"talkgroupRange\" protocol=\"APCO25\" min=\"0\" max=\"65535\"/>\n";
  $newxml = $newxml."    </alias>\n";

  // add icecast streaming if desired:
  $newxml = $newxml."    <stream type=\"icecastHTTPConfiguration\" xmlns:wstxns1=\"http://www.w3.org/2001/XMLSchema-instance\" wstxns1:type=\"ICECAST_HTTP\" description=\"AnokaScanner\" sample_rate=\"8000\" user_name=\"source\" bitrate=\"16\" channels=\"1\" mount_point=\"/stream\" genre=\"PoliceScanner\" public=\"false\" inline=\"true\" enabled=\"true\" delay=\"0\" port=\"8000\" host=\"localhost\" password=\"hackme\" maximum_recording_age=\"600000\" name=\"AnokaScanner\">\n";
  $newxml = $newxml."      <format>MP3</format>\n";
  $newxml = $newxml."    </stream>\n";

  // create the channel:
  $newxml = $newxml."    <channel system=\"Allied Radio Matrix for Emergency Response (ARMER)\" enabled=\"true\" site=\"Anoka\" order=\"1\" name=\"Control\">\n";
  $newxml = $newxml."      <alias_list_name>anoka</alias_list_name>\n";
  $newxml = $newxml."      <event_log_configuration/>\n";
  $newxml = $newxml."      <source_configuration type=\"sourceConfigTunerMultipleFrequency\" frequency_rotation_delay=\"400\" source_type=\"TUNER_MULTIPLE_FREQUENCIES\">\n";
  $newxml = $newxml."        <frequency>853387500</frequency>\n";
  $newxml = $newxml."        <frequency>851937500</frequency>\n";
  $newxml = $newxml."        <frequency>852387500</frequency>\n";
  $newxml = $newxml."        <frequency>852887500</frequency>\n";
  $newxml = $newxml."      </source_configuration>\n";
  $newxml = $newxml."      <aux_decode_configuration/>\n";
  $newxml = $newxml."      <decode_configuration type=\"decodeConfigP25Phase1\" modulation=\"CQPSK\" ignore_data_calls=\"false\" traffic_channel_pool_size=\"3\"/>\n";
  $newxml = $newxml."      <record_configuration/>\n";
  $newxml = $newxml."    </channel>\n";
  $newxml = $newxml."  </playlist>\n";

  // delete the existing default.xml file:
  unlink("default.xml");

  // dump the contents of our xml string into the new default.xml file:
  file_put_contents("default.xml", $newxml);

?>
