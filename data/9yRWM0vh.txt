    # Get the event time before the 15 min
    def get_event_before_15(self, event):
        # Full month format
        full_month_format = "%B %d %H:%M"
        try:
            current_date = datetime.datetime.strptime(event[0].replace(",", "").replace(self.current_month_short, self.current_month), full_month_format)
            event_before_15 = str(current_date - datetime.timedelta(minutes=15))[5:-3]
        except ValueError:
            current_date = datetime.datetime.strptime(event[0].replace(",", "").replace(self.next_month_short, self.next_month), full_month_format)
            event_before_15 = str(current_date - datetime.timedelta(minutes=15))[5:-3]
        finally:
            return str(event_before_15) == str(datetime.datetime.now())[5:-10]
        
        # print(event_before_15, str(datetime.datetime.now())[5:-10])
        # print(event_before_15, str(datetime.datetime.now())[5:-10])
        # print(str(event_before_15) == str(datetime.datetime.now())[5:-10])


    # Get the event actual
    def get_event_actual(self, event):
        # Full month format
        full_month_format = "%B %d %H:%M"
        try:
            current_date = datetime.datetime.strptime(event[0].replace(",", "").replace(self.current_month_short, self.current_month), full_month_format)
            event_actual_after_5_min = str(current_date + datetime.timedelta(minutes=15))[5:-3]
        except ValueError:
            current_date = datetime.datetime.strptime(event[0].replace(",", "").replace(self.next_month_short, self.next_month), full_month_format)
            event_actual_after_5_min = str(current_date + datetime.timedelta(minutes=15))[5:-3]
        finally:
            return str(event_actual_after_5_min) >= str(datetime.datetime.now())[5:-10]
        
        # print(event_before_15, str(datetime.datetime.now())[5:-10])
        # print(str(event_before_15) == str(datetime.datetime.now())[5:-10])