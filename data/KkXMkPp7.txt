#include <algorithm>
#include <iostream>
#include <iomanip>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cassert>
#include <numeric>
using namespace std;

#define int long long
#define IOS ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);

const long long INF = 1e18 + 7;
const double EPS = 1e-6;
const int N = 50;
const int MOD = 1e9 + 7;

int dx[] = {-1, -1, -1, 0, 1, 1, 1, 0};
int dy[] = {-1, 0, 1, 1, 1, 0, -1, -1};

int dx1[] = {-2, -2, -1, -1, 1, 1, 2, 2};
int dy1[] = {-1, 1, -2, 2, -2, 2, -1, 1};

bool used[N][N];
int n = 8, k;
int ans;

void Fill(int x, int y, bool val) {
    used[x][y] = val;
    for (int i = 0; i < n; ++i) {
        used[x][i] = val;
        used[i][x] = val;
    }

    int mini = min(x, y);
    int u = x - mini, v = y - mini;
    while (u < n && v < n) {
        assert(u >= 0 && u < n);
        assert(v >= 0 && v < n);
        used[u][v] = val;
        ++u;
        ++v;
    }
    u = x;
    v = y;
    while (u > 0 && v < n) {
        assert(u >= 0 && u < n);
        assert(v >= 0 && v < n);
        used[u][v] = val;
        --u;
        ++v;
    }
    while (u < n && v > 0) {
        assert(u >= 0 && u < n);
        assert(v >= 0 && v < n);
        used[u][v] = val;
        ++u;
        --v;
    }
    for (int i = 0; i < 8; ++i) {
        int x1 = x + dx1[i], y1 = y + dy1[i];
        if (x1 >= 0 && x1 < n && y1 >= 0 && y1 < n) {
            used[x1][y1] = val;
        }
    }
}

void rec(int x, int y, int cnt) {
    if (cnt == k) {
        ++ans;
        return;
    }
    for (int i = 0; i < 8; ++i) {
        int u = x + dx[i], v = y + dy[i];
        if (u >= 0 && u < n && v >= 0 && v < n && used[u][v] == false) {
            Fill(u, v, true);
            rec(u, v, cnt + 1);
            Fill(u, v, false);
        }
    }

}

int32_t main() {
    IOS;

    int x, y;
    cin >> x >> y;
    Fill(x, y, true);
    for (int i = 0; i < 8; ++i) {
        for (int j = 0; j < 8; ++j) {
            cout << used[i][j];
        }
        cout << '\n';
    }

//    cin >> n >> k;
//    int i = 0, j = 0;
//    for (i = 0; i/* + j */< n; ++i) {
//        for (j = 0;/* i + */j < n; ++j) {
//            rec(i, j, 1);
//        }
//    }
//    cout << ans << '\n';
    return 0;
}

