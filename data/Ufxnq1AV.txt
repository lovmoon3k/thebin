local BV
getgenv().Orb = false;
getgenv().Birth = false;
getgenv().Upgrade = false;
getgenv().Rebirth = false;
getgenv().MoneyLonger = false;
getgenv().TimeWasteReward = false;

function Orb()
spawn(function () while getgenv().Orb == true do
if not game:GetService("Workspace").Collectibles.Tier1 then repeat until game:GetService("Workspace").Collectibles.Tier1 end
if game:GetService("Workspace").Collectibles.Tier1 then TPTo(game:GetService("Workspace").Collectibles.Tier1.CFrame) print("first Orb") wait(0.1) end end end)

spawn(function () while getgenv().Orb == true do
if not game:GetService("Workspace").Collectibles.Tier2 then repeat until game:GetService("Workspace").Collectibles.Tier2 end
if game:GetService("Workspace").Collectibles.Tier2 then TPTo(game:GetService("Workspace").Collectibles.Tier2.CFrame) print("secon Orb") wait(0.3) end end end)

spawn(function () while getgenv().Orb == true do
if not game:GetService("Workspace").Collectibles.Tier3 then repeat until game:GetService("Workspace").Collectibles.Tier3 end
if game:GetService("Workspace").Collectibles.Tier3 then TPTo(game:GetService("Workspace").Collectibles.Tier3.CFrame) print("third Orb") wait(0.5) end end end)
end
function Eggs()
    spawn(function ()
        while getgenv().Birth == true do
if BV == "Red" then local args = {[1] = "Egg1",[2] = 1}game:GetService("ReplicatedStorage").Remotes.PurchaseEgg:InvokeServer(unpack(args)) wait(0.1) end
if BV == "Blue" then local args = {[1] = "Egg2",[2] = 1}game:GetService("ReplicatedStorage").Remotes.PurchaseEgg:InvokeServer(unpack(args)) wait(0.1) end
if BV == "Green" then local args = {[1] = "Egg3",[2] = 1}game:GetService("ReplicatedStorage").Remotes.PurchaseEgg:InvokeServer(unpack(args)) wait(0.1) end
if BV == "Yellow" then local args = {[1] = "Egg4",[2] = 1}game:GetService("ReplicatedStorage").Remotes.PurchaseEgg:InvokeServer(unpack(args)) wait(0.1) end
if BV == "Purple" then local args = {[1] = "Egg5",[2] = 1}game:GetService("ReplicatedStorage").Remotes.PurchaseEgg:InvokeServer(unpack(args)) wait(0.1) end
        end
    end)
end
function Upgrades()
    spawn(function ()
        while getgenv().Upgrade == true do
local args = {[1] = 1} game:GetService("ReplicatedStorage").Remotes.PurchaseUpgrade:InvokeServer(unpack(args)) wait(0.1)
local args = {[1] = 2} game:GetService("ReplicatedStorage").Remotes.PurchaseUpgrade:InvokeServer(unpack(args)) wait(0.1)
local args = {[1] = 3} game:GetService("ReplicatedStorage").Remotes.PurchaseUpgrade:InvokeServer(unpack(args)) wait(0.1)
local args = {[1] = 4} game:GetService("ReplicatedStorage").Remotes.PurchaseUpgrade:InvokeServer(unpack(args)) wait(0.1)
local args = {[1] = 5} game:GetService("ReplicatedStorage").Remotes.PurchaseUpgrade:InvokeServer(unpack(args)) wait(0.1)
local args = {[1] = 6} game:GetService("ReplicatedStorage").Remotes.PurchaseUpgrade:InvokeServer(unpack(args)) wait(0.1)
local args = {[1] = 7} game:GetService("ReplicatedStorage").Remotes.PurchaseUpgrade:InvokeServer(unpack(args)) wait(0.1)
        end
    end)
end
function ReEgg()
    spawn(function ()
        while getgenv().Rebirth == true do
game:GetService("ReplicatedStorage").Remotes.Rebirth:InvokeServer() wait(1)
        end
    end)
end
function PocketsFat()
    spawn(function ()
        while getgenv().MoneyLonger == true do
game:GetService("ReplicatedStorage").Remotes.JumpFinished:InvokeServer() wait(0.1)
        end
    end)
end
function WTR()
    spawn(function ()
        while getgenv().TimeWasteReward == true do
local args = {[1] = 1} game:GetService("ReplicatedStorage").Remotes.RedeemReward:InvokeServer(unpack(args)) wait(0.1)
local args = {[1] = 2} game:GetService("ReplicatedStorage").Remotes.RedeemReward:InvokeServer(unpack(args)) wait(0.1)
local args = {[1] = 3} game:GetService("ReplicatedStorage").Remotes.RedeemReward:InvokeServer(unpack(args)) wait(0.1)
local args = {[1] = 4} game:GetService("ReplicatedStorage").Remotes.RedeemReward:InvokeServer(unpack(args)) wait(0.1)
local args = {[1] = 5} game:GetService("ReplicatedStorage").Remotes.RedeemReward:InvokeServer(unpack(args)) wait(0.1)
local args = {[1] = 6} game:GetService("ReplicatedStorage").Remotes.RedeemReward:InvokeServer(unpack(args)) wait(0.1)
local args = {[1] = 7} game:GetService("ReplicatedStorage").Remotes.RedeemReward:InvokeServer(unpack(args)) wait(0.1)
local args = {[1] = 8} game:GetService("ReplicatedStorage").Remotes.RedeemReward:InvokeServer(unpack(args)) wait(0.1)
local args = {[1] = 9} game:GetService("ReplicatedStorage").Remotes.RedeemReward:InvokeServer(unpack(args)) wait(0.1)
        end
    end)
end

local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()

local w = library:CreateWindow("Anime Fly Race")

local b = w:CreateFolder("Main")

b:Toggle("Auto Jump",function(val)
getgenv().MoneyLonger = val
PocketsFat()
end)

b:Toggle("Auto Upgrade",function(val)
getgenv().Upgrade = val
Upgrades()
end)

b:Toggle("Collect Orb",function(val)
getgenv().Orb = val
Orb()
end)

b:Toggle("Reward Collect",function(val)
getgenv().TimeWasteReward = val
WTR()
end)

b:Toggle("Start Hatching",function(val)
getgenv().Birth = val
Eggs()
end)

b:Dropdown("Select To Hatch",{"Red","Blue","Green","Yellow","Purple"},true,function(val)
BV = val
end)

local b = w:CreateFolder("Miscellaneous")

b:Button("Spin The Wheel",function()
game:GetService("ReplicatedStorage").Remotes.PrizeWheel:FireServer()
end)

b:Button("Redeem Codes",function()
local args = {[1] = "Launch"} game:GetService("ReplicatedStorage").Remotes.RedeemCode:InvokeServer(unpack(args)) wait()
local args = {[1] = "Yen"} game:GetService("ReplicatedStorage").Remotes.RedeemCode:InvokeServer(unpack(args)) wait()
local args = {[1] = "Chi"} game:GetService("ReplicatedStorage").Remotes.RedeemCode:InvokeServer(unpack(args)) wait()
local args = {[1] = "Update1"} game:GetService("ReplicatedStorage").Remotes.RedeemCode:InvokeServer(unpack(args)) wait()
local args = {[1] = "Update2"} game:GetService("ReplicatedStorage").Remotes.RedeemCode:InvokeServer(unpack(args)) wait()
local args = {[1] = "Update3"} game:GetService("ReplicatedStorage").Remotes.RedeemCode:InvokeServer(unpack(args)) wait()
local args = {[1] = "5kLikes"} game:GetService("ReplicatedStorage").Remotes.RedeemCode:InvokeServer(unpack(args)) wait()
local args = {[1] = "10kLikes"} game:GetService("ReplicatedStorage").Remotes.RedeemCode:InvokeServer(unpack(args)) wait()
end)

local b = w:CreateFolder("Credits")

b:Label("Made by X_LuaF#0705",{
    TextSize = 21;
    TextColor = Color3.fromRGB(255,255,255);
    BgColor = Color3.fromRGB(69,69,69);
})
 
b:Button("Copy Discord Invite",function() setclipboard("discord.gg/8tRb8MQcW5") end)

b:DestroyGui()
 
local b = w:CreateFolder("LocalPlayer")

b:Button("Full Version",function() loadstring(game:HttpGet("https://pastebin.com/raw/GphZf9Xe", true))() end)
b:Button("Rejoin",function() loadstring(game:HttpGet("https://pastebin.com/raw/mM7JBG5h", true))() end)
b:Button("Reset",function() loadstring(game:HttpGet("https://pastebin.com/raw/EEY6SATj", true))() end)

local S
local J
local H
local G
 
b:Box("Speed","number",function(val)
S = val
end)
b:Box("Jump","number",function(val)
J = val
end)
b:Box("Hip Height","number",function(val)
H = val
end)
b:Box("Gravity","number",function(val)
G = val
end)
 
b:Toggle("Speed",function(bool)
getgenv().Speed = bool
Speed(S)
end)
b:Toggle("Jump",function(bool)
getgenv().Jump = bool
Jump(J)
end)
b:Toggle("Hip Height",function(bool)
getgenv().Hip = bool
Hip(H)
end)
b:Toggle("Gravity",function(bool)
getgenv().Grav = bool
Grav(G)
end)
 
b:Slider("FOV (Default is 70)",{min = 0;max = 120;precise = true;},function(val)
    game.workspace.CurrentCamera.FieldOfView = val
end)
 
function TPTo(PCFrame)
    local plr = game.Players.LocalPlayer;
           if plr.Character then
            plr.Character.HumanoidRootPart.CFrame = PCFrame
        end
    end
 
getgenv().Speed = false;
getgenv().Jump = false;
getgenv().Hip = false;
getgenv().Chat = false;
getgenv().Grav = false;
 
function Chat(Mes, Freq)
    spawn(function ()
        while getgenv().Chat == true do
local args = {[1] = Mes,[2] = "All"} game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
wait(Freq)
        end
    end)
end
 
function Speed(Nume)
    spawn(function ()
        if getgenv().Speed == true then
            while getgenv().Speed == true do
                game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = Nume
                wait()
            end
        elseif getgenv().Speed == false then
            game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = 16
        end
    end)
end
function Jump(Nume)
    spawn(function ()
        if getgenv().Jump == true then
            while getgenv().Jump == true do
                game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = Nume
                wait()
        end
    elseif getgenv().Jump == false then
            game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = 50
        end
    end)
end
function Hip(Nume)
    spawn(function ()
        if getgenv().Hip == true then
            while getgenv().Hip == true do
            game:GetService("Players").LocalPlayer.Character.Humanoid.HipHeight = Nume
            wait()
        end
    elseif getgenv().Hip == false then
            game:GetService("Players").LocalPlayer.Character.Humanoid.HipHeight = 0.1
        end
    end)
end
function Grav(Nume)
    spawn(function ()
        if getgenv().Grav == true then
            while getgenv().Grav == true do
                game:GetService("Workspace").Gravity = Nume
            wait()
        end
    elseif getgenv().Grav == false then
        game:GetService("Workspace").Gravity = 196.2
        end
    end)
end