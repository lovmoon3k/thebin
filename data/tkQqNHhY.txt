#include <bits/stdc++.h>
using namespace std;
long long a[100010];
long long c[10];
long long kombinacija[10];
int main(){
	long long x, y, k;
	cin >> x >> y >> k;
	for(int i = 1; i <= k; i++){
		cin >> a[i];
	}
	if(y < k){
		// poz
		cout << -1 << endl;
		return 0;
	}
	// precalc
	// za svaku cifru od 1 do 9 cemo proci kroz sva sela
	for(int cifra = 1; cifra <= 9; cifra++){
		long long stepen_cifre = 1;
		for(int selo = 1; selo <= k; selo++){
			stepen_cifre *= cifra;
			c[cifra] += stepen_cifre * a[selo];
		}
	}
	int i = 9;
	/*for(int i = 1; i <= 9; i++)
		cout << c[i] << endl;
	cout << endl;*/
	while(i > 0){
		bool preskoci = false;
		kombinacija[i]++;
		if(kombinacija[i] == 18){
			i--;
		}
		else{
			for(int j = i + 1; j < 10; j++){
				kombinacija[j] = kombinacija[j - 1];
				i = 9;
			}
		}
		long long zbirkomb = 0;
		for(int j = 1; j < 10; j++){
			zbirkomb += kombinacija[j];
			if(zbirkomb > 18){
				preskoci = true;
				kombinacija[9] = 17;
				break;
			}
		}
		if(!preskoci){
			// obradi
			long long permutacija[10];
			for(int j = 1; j < 10; j++)
				permutacija[j] = kombinacija[j];
			do{
				bool preskociPerm = false;
				/*if(zbirkomb == 4){
					for(int j = 1; j <= 9; j++){
						cout << permutacija[j] << " ";
					}
				}*/
				long long zbir = 0;
				for(int j = 1; j < 10; j++){
					zbir += permutacija[j] * c[j];
					if(zbir > y){
						preskociPerm=true;
						break;
					}
				}
				/*if(zbirkomb == 4){
					cout << zbir << endl;
					cout << x << " " << y << endl;
				}*/
				long long pamtizbir = zbir;
				if(zbir < x || zbir > y)
					preskociPerm=true;
				if(!preskociPerm){
					// prebroj cifre u zbiru
					long long brojcif[10];
					for(int j = 1; j < 10; j++)
						brojcif[j] = 0;
					while(zbir > 0){
						long long zadnja = zbir % 10;
						brojcif[zadnja]++;
						zbir /= 10;
					}
					bool moze = true;
					for(int j = 1; j < 10; j++){
						if(permutacija[j] != brojcif[j]){
							moze = false;
							break;
						}
					}
					if(moze){
						cout << pamtizbir;
						return 0;
					}
				}
			}while(next_permutation(permutacija + 1, permutacija + 10));
		}
	}
	cout << -1;
	return 0;
}