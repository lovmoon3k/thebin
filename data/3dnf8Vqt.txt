import java.util.*;
import java.util.stream.Collectors;
class Pair implements Comparable<Pair>{
     Character c;
     int n;

    public Pair (Character c, int n) {
        this.c = c;
        this.n = n;
    }


    public Character getC() {
        return c;
    }

    public int getN() {
        return n;
    }

    @Override
    public int compareTo(Pair this, Pair o) {

      if(this.getN() == o.getN()){
          return (this.getC().compareTo(o.getC()));
      }else{
          if(this.getN() > o.getN()){
              return -1;
          }
          return 1;
      }

    }

  }
public class SymbolCount {
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        String input = scan.nextLine();
        Map<Character, Pair> sumbols = new HashMap<>();
        Map<Character, Pair> small = new HashMap<>();
        Map<Character, Pair> capital =new HashMap<>();



        for (int i = 0; i < input.length(); i++) {
            char actual =  input.charAt(i);
           if(actual>= 65 && actual< 91){
               capital.putIfAbsent(actual, new Pair(actual,0));
               capital.get(actual).n++;
           }else if(actual>= 97 && actual< 123){
                small.putIfAbsent(actual, new Pair(actual,0));
                small.get(actual).n++;
            }else{
                sumbols.putIfAbsent(actual, new Pair (actual,0));
                sumbols.get(actual).n++;
            }
        }
        print(sumbols);
        print(small);
        print(capital);

    }

    public static void  print(Map<Character,Pair>map){
        if(map.isEmpty()) {
            System.out.println("-");
        }else{
           List<String> result = map.values().stream()
                   .sorted(Pair::compareTo)
                   .limit(1)
                   .map(custom -> custom.getC()+" "+custom.getN())
                   .collect(Collectors.toList());
            System.out.println(result.get(result.size()-1));
        }
    }


}
