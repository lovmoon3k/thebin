function split(szFullString, szSeparator)
  local nFindStartIndex = 1
  local nSplitIndex = 1
  local nSplitArray = {}

  while true do
    local nFindLastIndex = string.find(szFullString, szSeparator, nFindStartIndex)
    if not nFindLastIndex then
      gg.setVisible(false)
      nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, string.len(szFullString))
      break
    end

    nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, nFindLastIndex - 1)
    nFindStartIndex = nFindLastIndex + string.len(szSeparator)
    nSplitIndex = nSplitIndex + 1
  end

  return
  nSplitArray
end

function xgxc(szpy, qmxg)
  for x = 1, #qmxg do
    xgpy = szpy + qmxg[x].offset
    xglx = qmxg[x].type
    xgsz = qmxg[x].value
    xgdj = qmxg[x].freeze

    if xgdj == nil or
      xgdj == "" then
      gg.setVisible(false)
      gg.setValues({
        [1] = {
          address = xgpy,
          flags = xglx,
          value = xgsz
        }
      })
      gg.addListItems({
        [1] = {
          address = xgpy,
          flags = xglx,
          freeze = true,
          value = xgsz
        }
      })
     else
      gg.setVisible(false)
      gg.addListItems({
        [1] = {
          address = xgpy,
          flags = xglx,
          freeze = true,
          value = xgsz
        }
      })
    end

    xgsl = xgsl + 1
    xgjg = true
  end
end

function xqmnb(qmnb)
  gg.clearResults()
  gg.setRanges(qmnb[1].memory)
  gg.setVisible(false)
  gg.searchNumber(qmnb[3].value, qmnb[3].type)

  if gg.getResultCount() == 0 then
   else
    gg.setVisible(false)
    gg.refineNumber(qmnb[3].value, qmnb[3].type)
    gg.setVisible(false)
    gg.refineNumber(qmnb[3].value, qmnb[3].type)
    gg.setVisible(false)
    gg.refineNumber(qmnb[3].value, qmnb[3].type)
    gg.setVisible(false)
    sl = gg.getResults(999999)
    sz = gg.getResultCount()
    xgsl = 0

    if sz > 999999 then
      gg.setVisible(false)
      sz = 999999
    end

    for i = 1, sz do
      pdsz = true

      for v = 4, #qmnb do
        if pdsz == true then
          gg.setVisible(false)
          pysz = {}
          pysz[1] = {}
          pysz[1].address = sl[i].address + qmnb[v].offset
          pysz[1].flags = qmnb[v].type
          szpy = gg.getValues(pysz)
          pdpd = qmnb[v].lv .. ";" .. szpy[1].value
          szpd = split(pdpd, ";")
          tzszpd = szpd[1]
          pyszpd = szpd[2]

          if tzszpd == pyszpd then
            gg.setVisible(false)
            pdjg = true
            pdsz = true
           else
            pdjg = false
            pdsz = false
          end
        end
      end

      if pdjg == true then
        gg.setVisible(false)
        szpy = sl[i].address
        xgxc(szpy, qmxg)
      end
    end

    if xgjg == true then
      gg.setVisible(false)
     else
      gg.setVisible(false)
    end
  end
end


on = " OFF"
off = " ON"
lighton = on
lightfix = on
drone4 = on
drone8 = on
drone12 = on
if os.date("%Y%m%d") > "20230231" then 
print("⚠️ SCRIPT EXPIRED ⚠️\n")
print("╭∩╮（￣▽￣）╭∩╮")
print("🔴 𝚂𝙲𝚁𝙸𝙿𝚃 𝚆𝙰𝚂 𝙴𝚇𝙿𝙸𝚁𝙴𝙳")
print("🔴 𝙳𝙾𝚆𝙽𝙻𝙾𝙰𝙳 𝙽𝙴𝚆 𝚅𝙴𝚁𝚂𝙸𝙾𝙽")
print("🔴 𝙸𝙽 𝙼𝚈 𝚈𝙾𝚄𝚃𝚄𝙱𝙴 𝙲𝙷𝙰𝙽𝙽𝙴𝙻")
print(os.date("𝐃𝐀𝐓𝐄 ➢ ❲%A %d %B %Y❳"))
print(os.date("𝐓𝐈𝐌𝐄 ➢ ❲%H:%M %p %Z ❳"))
os.exit()
end

Password = "JERUK"
Pass = gg.prompt({"🔐 KEY SCRIPT ONE DAY"},{},{"text"})
if not Pass then FUCEK() end
if Pass[1] == Password then
gg.toast("🔐 Key Correct 🔐")
else
gg.alert("⚠️ KEY WRONG ⚠️\n\n🇮🇩 INDONESIA 🇮🇩\nKUNCI YANG KAMU MASUKAN SALAH.\nSILAKAN TEKAN SALIN DAN TEMPEL DI GOOGLE CROME\nUNTUK MENDAPATKAN KUNCI\n\n🏴󠁧󠁢󠁥󠁮󠁧󠁿 ENGLISH 🏴󠁧󠁢󠁥󠁮󠁧󠁿\nTHE KEY YOU ENTERED IS INCORRECT\nPLEASE PRESS COPY AND PASTE IN GOOGLE CROME\nTO GET THE KEY","👉 COPY")
gg.copyText("https://semawur.com/RcOKdfZFY")
print("𝑇𝐻𝐼𝑆 𝑆𝐶𝑅𝐼𝑃𝑇 𝐼𝑆 𝑀𝐴𝐷𝐸 𝐵𝑌 ")
print("🇮🇩 🇧 🇦 🇳 🇬     🇵 🇱 🇪 🇳 🇬 🇮🇩")
print("𝑌𝑂𝑈 𝐶𝐴𝑁 𝑆𝑈𝐵𝑆𝐶𝑅𝐼𝐵𝐸 𝑀𝑌 𝑌𝑂𝑈𝑇𝑈𝐵𝐸 𝐶𝐻𝐴𝑁𝑁𝐸𝐿")
print("𝐹𝑂𝑅 𝑀𝑂𝑅𝐸 𝑆𝐶𝑅𝐼𝑃𝑇 𝑂𝑅 𝐽𝑂𝐼𝑁 𝑀𝐸 𝑂𝑁 𝑇𝐸𝐿𝐸𝐺𝑅𝐴𝑀 ")
print("💖 𝑇𝐻𝐴𝑁𝐾𝑆 𝑌𝑂𝑈 💖")
print(os.date("𝐃𝐀𝐓𝐄 ➢ ❲%A %d %B %Y❳"))
print(os.date("𝐓𝐈𝐌𝐄 ➢ ❲%H:%M %p %Z ❳"))
os.exit()
end
ProgressBar = '║░░░░░░░░░░░░░░░║'
for _FORV_2_ = 1, 15 do
gg.sleep(100)
ProgressBar = ProgressBar:gsub('░', '▓', 1)
gg.toast(ProgressBar)
end
gg.toast("🇮🇩 MADE BY BANG PLENG 🇮🇩")
gg.alert("╔क════════════क⊱✫⊰क════════════क╗\n\n➣ App Name: "..gg.getTargetInfo()["name"].."\n➣ App Version: "..gg.getTargetInfo()["versionName"].."\n➣ Package Name: "..gg.getTargetInfo()["packageName"].."\n➣ Installation Date: "..os.date("%x", gg.getTargetInfo()["firstInstallTime"]).."\n➣ Last Update: "..os.date("%x", gg.getTargetInfo()["lastUpdateTime"]).."\n\n╚क════════════क⊱✫⊰क════════════क╝")
gg.alert("┏• BYPASS BETA ON IN LOBY \n┣• SHOW LIGHT PLAYER ON IN GAME \n┣• SHOW LIGHT PLAYER OFF AFTER MATCH \n┣• DRONE VIEW ON IN GAME \n┗• DRONE VIEW OFF AFTER MATCH ")
function FUCEK()
NOOB = gg.prompt({
	"\n 📌 C++ Made By Bang Pleng\n📌 Youtube Bang Pleng\n📌 Telegram @bangplengchannel\n📌 Game Super Sus 1.38.17.032\n",
	" 🛡️ BYPASS ACOUNT",
	" 💡 SHOW LIGHT PLAYER" .. lighton,
	" 🛩️ DRONE VIEW MAP X4" .. drone4,
	" 🛩️ DRONE VIEW MAP X8" .. drone8,
	" 🛩️ DRONE VIEW MAP X12" .. drone12,
	" ❌ EXIT SCRIPT"
	},{},{"checkbox","checkbox","checkbox","checkbox","checkbox","checkbox","checkbox"})
if NOOB == nil then gg.toast("•[MADE BY BANG PLENG]•") else
if NOOB[1] == true then

end
if NOOB[2] == true then
gg.toast('10')
gg.sleep(100)
gg.toast('10')
gg.sleep(100)
gg.toast('10')
gg.sleep(100)
gg.toast('10')
gg.sleep(100)
gg.toast('10')
gg.sleep(100)
gg.toast("🛡️ Bypass [Beta] Active 🛡️")
end
if NOOB[3] == true then
if lighton == on then
gg.setRanges(gg.REGION_ANONYMOUS)
gg.searchNumber("1088421888;1082130432;1061997773", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
gg.refineNumber("1082130432", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
lgh = gg.getResults(100)
gg.editAll("1148829696", gg.TYPE_DWORD)
gg.toast("💡SHOW LIGHT PLAYER ON💡")
gg.clearResults()
lighton = off
else
if lgh ~= nil then
gg.setValues(lgh)
end
gg.clearResults()
gg.toast("💡SHOW LIGHT PLAYER OFF💡")
lighton = on
end
end
if NOOB[4] == true then
if drone4 == on then
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber("42", gg.TYPE_FLOAT)
drn = gg.getResults(10)
gg.editAll("95", gg.TYPE_FLOAT)
gg.toast("🛩️ DRONE VIEW MAP X4 ON 🛩️")
gg.clearResults()
drone4 = off
else
if drn ~= nil then
gg.setValues(drn)
end
gg.clearResults()
gg.toast("🛩️ DRONE VIEW MAP X4 OFF 🛩️")
drone4 = on
end
end
if NOOB[5] == true then
if drone8 == on then
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber("42", gg.TYPE_FLOAT)
map = gg.getResults(10)
gg.editAll("145", gg.TYPE_FLOAT)
gg.toast("🛩️ DRONE VIEW MAP X8 ON 🛩️")
gg.clearResults()
drone8 = off
else
if map ~= nil then
gg.setValues(map)
end
gg.clearResults()
gg.toast("🛩️ DRONE VIEW MAP X8 OFF 🛩️")
drone8 = on
end
end
if NOOB[6] == true then
if drone12 == on then
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber("42", gg.TYPE_FLOAT)
viw = gg.getResults(10)
gg.editAll("255", gg.TYPE_FLOAT)
gg.toast("🛩️ DRONE VIEW MAP X12 ON 🛩️")
gg.clearResults()
drone12 = off
else
if viw ~= nil then
gg.setValues(viw)
end
gg.clearResults()
gg.toast("🛩️ DRONE VIEW MAP X12 OFF 🛩️")
drone12 = on
end
end
if NOOB[7] == true then
print("☆┌─┐     ┌┐☆  ")
print("    │▒│     /▒/                   ╭━  ꜱᴄʀɪᴘᴛ ʙʏ ʙᴀɴɢ ᴘʟᴇɴɢ")
print("　│▒│ /▒/                       ╰╮ ᴛʜᴀɴᴋꜱ ʏᴏᴜ ꜰᴏʀ ʏᴏᴜ ᴜꜱᴇ")
print("　│▒│/▒/                       ┏┻  ᴛʜɪꜱ ᴍʏ ꜱᴄʀɪᴘᴛ              ")
print("　│▒ /▒/─┬─┐◯    ╰╮             ")
print("　│▒│▒|▒│▒│         ┏┻               ")
print("┌┴─┴─┐-┘─┘       ┗  ɪ ʟᴏᴠᴇ ʏᴏᴜ ᴀʟʟ ɢᴜʏꜱ")
print("│▒┌──┘▒▒▒│◯")
print(os.date("└┐▒▒▒▒▒▒ ┌┘  ┏    𝐃𝐀𝐓𝐄 ➢ ❝ %A %d %B %Y ❞    ┓"))
print(os.date("◯└┐▒▒▒▒   ┌         ┗       𝐓𝐈𝐌𝐄 ➢ ❝ %H: %M %p  %Z ❞       ┛"))
print("         └────┘")
os.exit()
end

end
Ax = -1
end
	
	
	
	
	
while true do
if gg.isVisible(true) then
gg.setVisible(false) 
Ax = 1 end  if Ax == 1 then 
FUCEK()
end
end
