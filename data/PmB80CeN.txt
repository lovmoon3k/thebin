//zao shang hao zhong guo xian zai wo you bing chilling wo hen xi huan bing chilling
#include <bits/stdc++.h>
#define zao_shang_hao ios_base::sync_with_stdio(false);
#define zhong_guo cin.tie(NULL);
#define xian_zai_wo_you cout.tie(NULL);
#define bing_chilling(x) freopen(x".INP", "r", stdin); freopen(x".OUT", "w", stdout);
#define wo_hen_xi_huan_bing_chilling return 0;
#define bug(x) cout << "bing chilling " << x
#define ll long long
#define LD long double
#define PII pair<ll, ll>
#define F first
#define S second
#define MP make_pair
#define VI vector<ll>
#define PB push_back
#define BP(x) ((x)*(x))
#define Hm(x) (1ll<<(x))
#define Gr(x) ((x)&(-(x)))
#define getbit(i, x) (((x)>>(i))&1ll)
#define MS(a, x) memset(a, x, sizeof(a))
#define ffu(i, r) for (int i=1; i<=(int)(r); i++)
#define ffd(i, l) for (int i=(int)(l); i>=1; i--)
#define fou(i, l, r) for (int i=(int)(l); i<=(int)(r); i++)
#define fod(i, l, r) for (int i=(int)(l); i>=(int)(r); i--)
using namespace std;
const ll NMX=432000, oo=0x3C3C3C3C3C3C3C3C, Bs=1000000007;
string s;
ll k, n, cdmx[20][NMX], cdmi[20][NMX], loghai[NMX], pre[NMX], pree[NMX], sl[NMX], sltm[NMX], kq=0, mx=0;
ll getmx(ll x, ll y)
{
    ll lg=loghai[y-x+1];
    return max(cdmx[lg][x], cdmx[lg][y-Hm(lg)+1]);
}
ll getmi(ll x, ll y)
{
    ll lg=loghai[y-x+1];
    return min(cdmi[lg][x], cdmi[lg][y-Hm(lg)+1]);
}
int main()
{
    zao_shang_hao zhong_guo xian_zai_wo_you //bing_chilling("rmq_kbracket")
    cin >> s >> k;
    n=s.length();
    s="@"+s;
    cdmx[0][1]=cdmi[0][1]=0;
    ffu(i, n) cdmx[0][i+1]=cdmi[0][i+1]=cdmx[0][i]-2*(s[i]==')')+1;
    ffu(lg, 16) ffu(i, n-Hm(lg)+2)
    {
        cdmx[lg][i]=max(cdmx[lg-1][i], cdmx[lg-1][i+Hm(lg-1)]);
        cdmi[lg][i]=min(cdmi[lg-1][i], cdmi[lg-1][i+Hm(lg-1)]);
    }
    loghai[1]=0;
    fou(i, 2, n+1) loghai[i]=loghai[i/2]+1;
    MS(pre, 0);
    MS(pree, 0);
    MS(sl, 0);
    MS(sltm, 0);
    ffu(i, n+1) if (pre[cdmx[0][i]+100000]==0) pre[cdmx[0][i]+100000]=pree[cdmx[0][i]+100000]=i;
    else if (getmi(pre[cdmx[0][i]+100000], i)==cdmx[0][i]&&getmx(pre[cdmx[0][i]+100000], i)<=cdmx[0][i]+k)
    {
        sl[cdmx[0][i]+100000]++;
        if (getmx(pre[cdmx[0][i]+100000], i)==cdmx[0][i]+k) sltm[cdmx[0][i]+100000]=sl[cdmx[0][i]+100000];
        if (getmx(pree[cdmx[0][i]+100000], i)==cdmx[0][i]+k) mx=max(mx, i-pree[cdmx[0][i]+100000]);
        kq+=sltm[cdmx[0][i]+100000];
        pre[cdmx[0][i]+100000]=i;
    }
    else
    {
        sl[cdmx[0][i]+100000]=sltm[cdmx[0][i]+100000]=0;
        pre[cdmx[0][i]+100000]=pree[cdmx[0][i]+100000]=i;
    }
    cout << kq << '\n' << mx-(mx==0);
    wo_hen_xi_huan_bing_chilling
}
/*input
)(())(())(
2
output
3
8
*/
//zao shang hao zhong guo xian zai wo you bing chilling wo hen xi huan bing chilling