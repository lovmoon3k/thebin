    /**
     * Clones given BitmapFont and returns new BitmapFont, which is a clone of given font.
     * The two fonts share texture(s), but not the rest of the data.
     * @param src original font (source)
     * @return new copy of given font, sharing only the texture(s) with source font
     */
    public static BitmapFont cloneFont(BitmapFont src) {
    	BitmapFont f = null;
    	
    	BitmapFontData data = cloneBitmapFontData(src.getData());
    	f = new BitmapFont(data, src.getRegions(), src.usesIntegerPositions());
    	
    	return f;
    }
    
    /** Creates a deep copy of given BitmapFontData object. Note that this code is based on 1.9.14 libGDX sources, things may change in the future (like BitmapFontData could get new fields that we don't copy here currently)! */
    public static BitmapFontData cloneBitmapFontData(BitmapFontData d) {
    	if (d == null)
    		return null;
    	
    	BitmapFontData r = new BitmapFontData();
    	
    	r.name = d.name;
    	r.imagePaths = d.imagePaths.clone();
    	r.fontFile = Misc.cloneFileHandle(d.fontFile);
    	r.flipped = d.flipped;
    	r.padTop = d.padTop;
    	r.padBottom = d.padBottom;
    	r.padRight = d.padRight;
    	r.padLeft = d.padLeft;
    	r.lineHeight = d.lineHeight;
    	r.capHeight = d.capHeight;
    	r.ascent = d.ascent;
    	r.descent = d.descent;
    	r.down = d.down;
    	r.blankLineScale = d.blankLineScale;
    	r.scaleX = d.scaleX;
    	r.scaleY = d.scaleY;
    	r.markupEnabled = d.markupEnabled;
    	r.cursorX = d.cursorX;
    	for (int i = 0; i < r.glyphs.length; i++) {
    		if (d.glyphs[i] == null)
    			continue;
    		r.glyphs[i] = new Glyph[d.glyphs[i].length];
    		for (int j = 0; j < d.glyphs[i].length; j++)
    			r.glyphs[i][j] = cloneGlyph(d.glyphs[i][j]);
    	}
    	r.missingGlyph = cloneGlyph(d.missingGlyph);
    	r.spaceXadvance = d.spaceXadvance;;
    	r.xHeight= d.xHeight;
    	if (d.breakChars != null)
    		r.breakChars = d.breakChars.clone();
    	if (d.xChars != null)
    		r.xChars = d.xChars.clone();
    	if (r.capChars != null)
    		r.capChars = d.capChars.clone();
    	
    	return r;
    }