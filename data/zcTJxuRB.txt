#include <iostream>
#include <source_location>
#include <string_view>

template<class... Args>
struct ErrorLog {
  ErrorLog(std::string_view, Args &&..., std::source_location location = std::source_location::current()) {
    std::cout << location.function_name() << std::endl;
  }

  ErrorLog(std::source_location location, std::string_view message, Args &&... args)
    : ErrorLog(message, const_cast<Args &&>(args)..., location) {}
};

template<class... Args>
ErrorLog(std::string_view, Args &&...) -> ErrorLog<Args...>;

auto foo() {
  return std::source_location::current();
}

int main() {
  ErrorLog("foo", 4);
  ErrorLog(foo(), "bar", 2);
}
