diff --git a/lua/user/dap/configurations.lua b/lua/user/dap/configurations.lua
index 9f60cf4..81a909f 100644
--- a/lua/user/dap/configurations.lua
+++ b/lua/user/dap/configurations.lua
@@ -1,5 +1,5 @@
-return {
-  php = {
+return function(default)
+  default.php = {
     {
       type = 'php',
       request = 'launch',
@@ -9,5 +9,6 @@ return {
       serverSourceRoot = "/var/local/git/my.al-dev.com",
       localSourceRoot = "/home/hunmonk/git/apartmentlines/apartmentlines.com",
     }
-  },
-}
+  }
+  return default
+end
diff --git a/lua/user/init.lua b/lua/user/init.lua
index eddea81..61f55d4 100644
--- a/lua/user/init.lua
+++ b/lua/user/init.lua
@@ -307,6 +307,8 @@ local config = {
       },
     },
     treesitter = { -- overrides `require("treesitter").setup(...)`
+      -- Install parsers synchronously (only applied to `ensure_installed`)
+      sync_install = true,
       ensure_installed = {
         "bash",
         "c",
@@ -452,5 +454,6 @@ local config = {
 ------------------------------------------
 vim.cmd([[ autocmd! CursorHold,CursorHoldI * lua vim.diagnostic.open_float(nil, {focus=false})]])
 vim.opt.scrolloff = 8
+vim.api.nvim_command("autocmd FileType php setlocal autoindent")
 
 return config
diff --git a/lua/user/util.lua b/lua/user/util.lua
index 60bd32b..83a621d 100644
--- a/lua/user/util.lua
+++ b/lua/user/util.lua
@@ -1,11 +1,11 @@
 local _M = {}
 
 function _M.map(mode, lhs, rhs, opts)
-    local options = { noremap = true }
-    if opts then
-        options = vim.tbl_extend("force", options, opts)
-    end
-    vim.api.nvim_set_keymap(mode, lhs, rhs, options)
+  local options = { noremap = true }
+  if opts then
+    options = vim.tbl_extend("force", options, opts)
+  end
+  vim.api.nvim_set_keymap(mode, lhs, rhs, options)
 end
 
 function _M.nmap(lhs, rhs, opts)
@@ -13,9 +13,9 @@ function _M.nmap(lhs, rhs, opts)
 end
 
 function _M.get_mason_package_install_path(package_name)
-    local mason_registry = require("mason-registry")
-    local package = mason_registry.get_package(package_name)
-    return package:get_install_path()
+  local mason_registry = require("mason-registry")
+  local package = mason_registry.get_package(package_name)
+  return package:get_install_path()
 end
 
 return _M