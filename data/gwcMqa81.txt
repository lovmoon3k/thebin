import Foundation

public struct PlaySettingsOptionsSection {
    var optionsTitles: [String] = []
    var options: [PlaySettingsOption]
}

enum PlaySettingsOption {
    case playbackAutoplayOption(_ option: PlaybackAutoplayOption)
    case playbackShakeOption(_ option: PlaybackShakeOption)
    case timerOption(_ option: TimerOption)
    case advancedOption(_ option: AdvancedOption)
    case alertsOption(_ option: AlertsOption)
}

enum PlaybackAutoplayOption : Int, Codable {
    case playbackAutoplayOptionAddUpcomingAlbum
}

enum PlaybackShakeOption : Int, Codable {
    case playbackShakeOptionGoToPlayer
}

enum TimerOption : Int, Codable, CaseIterable {
    case timerOption5mins

    var description : String {
        switch self {
            case .timerOption5mins: return "5 mins"
        }
    }
}

enum AdvancedOption : Int, Codable {
    case advancedOptionDisplayPlaybackAndVolume
}

enum AlertsOption : Int, Codable {
    case alertsOptionNoUpcomingPlayback
}

let settings = PlaySettingsOptionsSection(
    options: [
        .playbackAutoplayOption(.playbackAutoplayOptionAddUpcomingAlbum),
        .advancedOption(.advancedOptionDisplayPlaybackAndVolume)
    ]
)

if case .advancedOption(let option) = settings.options.last {
    print(option)
}
