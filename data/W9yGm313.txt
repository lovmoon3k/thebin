#include <algorithm>
#include <iostream>
#include <iomanip>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cassert>
#include <numeric>

#include <random>
#include <chrono>
#include <conio.h>

using namespace std;

#define int long long
#define IOS ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);

const long long INF = 1e18 + 7;
const double EPS = 1e-6;
const int N = 1e5 + 7;
const int MOD = 1e9 + 7;

int solve(vector<int>& a, int n) {
    int mini1 = INF, mini2 = INF, maxi1 = -INF, maxi2 = -INF;
    for (int i = 0; i < n; ++i) {
        int x = a[i];
        if (x < mini1) {
            mini2 = mini1;
            mini1 = x;
        } else if (x < mini2) {
            mini2 = x;
        }
        if (x > maxi1) {
            maxi2 = maxi1;
            maxi1 = x;
        } else if (x > maxi2) {
            maxi2 = x;
        }
    }
    int ans;
    if (mini1 < 0 && maxi1 > 0) {
        ans = mini1 * maxi1;
    }
    if (maxi1 <= 0) {
        ans = maxi1 * maxi2;
    }
    if (mini1 >= 0) {
        ans = mini1 * mini2;
    }
    return ans;
}

int Debug(vector<int>& a, int n) {
    int ans = INF;
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < n; ++j) {
            if (i != j) {
                ans = min(ans, a[i] * a[j]);
            }
        }
    }
    return ans;
}

int32_t main() {
    IOS;

    std::mt19937 rng(std::chrono::steady_clock::now().time_since_epoch().count());

    for (int sz = 2; sz <= 20; ++sz) {
        vector<int> a(sz);
        for (int i = 0; i < 100; ++i) {
            for (int j = 0; j < sz; ++j) {
                int x = rng() % 10;
                if (rng() % 2) {
                    x = -x;
                }
                a[j] = x;
            }
            int ans1 = solve(a, a.size()), ans2 = Debug(a, int32_t(a.size()));
            if (ans1 != ans2) {
                cout << a.size() << endl;
                for (auto it: a) {
                    cout << it << ' ';
                }
                cout << endl;
                cout << "ans: " << ans2 << ' ' << ans1;
                cout << endl << endl;
            }
        }
   }

    return 0;
}

