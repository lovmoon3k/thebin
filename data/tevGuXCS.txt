
		--	By MissingMadness
		
		--// All Questions can be sent to MissingMadness#7222 :D //
		
		--Time-Based Lighting System


-- This script can function on the Server OR Client, however it is on the client so you can change the settings and see the difference.

-- // Services // --

local Players = game:GetService('Players')

-- // Variables // -- 

local Lighting = game:GetService('Lighting')
local TweenS = game:GetService('TweenService')

-- // Config // -- 

local Range = {6, 9, 12, 15, 17, 18, 24, 3} -- The time periods of the colors (So the color of VarientOfColors[1] will last between 6 - 9 and will be brightness 3)

local Brightness = {7, 4, 4, 4, 6, 0, 0, 0}

local VarientOfColors = {
	Color3.fromRGB(232, 146, 66); -- after 6, before 9 {Sunrise}
	Color3.fromRGB(247, 134, 36); -- after 9 before 12
	Color3.fromRGB(222, 136, 50); -- after 12 before 15 {Noon}
	Color3.fromRGB(243, 145, 59); -- after 15 before 17
	Color3.fromRGB(255, 136, 0); -- after 17 before 18.5 (6:30PM) {Sunset}
	Color3.fromRGB(127, 127, 127); -- after 18.5 before 24
	Color3.fromRGB(197, 197, 197); -- after 24 before 3 {Midnight}
	Color3.fromRGB(133, 135, 133); -- after 3 before 6 
}


local Setting

-- // Functions // --

local function getRange(x) -- Just ignore this. please
	if not x then
		x = 1
	end
	for i,v in pairs(Range) do
		if v == x then
			return i
		end

		if v < x and i + 1 ~= 9 and Range[i + 1] > x then
			return i
		else
			if v < x and Range[1] > x then
				return i
			end
		end

		if x == 0 or not x then
			return 6
		end

	end

	return 3
end


local function setLighting()
	local currentTime = Lighting.ClockTime
	local range = getRange(currentTime)
	
	if range ~= 8 and range ~= 6 then
		
		local tweenInf = TweenInfo.new(3) -- Changing this affects how quickly it'll change. Same for anything labbeled {T}
		local properties = {ColorShift_Top = VarientOfColors[range];
			Brightness = Brightness[range];	
		}
		TweenS:Create(Lighting, tweenInf, properties):Play()
		
		if Lighting.ExposureCompensation ~= 0 then
			local tweenInf = TweenInfo.new(8) -- {T}
			local properties = {ExposureCompensation = -0.25}
			TweenS:Create(Lighting, tweenInf, properties):Play()
		end
		
	else
		
		local tweenInf = TweenInfo.new(8) -- {T}
		local properties = {ColorShift_Top = VarientOfColors[range];
			Brightness = Brightness[range];
		}
		TweenS:Create(Lighting, tweenInf, properties):Play()
		
	end

	if Lighting.ClockTime > 17 and Lighting.ClockTime <= 23.99 or Lighting.ClockTime < 06 and Lighting.ClockTime > 0 then
		local tweenInf = TweenInfo.new(40) -- This changes how quickly it gets dark after the clock time hits 17
		local properties = {
			ExposureCompensation = -0.5;
			Ambient = Color3.fromRGB(0,0,0); -- Makes it dark (pitch black)		
		}
		TweenS:Create(Lighting, tweenInf, properties):Play()
	elseif Lighting.ClockTime > 5 and Lighting.ClockTime <= 18 then
		local tweenInf = TweenInfo.new(10) -- This changed how quicly it gets bright again
		local properties = {
			Ambient = Color3.fromRGB(111, 111, 111);	-- Changed general day ambient
		}
		TweenS:Create(Lighting, tweenInf, properties):Play()
	end
end

-- // Execution // --

wait(130)
setLighting()
Lighting:GetPropertyChangedSignal('TimeOfDay'):Connect(setLighting) -- Makes it check everytime time changes