-- Find the help file for this program here:
-- https://pastebin.com/rnHjp1qQ
-- or run "gitpull help"



----- PROGRAM START -----
local args = {...}
local command = args[1]
local fileName	 = args[2]
local url = args[3]
local LOG_FILE_PATH = ".git_log"

function removeLog()
	file = fs.open(LOG_FILE_PATH, "r")
	local table = textutils.unserialise(file.readAll())
	file.close()

	for i in 1, #table, 1 do
		if table[fileName] ~= nil then
			break
		end
		print("File not found")
	end

	table[fileName] = nil

	file = fs.open(LOG_FILE_PATH, "w")
	file.write(textutils.serialise(table))
	file.close()
end

if command == "clone" then
	if fs.exists(LOG_FILE_PATH) then
		local file = fs.open(LOG_FILE_PATH, "r")
		local git_log = textutils.unserialise(file.readAll())
		file.close()

		git_log[fileName] = url

		file = fs.open(LOG_FILE_PATH, "w")
		file.write(textutils.serialise(git_log))
		file.close()
	else
		local file = fs.open(LOG_FILE_PATH, "w")
		file.writeLine(textutils.serialise({fileName.. "=" ..url}))
		file.close()
	end

	shell.run("wget " .. url .. " " .. fileName)
elseif command == "update" then
	local file = fs.open(LOG_FILE_PATH, "r")
	git_log = textutils.unserialise(file.readAll())
	file.close()

	shell.run("rm " .. fileName)
	shell.run("wget " .. git_log[fileName] .. " " .. fileName)
elseif command == "rmlog" then
	removeLog()
elseif command == "rm" then
	removeLog()
	shell.run("rm " ..file)
elseif command == "clearlog" then
	fs.open(LOG_FILE_PATH, "w").write(textutils.serialise({})).close()
elseif command == "help" then
	if not fs.exists(".gitpull_help") then
		shell.run("pastebin get rnHjp1qQ .gitpull_help")
	end

	file = fs.open(".gitpull_help", "r")
	print(file.readAll())
	file.close()
else
	print("Not a valid command")
end
