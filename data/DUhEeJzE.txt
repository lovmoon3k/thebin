struct TimedEvent {
	EventType_t event;
	std::chrono::duration<long double> timestamp;
	
/* //adding this section makes it work
	template <class T, class U>
	TimedEvent(EventType_t && e, std::chrono::duration<T, U> && t) {
		event = std::move(e);
		timestamp = std::move(t);
	}
*/
};

std::vector<TimedEvent> timedEvents;

auto t1 = TimedEvent{a1, std::chrono::seconds(1000)}; //works
timedEvents.emplace_back(std::move(a1), std::chrono::seconds(1000)); //doesn't compile without the added constructor