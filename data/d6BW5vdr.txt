#include <iostream>
#include <vector>
#include <fstream>
#include <algorithm> // find, sort, count
#include <utility> // pair

#define inputFile "water.inp"
#define outputFile "water.out"

using namespace std;

int n;
vector<pair<int, int>> buckets;

void Input()
{
    ifstream f;
    f.open(inputFile);

    f >> n;

    int b, c;
    for (int i = 0 ; i < n; ++i)
    {
        f >> b >> c;
        buckets.push_back(make_pair(b, c));
    }

    f.close();
}

bool Compare(const pair<int, int> &bk1, const pair<int, int> &bk2)
{
    return bk1.second < bk2.second;
}

int Process()
{
    sort(buckets.begin(), buckets.end(), Compare);

    int waterSum = 0;
    for (auto bucket : buckets)
    {
        waterSum += bucket.first;
    }

    vector<bool> filled_up(n, false);

    int i = 0;
    while (waterSum >= buckets[i].second)
    {
        waterSum = waterSum - buckets[i].second;
        filled_up[i] = true;
        ++i;
    }

    int emptyBuckets = count(filled_up.begin(), filled_up.end(), false);
    return emptyBuckets;
}

void Output()
{
    int result = Process();

    ofstream f;
    f.open(outputFile);

    f << result;

    f.close();
}

int main()
{
    Input();
    Process();
    Output();

    return 0;
}