 map $http_host $this_host {
     "" $host;
     default $http_host;
}

map $http_x_forwarded_proto $the_scheme {
    default $http_x_forwarded_proto;
    "" $scheme;
}

map $http_x_forwarded_host $the_host {
    default $http_x_forwarded_host;
    "" $this_host;
}

server {
    access_log  /var/log/nginx/nextcloud.access.log;
    error_log  /var/log/nginx/nextcloud.error.log;
    server_name foerderverein-oberlin.wesystems.cloud;

    location / {
        proxy_pass            http://nextcloud_app:80;
        proxy_read_timeout    25000;
        proxy_connect_timeout 25000;
        proxy_redirect        off;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        sub_filter 'http://' 'https://';
        sub_filter_once off;
        proxy_ssl_server_name on;
        proxy_set_header        SSL_PROTOCOL $ssl_protocol;
        add_header 'Content-Security-Policy' 'upgrade-insecure-requests';
        client_max_body_size 10G;
        add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;";
    }

    location ~* ^/ds-vpath/ {
        rewrite /ds-vpath/(.*) /$1  break;
        proxy_pass http://nextcloud_onlyoffice_server:80;
        proxy_redirect     off;
        client_max_body_size 100m;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $the_host/ds-vpath;
        proxy_set_header X-Forwarded-Proto $the_scheme;
    }

    listen 443 ssl http2;
    ssl_certificate /etc/letsencrypt/live/fqdn/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/fqdn/privkey.pem;
}

server {
    if ($host = fqdn) {
        return 301 https://$host$request_uri;
    }

    server_name fqdn;
    listen 80;
    return 404;
}