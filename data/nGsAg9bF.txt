from collections import Counter

with open('/Users/dejanstankovic/practice/euler/54.txt') as f:
    hands = f.read().splitlines()


def get_value(card):
    if card[0] == 'T':
        return 10
    elif card[0] == 'J':
        return 11
    elif card[0] == 'Q':
        return 12
    elif card[0] == 'K':
        return 13
    elif card[0] == 'A':
        return 14
    else:
        return int(card[0])


def get_suit(card):
    return card[1]


def get_hand(hand):
    hh = [get_value(card) for card in hand]
    aa = Counter(hh)
    res = [k for (k, v) in sorted(aa.items(), key=lambda x: (-x[1], -x[0]))
           for _ in range(v)]
    return res


def get_suits(hand):
    return [get_suit(card) for card in hand]


def is_straight(hand):
    handd = sorted(hand)
    if handd[0] == 2 and handd[1] == 3 and handd[2] == 4 and handd[3] == 5 and handd[4] == 14:
        return True
    return handd == list(range(handd[0], handd[0] + 5))


def is_flush(suits):
    return len(set(suits)) == 1


def is_straight_flush(hand, suits):
    return is_straight(hand) and is_flush(suits)


def is_royal_flush(hand, suits):
    return is_straight_flush(hand, suits) and hand[0] == 10


def is_four_of_a_kind(hand):
    return len(set(hand)) == 2 and (hand.count(hand[0]) == 4 or hand.count(hand[1]) == 4)


def is_full_house(hand):
    s = set(hand)
    if len(s) == 2:
        return sorted([hand.count(x) for x in s]) == [2, 3]
    return False


def is_three_of_a_kind(hand):
    s = set(hand)
    return len(s) == 3 and (hand.count(hand[0]) == 3 or hand.count(hand[1]) == 3 or hand.count(hand[2]) == 3)


def is_two_pairs(hand):
    s = set(hand)
    cnts = sorted([hand.count(x) for x in s])
    return len(set(hand)) == 3 and cnts == [1, 2, 2]


def is_one_pair(hand):
    s = set(hand)
    return len(s) == 4 and (hand.count(hand[0]) == 2 or hand.count(hand[1]) == 2 or hand.count(hand[2]) == 2 or hand.count(hand[3]) == 2)


def get_rank(hand, suits):
    if is_royal_flush(hand, suits):
        return 10
    elif is_straight_flush(hand, suits):
        return 9
    elif is_four_of_a_kind(hand):
        return 8
    elif is_full_house(hand):
        return 7
    elif is_flush(suits):
        return 6
    elif is_straight(hand):
        return 5
    elif is_three_of_a_kind(hand):
        return 4
    elif is_two_pairs(hand):
        return 3
    elif is_one_pair(hand):
        return 2
    else:
        return 1


def get_winner(hand1, hand2):
    hand11 = get_hand(hand1)
    hand22 = get_hand(hand2)
    suits1 = get_suits(hand1)
    suits2 = get_suits(hand2)
    rank1 = get_rank(hand11, suits1)
    rank2 = get_rank(hand22, suits2)
    # print(hand11, hand22, rank1, rank2, end=' ')
    if rank1 > rank2:
        return 1
    elif rank1 < rank2:
        return 2
    else:
        if rank1 == 10:
            return 0
        elif rank1 == 9:
            return 1 if hand11[4] > hand22[4] else 2
        elif rank1 == 6:
            for i in range(4, -1, -1):
                if hand11[i] > hand22[i]:
                    return 1
                elif hand11[i] < hand22[i]:
                    return 2
            return 0
        elif rank1 == 5:
            return 1 if hand11[4] > hand22[4] else 2
        elif rank1 == 4:
            return 1 if hand11[0] > hand22[0] else 2
        elif rank1 == 3:
            return 1 if hand11[0] > hand22[0] else 2 if hand11[0] < hand22[0] else 1 if hand11[2] > hand22[2] else 2 if hand11[2] < hand22[2] else 1 if hand11[4] > hand22[4] else 2
        elif rank1 == 2:
            return 1 if hand11[0] > hand22[0] else 2 if hand11[0] < hand22[0] else 1 if hand11[2] > hand22[2] else 2 if hand11[2] < hand22[2] else 1 if hand11[3] > hand22[3] else 2 if hand11[3] < hand22[3] else 1 if hand11[4] > hand22[4] else 2
        elif rank1 == 1:
            for i in range(5):
                if hand11[i] > hand22[i]:
                    return 1
                elif hand11[i] < hand22[i]:
                    return 2
            return 0


def main():
    count = 0
    for hand in hands:
        hand = hand.split(' ')
        if get_winner(hand[:5], hand[5:]) == 1:
            count += 1

    print(count)


if __name__ == '__main__':
    main()
