#include <iostream>

using namespace std;

template <typename Func> struct Finally
{
    Finally(Func func) : _func(func) {}
    ~Finally() { _func(); }

private:
    Func _func;
};

void f2()
{
    auto onext = Finally([]() { cout << "onext f2\n"; });
    throw std::logic_error("exc");
}

void f1()
{
    Finally onext([]() { cout << "onext f1\n"; });
    f2();
}

int main(int argc, char* argv[])
{
    try {
        f1();
    } catch (std::exception& e) {
        cout << "exc: " << e.what() << endl;
    }
    return 0;
}