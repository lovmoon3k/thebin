Most Basic Of Python Syntax

"+", "-", "*", "/", "%", "**"
"+=", "-=", "*=", "/=", "%=", "**=", "&=", "|=", "^=", ">>=", "<<="
"==", "!=", ">", "<", ">=", "<="
"[{expression} for {variable_name} in {iterable}]"
"abs({object})"
"all({iterable})"
"and", "or", "not"
"any({iterable})"
"append()", "extend()", "insert()", "remove()", "pop()", "index()", "count()", "sort()", "reverse()"
"break"
"chr({integer})"
"clear({dictionary_name})"
"continue"
"dict({iterable})"
"dir({object})"
"divmod({object})"
"enumerate({iterable})"
"eval({expression})"
"exec({expression})"
"extend({iterable}, {list_name})"
"file({file_name}, {mode})"
"filter({function_name}, {iterable})"
"float({object})"
"for {variable_name} in {iterable}:"
"format({value}, {format_spec})"
"from {module_name} import {specific_module}"
"get({key}, {dictionary_name})"
"getattr({object}, {name})"
"global {variable_name}"
"globals()"
"id({object})"
"if {condition}:"
"import {module_name}"
"in", "not in"
"input({prompt})"
"insert({index}, {value}, {list_name})"
"int({object})"
"is", "is not"
"isinstance({expression}, {class_name})"
"isinstance({object}, {class_name})"
"items({dictionary_name})"
"iter({object})"
"join({iterable}, {string_name})"
"keys()", "values()", "items()", "get()", "pop()", "popitem()", "update()", "clear()"
"keys({dictionary_name})"
"lambda {arguments}: {expression}"
"len()", "max()", "min()", "sorted()"
"len()", "max()", "min()", "sum()", "sorted()"
"len({dictionary_name})"
"len({list_name})"
"len({object})"
"len({string_name})"
"len({tuple_name})"
"list(enumerate({list_name}))"
"list(filter({function_name}, {iterable}))"
"list(map({function_name}, {iterable}))"
"list(reversed({iterable}))"
"list(zip(*{iterable}))"
"list(zip({iterable1}, {iterable2}))"
"list({iterable})"
"locals()"
"map({function_name}, {iterable})"
"max({iterable})"
"min({iterable})"
"next({iterator})"
"open({file_name}, {mode})"
"ord({character})"
"os.access({path}, {mode})"
"os.chdir({path})"
"os.getcwd()"
"os.listdir({path})"
"os.mkdir({path})"
"os.remove({path})"
"os.rename({path}, {path})"
"os.rmdir({path})"
"os.stat({path})"
"pass"
"pop({index}, {list_name})"
"pop({key}, {dictionary_name})"
"popitem({dictionary_name})"
"print({expression})"
"reduce({function_name}, {iterable})"
"remove({value}, {list_name})"
"replace({old}, {new}, {string_name})"
"repr({object})"
"return {expression}"
"rstrip({string_name})"
"set({iterable})"
"setattr({object}, {name}, {value})"
"sort({list_name})"
"sort({tuple_name})"
"sorted({iterable})"
"split({separator}, {string_name})"
"str({object})"
"str.format({arguments})"
"str.format_map({mapping})"
"strip({string_name})"
"sum({iterable})"
"try:" and "except {exception}:"
"tuple({iterable})"
"type({object})"
"update({dictionary}, {dictionary_name})"
"upper()", "lower()", "capitalize()", "count()", "find()", "index()", "replace()", "split()", "join()", "strip()", "lstrip()", "rstrip()"
"upper({string_name})"
"values({dictionary_name})"
"vars({object})"
"while {condition}:"
"with {context_manager} as {variable_name}:"
"zip(*{iterable})"
"zip({iterable1}, {iterable2})"
"{class_name}({arguments})"
"{dictionary_name}.{method_name}({arguments})"
"{file_object}.close()"
"{file_object}.read()"
"{file_object}.readline()"
"{file_object}.readlines()"
"{file_object}.seek({offset})"
"{file_object}.tell()"
"{file_object}.write({string})"
"{function_name}({arguments})"
"{key}:{value} for {variable_name} in {iterable}"
"{list_name}.{method_name}({arguments})"
"{list_name}[{index}]"
"{list_name}[{start}:{end}:{step}]"
"{string1} + {string2}"
"{string_name}.format({arguments})"
"{string_name}.{method_name}({arguments})"
"{string_name}[{index}]"
"{string_name}[{start}:{end}:{step}]"
"{tuple_name}.{method_name}({arguments})"
"{tuple_name}[{index}]"
"{tuple_name}[{start}:{end}:{step}]"
"{var1}, {var2} = {iterable}"
"{variable_name} = {expression}"