class Anime:
    def __init__(self, zanr = "s", scala_result = 50, scala_input = 10):
        self.scala_result = scala_result
        self.scala_input = scala_input
        self.inp_anim = []
        #self.scala = scala
        self.sum = 0
        self.result = 0
        self.name = input("Название аниме : ")
        if zanr == "s":
            self.l_info = ["Персонажей в целом", "Присутствие топ персонажей", "Сюжет","Романтика", "Рисовка", "Музыка", "Кол-во серий", "Начало(впечатление)", "Концовка(впечатление)", "Плавность сюжета", "Эмоции зрителя", "Эмоции в аниме", "Остаточные эмоции зрителя"]
            self.senen()
        elif zanr == "r":
            self.romantic()
        else:
            print("Введен неверный жанр")

    def senen(self):
        print(".Шкала ввода оценок 0 -",self.scala_input ,". \n" + "_"*17)
        for i in range(len(self.l_info)):
            self.inp_anim.append(int(input("оценка " + self.l_info[i] + ": ")))
        for i in range(len(self.l_info)):
            self.sum += self.inp_anim[i]
        H = self.scala_result/len(self.l_info)
        self.result = int(H*self.sum/self.scala_input)
        print("Оценка аниме ", self.name, " : ", self.result,"из",self.scala_result)

    def romantic(self):
        pass

flagExit = 1
listAnime = []
while flagExit:
    listAnime.append(Anime(scala_result = 100, scala_input = 10))
    if int(input("\nПродолжить? (1-да 0-нет) : ")) != 1:
        flagExit = 0
print(listAnime)
