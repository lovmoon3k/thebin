//BT6600 stepper code with encoder

#include <LiquidCrystal_I2C.h>

// defines pins numbers

const int stepPin = 12;

const int dirPin = 11;

const int enPin = 10;

//

int val;

int encoder0PinA = 3;

int encoder0PinB = 4;

int encoder0Pos = 5;

int encoder0PinALast = LOW;

int n = LOW;

int maxKnob = 50;

int stepperSpeed = 2000;

int maxSpeed     = 600;
int minSpeed     = 2000;
LiquidCrystal_I2C lcd(0x27, 16, 2);


void setup() {

	// initialize the LCD
	//lcd.begin();
lcd.init();
	// Turn on the blacklight and print a message.
	lcd.backlight();
//lcd.noDisplay(); 

lcd.setCursor(1,0);
	lcd.print("**Motor Speed**");
lcd.setCursor(1,1);
lcd.print("Filament Puller");
delay(4000);
  Serial.begin(9600);



  pinMode (encoder0PinA, INPUT);

  pinMode (encoder0PinB, INPUT);



  // Sets the two pins as Outputs

  pinMode(stepPin,OUTPUT);

  pinMode(dirPin,OUTPUT);



  pinMode(enPin,OUTPUT);

  digitalWrite(enPin,LOW);



  // Set Dir to Home switch

  digitalWrite(dirPin,LOW); // Enables the motor to move in a particular direction





}

void loop() {



        motorStep(1);



    getKnob();



}

void motorStep( int MAX){



   for(int x = 0; x < MAX; x++) {

        digitalWrite(stepPin,HIGH);

        delayMicroseconds(stepperSpeed);

        digitalWrite(stepPin,LOW);

        delayMicroseconds(stepperSpeed);

      }

   

}

void getKnob(){  

     n = digitalRead(encoder0PinA);

  if ((encoder0PinALast == LOW) && (n == HIGH)) {

    if (digitalRead(encoder0PinB) == LOW) {

      encoder0Pos--;

    } else {

      encoder0Pos++;

    }

    if( encoder0Pos > maxKnob ){

         encoder0Pos = maxKnob;

    }

    else if( encoder0Pos < 0 ){

         encoder0Pos = 0;

    }



    int r= encoder0Pos * 100;



    r = minSpeed - r;

    r = (r < maxSpeed)?maxSpeed : r;



    stepperSpeed = r;

 

   // Serial.print (encoder0Pos);

  //  Serial.println();

    lcd.clear();
    lcd.setCursor(0, 0);
	  lcd.print("Motor speed:");
    Serial.println(r);
	  lcd.print(r);
delay(600);
    //Serial.println ( r );

  }
 if (digitalRead(encoder0Pos)){
   //Serial.println(encoder0Pos);
 }
  encoder0PinALast = n;

}
