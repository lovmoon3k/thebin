using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace Основы.Практика
{
    class Program
    {
        static void Main(string[] args)
        {
            List<string> collection;

            string[] firstArray =
            {
                "2", "2", "2", "4", "5"
            };

            string[] secondArray =
            {
                "4", "4", "4", "2", "1"
            };

            Console.WriteLine("Перед сортировкой:");
            PrintArray(firstArray);
            PrintArray(secondArray);

            ExcludeArrayValuesRepetitions(ref firstArray);
            ExcludeArrayValuesRepetitions(ref secondArray);

            Console.WriteLine("\nПосле сортировки:");
            PrintArray(firstArray);
            PrintArray(secondArray);

            Console.WriteLine();

            CombineArraysInCollection(firstArray, secondArray, out collection);

            Console.WriteLine("Объеденная коллекция:");
            foreach (var item in collection)
            {
                Console.Write(item + " ");
            }
        }

        public static void PrintArray(string[] array)
        {
            foreach (var item in array)
            {
                Console.Write(item + " ");
            }
            Console.WriteLine();
        }

        public static void ExcludeArrayValuesRepetitions(ref string[] array)
        {
            List<string> tempCollection = new List<string>();

            bool isNumberRepeated = false;

            for (int i = 0; i < array.Length; i++)
            {
                for (int j = 0; j < array.Length; j++)
                {
                    if (array[i] == array[j] && i != j)
                    {
                        isNumberRepeated = true;

                        if (i < j)
                        {
                            tempCollection.Add(array[i]);
                        }

                        break;
                    }
                }

                if (isNumberRepeated == false)
                {
                    tempCollection.Add(array[i]);
                }

                isNumberRepeated = false;
            }

            array = tempCollection.ToArray();
        }

        public static void ExcludeArrayValuesRepetitions(ref string[] comparedArray, string[] opposedArray)
        {
            List<string> tempCollection = new List<string>();

            bool isNumberRepeated = false;

            for (int i = 0; i < comparedArray.Length; i++)
            {
                for (int j = 0; j < opposedArray.Length; j++)
                {
                    if (comparedArray[i] == opposedArray[j])
                    {
                        isNumberRepeated = true;
                        break;
                    }
                }

                if (isNumberRepeated == false)
                {
                    tempCollection.Add(comparedArray[i]);
                }
                isNumberRepeated = false;
            }

            comparedArray = tempCollection.ToArray();
        }

        public static void CombineArraysInCollection(string[] array1, string[] array2, 
            out List<string> collection)
        {
            collection = new List<string>();

            foreach (string str in array1)
            {
                collection.Add(str);
            }

            ExcludeArrayValuesRepetitions(ref array2, array1);

            foreach (string str in array2)
            {
                collection.Add(str);
            }
        }
    }
}
