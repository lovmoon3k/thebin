import { defineStore } from 'pinia';
import { fetchWrapper } from 'src/helpers/fetch-wrapper';

const baseUrl = process.env.BACKEND_URL;
export const useAuthStore = defineStore({
  id: 'auth',
  state: () => ({
    // initialize state from local storage to enable user to stay logged in
    user: JSON.parse(localStorage.getItem('user')),
    returnUrl: null
  }),

  actions: {
...
    refreshAccessToken(refreshToken) {
      fetchWrapper.post(`${baseUrl}/token/refresh/`, {refresh: refreshToken})
        .then(response => {
          console.log('(Function) Refresh Access Token', response.access)

          //this.user.access = response.access
          this.user = {refresh: refreshToken, access: response.access}

          console.log('this user access', this.user.access)
          const jsonData = {"access": response.access, "refresh": refreshToken }
          localStorage.setItem('user', JSON.stringify(jsonData))
        })
    },
}
...