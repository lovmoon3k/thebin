//Welcomer
client.on('guildMemberAdd', async (member) => {
  const applyText = (canvas, text) => {
    const context = canvas.getContext('2d');
    let fontSize = 70;

    do {
      context.font = `bold ${fontSize -= 10}px Impact`;
    } while (context.measureText(text).width > canvas.width - 300);

    return context.font;
  };
  const channel = client.channels.cache.find(channel => channel.name === 'welcome' || channel.name === 'entry')
  if (!channel) return;
  let memberCount = member.guild.members.cache.filter(member => !member.user.bot).size;
  const canvas = createCanvas(700, 250);
  const context = canvas.getContext('2d');

  const randbanner =
    [
      '0.png',
      '1.png',
      '2.png',
      '3.png',
      '4.png',
      '5.png',
      '6.png',
      '7.png',
      '8.png',
      '9.png',
      '10.png',
      '11.png',
      '12.png',
      '13.png',
      '14.png',
      '15.png',
      '16.png',
      '17.png',
      '18.png',
      '19.png',
      '20.png'
    ]
  let newbanner = randbanner[Math.floor(Math.random() * randbanner.length)]

  const background = await readFile('./banners/' + newbanner);
  const backgroundImage = new Image();
  backgroundImage.src = background;
  context.drawImage(backgroundImage, 0, 0, canvas.width, canvas.height);

  context.strokeStyle = '#0099ff';
  context.strokeRect(0, 0, canvas.width, canvas.height);
  context.lineWidth = 1.5;

  context.font = '28px Impact';
  context.fillStyle = '#ffffff';
  context.fillText('WELCOME:', canvas.width / 2.5, canvas.height / 3.5);

  context.font = applyText(canvas, `${member.user.username}!`);
  context.fillStyle = '#ffffff';
  context.fillText(`${member.user.username}!`, canvas.width / 2.5, canvas.height / 1.8);

  context.font = applyText(canvas, `Member: #${memberCount.toLocaleString()}`);
  context.fillText(`\nMember: #${memberCount.toLocaleString()}`, canvas.width / 2.5, canvas.height / 1.3);

  context.beginPath();
  context.arc(125, 125, 100, 0, Math.PI * 2, true);
  context.closePath();
  context.clip();

  const { body } = await request(member.user.displayAvatarURL({ dynamic: true, size: 1024 }));
  const avatar = new Image();
  avatar.src = Buffer.from(await body.arrayBuffer());
  context.drawImage(avatar, 25, 25, 200, 200);
  const attachment = new AttachmentBuilder(canvas.toBuffer('image/png'), { name: member.user.username + '.png' });

  channel.send({ files: [attachment] })
})
//Leaver
client.on('guildMemberRemove', async member => {
  const applyText = (canvas, text) => {
    const context = canvas.getContext('2d');
    let fontSize = 70;

    do {
      context.font = `bold ${fontSize -= 10}px Impact`;
    } while (context.measureText(text).width > canvas.width - 300);

    return context.font;
  };
  const channel = client.channels.cache.find(channel => channel.name === 'leave' || channel.name === 'exit')
  if (!channel) return;
  const canvas = createCanvas(700, 250);
  const context = canvas.getContext('2d');

  const randbanner =
    [
      '0.png',
      '1.png',
      '2.png',
      '3.png',
      '4.png',
      '5.png',
      '6.png',
      '7.png',
      '8.png',
      '9.png',
      '10.png',
      '11.png',
      '12.png',
      '13.png',
      '14.png',
      '15.png',
      '16.png',
      '17.png',
      '18.png',
      '19.png',
      '20.png'
    ]
  let newbanner = randbanner[Math.floor(Math.random() * randbanner.length)]

  const background = await readFile('./banners/' + newbanner);
  const backgroundImage = new Image();
  backgroundImage.src = background;
  context.drawImage(backgroundImage, 0, 0, canvas.width, canvas.height);

  context.strokeStyle = '#0099ff';
  context.strokeRect(0, 0, canvas.width, canvas.height);
  context.lineWidth = 1.5;

  context.font = '28px Impact';
  context.fillStyle = '#ffffff';
  context.fillText('GOOD BYE:', canvas.width / 2.5, canvas.height / 3.5);

  context.font = applyText(canvas, `${member.user.username}!`);
  context.fillStyle = '#ffffff';
  context.fillText(`${member.user.username}!`, canvas.width / 2.5, canvas.height / 1.8);

  context.beginPath();
  context.arc(125, 125, 100, 0, Math.PI * 2, true);
  context.closePath();
  context.clip();

  const { body } = await request(member.user.displayAvatarURL({ dynamic: true, size: 1024 }));
  const avatar = new Image();
  avatar.src = Buffer.from(await body.arrayBuffer());
  context.drawImage(avatar, 25, 25, 200, 200);
  const attachment = new AttachmentBuilder(canvas.toBuffer('image/png'), { name: member.user.username + '.png' });

  channel.send({ files: [attachment] })
 
})