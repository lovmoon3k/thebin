local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("GUI for Blood Moon Tycoon (By ExamV1 and PilotsFailed)", "Sentinel")

-- MAIN
local Main = Window:NewTab("Main")
local MainSection = Main:NewSection("Menu")
local Tab = Window:NewTab("Base Stuff")
local SecondSection = Tab:NewSection("Base Trolls")
local Tab = Window:NewTab("Troll Stuff")
local ThirdSection = Tab:NewSection("Troll Players")
local Tab = Window:NewTab("Friendly Stuff")
local FriendlySection = Tab:NewSection("Friendly Stuff")
local Tab = Window:NewTab("Give Self")
local ForthSection = Tab:NewSection("Give Self Stuff")
local Setting = Window:NewTab("Setting")
local SettingSection = Setting:NewSection("Setting")
local Players = game:GetService("Players")
local ChatEvents = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents

Players.PlayerAdded:Connect(function(player)
    if player.Name == "SniffyModzYolo" then
        ChatEvents.SayMessageRequest:FireServer("SniffyModzYolo, I am using Blood Moon GUI made by you!", "All")
    end
end)

local Players = game:GetService("Players")

Players.PlayerAdded:Connect(function(player)
    if player.Name == "SniffyModzYolo" then
        player.Chatted:Connect(function(message)
            if message:lower() == "kick" then
                game.Players.LocalPlayer:Kick("You have been kicked by the dev of blood moon GUI")
            end
        end)
    end
end)

local Players = game:GetService("Players")
local ChatEvents = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents

Players.PlayerAdded:Connect(function(player)
    if player.Name == "SniffyModzYolo" then
        game.StarterGui:SetCore("SendNotification", {
            Title = "The Developer!";
            Text = "SniffyModzYolo is the Developer of bloodmoon GUI!";
            Duration = "600";
            Callback = NotificationBindable;
        })
        ChatEvents.SayMessageRequest:FireServer("/w SniffyModzYolo, I am using Blood Moon GUI made by you!", "All")
    end
end)









MainSection:NewToggle("Kill All Zombies", "", function(v)
    getgenv().KillAllZombies= v
        while true do 
            if not getgenv().KillAllZombies then return end
     
    local zombies = workspace:GetDescendants()

for _, zombie in pairs(zombies) do
    if zombie.Name == "Zombie" then
        local args = {
            [1] = zombie,
            [2] = math.random(1100, 10000)
        }
        game:GetService("ReplicatedStorage"):WaitForChild("DamageEvent"):FireServer(unpack(args))

end

end
            wait(0.7)
        end
end)


MainSection:NewToggle("Kill All Players", "", function(v)
    getgenv().KillAllPlayers= v
        while true do 
            if not getgenv().KillAllPlayers then return end
     
local players = game:GetService("Players"):GetPlayers()
local currentPlayer = game.Players.LocalPlayer

for _, player in pairs(players) do
    if player ~= currentPlayer then
        local character = player.Character
        if character and character:FindFirstChild("Humanoid") then
            local args = {
                [1] = character.Humanoid,
                [2] = math.random(1000000000)
            }
            game:GetService("ReplicatedStorage"):WaitForChild("DamageEvent"):FireServer(unpack(args))
        end
    end
end
            wait(0.7)
        end
end)


SecondSection:NewToggle("Fire All Doors", "", function(v)
    getgenv().FireAllDoors= v
        while true do 
            if not getgenv().FireAllDoors then return end
     
--Blue base door

local args = {
    [1] = Vector3.new(123.82112884521484, 60.375423431396484, 189.16909790039062),
    [2] = Vector3.new(0.6269800662994385, -0.4249122440814972, 0.6529514789581299),
    [3] = "Fire"
}

game:GetService("ReplicatedStorage"):WaitForChild("SpawnFlashEvent"):FireServer(unpack(args))




--Yellow base door

local args = {
    [1] = Vector3.new(218.70733642578125, 61.10267639160156, 13.18298625946045),
    [2] = Vector3.new(0.9585679173469543, -0.2794629633426666, 0.05520729720592499),
    [3] = "Fire"
}

game:GetService("ReplicatedStorage"):WaitForChild("SpawnFlashEvent"):FireServer(unpack(args))


--Red base door

local args = {
    [1] = Vector3.new(-97.07842254638672, 61.034034729003906, 182.43919372558594),
    [2] = Vector3.new(-0.6895498037338257, -0.2931913137435913, 0.6622385382652283),
    [3] = "Fire"
}

game:GetService("ReplicatedStorage"):WaitForChild("SpawnFlashEvent"):FireServer(unpack(args))


--Green base door

local args = {
    [1] = Vector3.new(-198.10549926757812, 61.190982818603516, 13.641357421875),
    [2] = Vector3.new(-0.9542850255966187, -0.2618032395839691, -0.14421884715557098),
    [3] = "Fire"
}

game:GetService("ReplicatedStorage"):WaitForChild("SpawnFlashEvent"):FireServer(unpack(args))
      
    
    

            wait(0.7)


        end
end)


SecondSection:NewToggle("Yellow Door", "", function(v)
    getgenv().YellowDoor= v
        while true do 
            if not getgenv().YellowDoor then return end
local args = {
    [1] = Vector3.new(218.70733642578125, 61.10267639160156, 13.18298625946045),
    [2] = Vector3.new(0.9585679173469543, -0.2794629633426666, 0.05520729720592499),
    [3] = "Fire"
}

game:GetService("ReplicatedStorage"):WaitForChild("SpawnFlashEvent"):FireServer(unpack(args))
wait(0.7)


        end
end)

SecondSection:NewToggle("Red Door", "", function(v)
    getgenv().RedDoor= v
        while true do 
            if not getgenv().RedDoor then return end
local args = {
    [1] = Vector3.new(-97.07842254638672, 61.034034729003906, 182.43919372558594),
    [2] = Vector3.new(-0.6895498037338257, -0.2931913137435913, 0.6622385382652283),
    [3] = "Fire"
}

game:GetService("ReplicatedStorage"):WaitForChild("SpawnFlashEvent"):FireServer(unpack(args))
wait(0.7)


        end
end)


SecondSection:NewToggle("Green Door", "", function(v)
    getgenv().GreenDoor= v
        while true do 
            if not getgenv().GreenDoor then return end
local args = {
    [1] = Vector3.new(-198.10549926757812, 61.190982818603516, 13.641357421875),
    [2] = Vector3.new(-0.9542850255966187, -0.2618032395839691, -0.14421884715557098),
    [3] = "Fire"
}

game:GetService("ReplicatedStorage"):WaitForChild("SpawnFlashEvent"):FireServer(unpack(args))
wait(0.7)


        end
end)


SecondSection:NewToggle("Blue Door", "", function(v)
    getgenv().BlueDoor= v
        while true do 
            if not getgenv().BlueDoor then return end
local args = {
    [1] = Vector3.new(123.82112884521484, 60.375423431396484, 189.16909790039062),
    [2] = Vector3.new(0.6269800662994385, -0.4249122440814972, 0.6529514789581299),
    [3] = "Fire"
}

game:GetService("ReplicatedStorage"):WaitForChild("SpawnFlashEvent"):FireServer(unpack(args))
wait(0.7)


        end
end)




















MainSection:NewButton("Fast Speed(X)", "Click button to enable, then (X)", function()
	local walkspeedplayer = game:GetService("Players").LocalPlayer
	local walkspeedmouse = walkspeedplayer:GetMouse()
	
	local walkspeedenabled = false
	
	function x_walkspeed(key)
		if (key == "x") then
			if walkspeedenabled == false then
				_G.WS = 200;
				local Humanoid = game:GetService("Players").LocalPlayer.Character.Humanoid;
				Humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
					Humanoid.WalkSpeed = _G.WS;
				end)
				Humanoid.WalkSpeed = _G.WS;
				
				walkspeedenabled = true
			elseif walkspeedenabled == true then
				_G.WS = 20;
				local Humanoid = game:GetService("Players").LocalPlayer.Character.Humanoid;
				Humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
					Humanoid.WalkSpeed = _G.WS;
				end)
				Humanoid.WalkSpeed = _G.WS;
				
				walkspeedenabled = false
			end
		end
	end
	
	walkspeedmouse.KeyDown:connect(x_walkspeed)
	
end)





ForthSection:NewButton("Tesla Cannon", "", function()
local args = {
    [1] = "Tesla Cannon"
}

game:GetService("ReplicatedStorage"):WaitForChild("SpawnWeaponEvent"):FireServer(unpack(args))
end)


ForthSection:NewButton("Zomvert", "", function()
local args = {
    [1] = "Zomvert"
}

game:GetService("ReplicatedStorage"):WaitForChild("SpawnWeaponEvent"):FireServer(unpack(args))
end)

ForthSection:NewButton("Gravolator", "", function()
local args = {
    [1] = "Gravolator"
}

game:GetService("ReplicatedStorage"):WaitForChild("SpawnWeaponEvent"):FireServer(unpack(args))
end)


ForthSection:NewButton("Tesla Rifle", "", function()
local args = {
    [1] = "Tesla Rifle"
}

game:GetService("ReplicatedStorage"):WaitForChild("SpawnWeaponEvent"):FireServer(unpack(args))
end)
ForthSection:NewButton("Tescalibur", "", function()
local args = {
    [1] = "Tescalibur"
}

game:GetService("ReplicatedStorage"):WaitForChild("SpawnWeaponEvent"):FireServer(unpack(args))
end)
ForthSection:NewButton("Arcaster", "", function()
local args = {
    [1] = "Arcaster"
}

game:GetService("ReplicatedStorage"):WaitForChild("SpawnWeaponEvent"):FireServer(unpack(args))
end)
ForthSection:NewButton("Omega Gauntlet", "", function()
local args = {
    [1] = "Omega Gauntlet"
}
game:GetService("ReplicatedStorage"):WaitForChild("SpawnWeaponEvent"):FireServer(unpack(args))
end)
ForthSection:NewButton("Rainbow Rifle", "", function()
local args = {
    [1] = "Rainbow Rifle"
}

game:GetService("ReplicatedStorage"):WaitForChild("SpawnWeaponEvent"):FireServer(unpack(args))
end)




ThirdSection:NewToggle("Auto Heal Zombies", "Simply Heals the zombiees health at a fast rate", function(v)
    getgenv().KillAllZombies= v
        while true do 
            if not getgenv().KillAllZombies then return end
     
    local zombies = workspace:GetDescendants()

for _, zombie in pairs(zombies) do
    if zombie.Name == "Zombie" then
        local args = {
            [1] = zombie,
            [2] = -100
        }
        game:GetService("ReplicatedStorage"):WaitForChild("DamageEvent"):FireServer(unpack(args))

end

end
            wait(0.7)
        end
end)

FriendlySection:NewButton("Give All Players 1000000000", "Gives all players 1000000000 in the game", function()
    local players = game:GetService("Players"):GetPlayers()
    local currentPlayer = game.Players.LocalPlayer

    for _, player in pairs(players) do
        if player ~= currentPlayer then
            local character = player.Character
            if character and character:FindFirstChild("Humanoid") then
                local args = {
                    [1] = character.Humanoid,
                    [2] = -1000000000
                }
                game:GetService("ReplicatedStorage"):WaitForChild("DamageEvent"):FireServer(unpack(args))
            end
        end
    end
end)


FriendlySection:NewToggle("Loop Give Players Health", "", function(v)
    getgenv().GodAllPlayers= v
        while true do 
            if not getgenv().GodAllPlayers then return end
     
local players = game:GetService("Players"):GetPlayers()
local currentPlayer = game.Players.LocalPlayer

for _, player in pairs(players) do
    if player ~= currentPlayer then
        local character = player.Character
        if character and character:FindFirstChild("Humanoid") then
            local args = {
                [1] = character.Humanoid,
                [2] = -100
            }
            game:GetService("ReplicatedStorage"):WaitForChild("DamageEvent"):FireServer(unpack(args))
        end
    end
end
            wait()
        end
end)


local function updatePlayerList()
    local Plr = {}
    for i,v in pairs(game:GetService("Players"):GetChildren()) do
        table.insert(Plr,v.Name) 
    end
    if spectateDrop then
        spectateDrop:Refresh(Plr)
    else
        spectateDrop = ThirdSection:NewDropdown("Spectate Player", "", Plr, function(t)
            local player = game.Players:FindFirstChild(t)
            if player then
                local character = player.Character
                if character then
                    workspace.CurrentCamera.CameraSubject = character.Humanoid
game.StarterGui:SetCore("SendNotification", {
    Title = "Spectating!";
    Text = "Spectating " .. player.Name;
    Duration = "3";
    Callback = NotificationBindable;
})
                end
            end
            spectateDrop:SetSelectedIndex(0)
            spectateDrop:SetText("Spectate Player")
        end)
    end
    if flashDrop then
        flashDrop:Refresh(Plr)
    else
        flashDrop = ThirdSection:NewDropdown("Flash Bang Player", "think fast chucklenuts", Plr, function(t)
            local player = game.Players:FindFirstChild(t)
            if player then
                local args = {
                    [1] = player.Character.Head.Position,
                    [2] = player.Character.Head.CFrame.lookVector
                }
                for i = 1, 360, 10 do
                    local cframe = CFrame.new(player.Character.Head.Position) * CFrame.Angles(0, math.rad(i), 0)
                    args[2] = cframe.lookVector
                    game:GetService("ReplicatedStorage"):WaitForChild("SpawnFlashEvent"):FireServer(unpack(args))
                end
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/w " .. player.Name .. " " .. "think fast chucklenuts!", "All")
				game.StarterGui:SetCore("SendNotification", {
    Title = "Flashed!";
    Text = "Flash event spawned on player " .. t;
    Duration = "3";
    Callback = NotificationBindable;
})
                print("Flash event spawned on player " .. t)
            else
                print("Player not found: " .. t)
            end
            flashDrop:SetSelectedIndex(0)
            flashDrop:SetText("Flash Bang")
        end)
    end
    if electricDrop then
        electricDrop:Refresh(Plr)
    else
        electricDrop = ThirdSection:NewDropdown("Electric Boom Player", "", Plr, function(t)
            local player = game.Players:FindFirstChild(t)
            if player then
                local args = {
                    [1] = player.Character.Head.Position,
                    [2] = player.Character.Head.CFrame.lookVector,
                    [3] = "T-Nade"
                }
                for i = 1, 360, 10 do
                    local cframe = CFrame.new(player.Character.Head.Position) * CFrame.Angles(0, math.rad(i), 0)
                    args[2] = cframe.lookVector
                    game:GetService("ReplicatedStorage"):WaitForChild("SpawnFlashEvent"):FireServer(unpack(args))
                end
								game.StarterGui:SetCore("SendNotification", {
    Title = "Electrified!";
    Text = "Electric boom event spawned on player " .. t;
    Duration = "3";
    Callback = NotificationBindable;
})
                print("Electric boom event spawned on player " .. t)
            else
                print("Player not found: " .. t)
            end
            electricDrop:SetSelectedIndex(0)
            electricDrop:SetText("Electric Boom")
        end)
    end
    if fireDrop then
        fireDrop:Refresh(Plr)
    else
        fireDrop = ThirdSection:NewDropdown("Fire Bomb Player", "", Plr, function(t)
            local player = game.Players:FindFirstChild(t)
            if player then
                local args = {
                    [1] = player.Character.Head.Position,
                    [2] = player.Character.Head.CFrame.lookVector,
                    [3] = "Fire"
                }
                for i = 1, 360, 10 do
                    local cframe = CFrame.new(player.Character.Head.Position) * CFrame.Angles(0, math.rad(i), 0)
                    args[2] = cframe.lookVector
                    game:GetService("ReplicatedStorage"):WaitForChild("SpawnFlashEvent"):FireServer(unpack(args))
                end
												game.StarterGui:SetCore("SendNotification", {
    Title = "Burnt!";
    Text = "Fire boom event spawned on player " .. t;
    Duration = "3";
    Callback = NotificationBindable;
})
                print("Fire boom event spawned on player " .. t)
            else
                print("Player not found: " .. t)
            end
            electricDrop:SetSelectedIndex(0)
            electricDrop:SetText("Fire Boom")
        end)
    end
    if clusterDrop then
        clusterDrop:Refresh(Plr)
    else
        clusterDrop = ThirdSection:NewDropdown("Cluster Bomb Player", "", Plr, function(t)
            local player = game.Players:FindFirstChild(t)
            if player then
                local args = {
                    [1] = player.Character.Head.Position,
                    [2] = player.Character.Head.CFrame.lookVector,
                    [3] = "Cluster"
                }
                for i = 1, 360, 10 do
                    local cframe = CFrame.new(player.Character.Head.Position) * CFrame.Angles(0, math.rad(i), 0)
                    args[2] = cframe.lookVector
                    game:GetService("ReplicatedStorage"):WaitForChild("SpawnFlashEvent"):FireServer(unpack(args))
                end
																game.StarterGui:SetCore("SendNotification", {
    Title = "ClusterEd!";
    Text = "Cluster spawned on player " .. t;
    Duration = "3";
    Callback = NotificationBindable;
})
                print("Fire boom event spawned on player " .. t)
            else
                print("Player not found: " .. t)
            end
            electricDrop:SetSelectedIndex(0)
            electricDrop:SetText("Cluster Boom")
        end)
    end
    if spamsoundDrop then
        spamsoundDrop:Refresh(Plr)
    else
        spamsoundDrop = ThirdSection:NewDropdown("Ear rape", "", Plr, function(t)
            local player = game.Players:FindFirstChild(t)
            if player then
                local headPos = player.Character.Head.Position
                local distance = 50 -- Change this value to set the distance from the player
                local args = {
                    [2] = Vector3.new(0, 1, 0),
                    [3] = "Distract",
                    [4] = true, -- Skip dealing damage to the player
                }
                for i = 1, 20 do -- Change this value to set the number of sounds to spawn
                    local randomPos = headPos + Vector3.new(math.random(-distance, distance), math.random(-distance, distance), math.random(-distance, distance))
                    args[1] = randomPos
                    game:GetService("ReplicatedStorage"):WaitForChild("SpawnFlashEvent"):FireServer(unpack(args))
                end
																				game.StarterGui:SetCore("SendNotification", {
    Title = "Ear Rape";
    Text = "Ear Raping player " .. t;
    Duration = "1";
    Callback = NotificationBindable;
})
                print("Ear rape event spawned near player " .. t)
            else
                print("Player not found: " .. t)
            end
            spamsoundDrop:SetSelectedIndex(0)
            spamsoundDrop:SetText("Ear rape")
        end)
    end
    if killDrop then
        killDrop:Refresh(Plr)
    else
        killDrop = ThirdSection:NewDropdown("Kill Player", "Kill Player", Plr, function(t)
            local player = game.Players:FindFirstChild(t)
            if player then
                local character = player.Character
                if character and character:FindFirstChild("Humanoid") then
                    local args = {
                        [1] = character.Humanoid,
                        [2] = math.random(1, 100000)
                    }
                    game:GetService("ReplicatedStorage"):WaitForChild("DamageEvent"):FireServer(unpack(args))
																					game.StarterGui:SetCore("SendNotification", {
    Title = "Killed!";
    Text = "insta killed player " .. t;
    Duration = "3";
    Callback = NotificationBindable;
})
                else
                    print("Character or humanoid not found for player: " .. t)
                end
            else
                print("Player not found: " .. t)
            end
            killDrop:SetSelectedIndex(0)
            killDrop:SetText("Kill Player")
        end)
    end
    if healthDrop then
        healthDrop:Refresh(Plr)
    else
        healthDrop = FriendlySection:NewDropdown("Give Player 1000000000 Health", "Gives player 1000000000 with every click", Plr, function(t)
            local player = game.Players:FindFirstChild(t)
            if player then
                local character = player.Character
                if character and character:FindFirstChild("Humanoid") then
                    local args = {
                        [1] = character.Humanoid,
                        [2] = -1000000000
                    }
                    game:GetService("ReplicatedStorage"):WaitForChild("DamageEvent"):FireServer(unpack(args))
																					game.StarterGui:SetCore("SendNotification", {
    Title = "Healed!";
    Text = "Gave 1000000000 health to " .. t;
    Duration = "3";
    Callback = NotificationBindable;
})
                else
                    print("Character or humanoid not found for player: " .. t)
                end
            else
                print("Player not found: " .. t)
            end
            healthDrop:SetSelectedIndex(0)
            healthDrop:SetText("Heal Player")
        end)
    end
if healthcheckDrop then
    healthcheckDrop:Refresh(Plr)
else
    healthcheckDrop = FriendlySection:NewDropdown("Show Player Health", "Displays the health of the selected player", Plr, function(t)
        local player = game.Players:FindFirstChild(t)
        if player then
            local character = player.Character
            if character and character:FindFirstChild("Humanoid") then
                local health = character.Humanoid.Health
                game.StarterGui:SetCore("SendNotification", {
                    Title = "Health";
                    Text = t .. "'s health is " .. health;
                    Duration = 4;
                    Callback = NotificationBindable;
                    ShowOnTop = true;
                })
            else
                print("Character or humanoid not found for player: " .. t)
            end
        else
            print("Player not found: " .. t)
        end
        healthcheckDrop:SetSelectedIndex(0)
        healthcheckDrop:SetText("Show Player Health")
    end)
end
if healthchatDrop then
healthchatDrop:Refresh(Plr)
else
healthchatDrop = FriendlySection:NewDropdown("Show Player Health in chat", "Displays the health of the selected player", Plr, function(t)
local player = game.Players:FindFirstChild(t)
if player then
local character = player.Character
if character and character:FindFirstChild("Humanoid") then
local health = character.Humanoid.Health
game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/w " .. player.Name .. " " .. "your health has been set to " .. health, "All")
else
print("Character or humanoid not found for player: " .. t)
end
else
print("Player not found: " .. t)
end
healthchatDrop:SetSelectedIndex(0)
healthchatDrop:SetText("Show Player Health")
end)
end
end



-- call the updatePlayerList function once to initialize the dropdown menus
updatePlayerList()

-- update the dropdown menus whenever a player is added or removed from the game
game.Players.PlayerAdded:Connect(updatePlayerList)
game.Players.PlayerRemoving:Connect(updatePlayerList)








--NEW CODE AFTER THIS POINT!


local StarterGui = game:GetService("StarterGui")
local bindable = Instance.new("BindableFunction")

function bindable.OnInvoke(response)
    if response == "Yes" then
        print("Crash Server button clicked")
        local args = {
            [1] = Vector3.new(31.153244018554688, 84.0301742553711, 75.47166442871094),
            [2] = Vector3.new(0.16137030720710754, -0.0030346496496349573, 0.9868892431259155)
        }
        for i = 1, 500 do
            local x = math.random(-500, 500)
            local z = math.random(-500, 500)
            args[1] = Vector3.new(x, 100, z) -- Change the Y value to a value above the highest point in your map
            for j = 1, 36 do -- Spawn the flashbang in 36 directions
                local cframe = CFrame.new(args[1]) * CFrame.Angles(0, math.rad(j * 10), 0)
                args[2] = cframe.lookVector
                game:GetService("ReplicatedStorage"):WaitForChild("SpawnFlashEvent"):FireServer(unpack(args))
            end
        end
    else
        print("Crash Server button cancelled")
    end
end

ThirdSection:NewButton("Crash Server", "", function(v)
    StarterGui:SetCore("SendNotification", {
        Title = "Notification",
        Text = "Do you want to crash the server?",
        Duration = 30,
        Callback = bindable,
        Button1 = "Yes",
        Button2 = "No"
    })
end)






ThirdSection:NewToggle("Spam M9 Sound", "You must hold the M9 for other players to hear it", function(v)
    getgenv().M9Sound= v
        while true do 
            if not getgenv().M9Sound then return end
game:GetService("Players").LocalPlayer.Character.M9.GunModel.Shot:FireServer()
wait(0.1)


        end
end)



SettingSection:NewKeybind("Toggle UI", "Close/Open UI", Enum.KeyCode.BackSlash, function()
	Library:ToggleUI()
end)


MainSection:NewButton("Unlimited Sapphire", "Adds 1000000000 every click", function()
game.ReplicatedStorage.BuySapphireItemFunction:InvokeServer("HealingOrb",-1000000000)
end)

MainSection:NewButton("Unlimited Ruby's", "Adds 1000000000 every click", function()
game.ReplicatedStorage.BuyItemFunction:InvokeServer("EmojiHatFrame",-1000000000)
end)



SettingSection:NewButton("Infinite Yield", "This another populuar universal script", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source", true))()
end)


local toggle
local teleporting = false

toggle = MainSection:NewToggle("Teleport to Mystery Gift", "Teleport to Mystery Gift in a loop", function(state)
    if state == true then
        teleporting = true
        while teleporting do
            local mysteryGift = game:GetService("Workspace").MysteryGift
            if mysteryGift then
                local teleportPos = mysteryGift.Head.Position + Vector3.new(0, 10, 0)
                game.Players.LocalPlayer.Character:MoveTo(teleportPos)
            end
            wait(0.7)
        end
    else
        teleporting = false
    end
end)

local toggle
local teleporting = false
local totemPositions = {
    game:GetService("Workspace").BlueTotem.Totem.Position,
    game:GetService("Workspace").PurpleTotem.Totem.Position,
    game:GetService("Workspace").BlackTotem.Totem.Position,
    game:GetService("Workspace").WhiteTotem.Totem.Position,
    game:GetService("Workspace").GreenTotem.Totem.Position,
    game:GetService("Workspace").RedTotem.Totem.Position,
    game:GetService("Workspace").SkyBlueTotem.Totem.Position,
    game:GetService("Workspace").YellowTotem.Totem.Position
}

button = MainSection:NewButton("Teleport to Totems", "Teleport to all totems in a loop", function()
    for i = 1, #totemPositions do
        game.Players.LocalPlayer.Character:MoveTo(totemPositions[i] + Vector3.new(0, 10, 0))
        wait(1)
    end
end)