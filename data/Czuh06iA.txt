/*
2) Escribir un programa que permita ingresar el tamaño de un arreglo de números enteros y luego ingresar los
elementos del mismo, los cuales deben ser múltiplos de 7 que no sean a la vez múltiplos de 3; el programa
debe mostrar el arreglo original y revertir (dar vuelta) los valores del mismo para mostrarlo nuevamente.
Además, indicar la cantidad de pares y la cantidad de impares ingresados.
El ejercicio debe realizarse mediante la codificación de un método, función o subprograma que permita
mostrar cualquier tipo de arreglo; realice la especificación del método (precondiciones, postcondiciones y
firma).
Modifique el programa escrito de manera que permita optar entre el ingreso de valores por consola o por
un generador de valores aleatorios.
Indicaciones:
Este ejercicio necesita del objeto scanner para ingresar datos por la consola o teclado, se espera que el
código controle los problemas que normalmente ocurren al operar con la consola o teclado.
Se espera una correcta modularización entre el código que realiza el ingreso y validación de los datos
respecto del código que hace lo que se solicita en el ejercicio.
El ejercicio debe implementar un mecanismo para seleccionar el ingreso de valores por consola o
generados aleatoriamente.

 */

public class punto02 {

    static int vector[];
    static int pares = 0, impares = 0;

    public static void main(String[] args) {

        int tamanio, op;

        do {
            menu();
            op = helper.ValidarIntPositivo("Intente de nuevo...");
            switch (op) {
                case 1:
                    System.out.println("-->Ingrese tamanio arreglo..");
                    tamanio = helper.ValidarIntPositivo("ingrese de nuevo..");
                    vector = new int[tamanio];
                    cargaArreglo();
                    imprimirArreglo(vector);
                    imprimirInverso(vector);
                    System.out.println("Cantidad Nros pares: " + pares + "\nCantidad Nros Impares: " + impares);
                    break;
                case 2:
                    System.out.println("-->Ingrese tamanio arreglo..");
                    tamanio = helper.ValidarIntPositivo("ingrese de nuevo..");
                    vector = new int[tamanio];
                    cargaArregloAleatorio();
                    imprimirArreglo(vector);
                    imprimirInverso(vector);
                    System.out.println("Cantidad Nros pares: " + pares + "\nCantidad Nros Impares: " + impares);
                    break;
                case 3:
                    System.out.println("Adios...");
                    break;
                default:
                    System.out.println("Opcion incorrecta...");
            }
            System.out.println("");
        } while (op != 3);
    }

    public static void menu() {
        System.out.println("****Carga Arreglo****" + "\n1 - Ingresar por teclado" + "\n2 - Ingresar aleatoriamente" + "\n3 - Salir");
    }

    public static void cargaArregloAleatorio() {
        for (int i = 0; i < vector.length; i++) {
            vector[i] = esMultiploAleatorio();
            if (vector[i] % 2 == 0) {
                pares++;
            } else {
                impares++;
            }
        }
    }
       public static int esMultiploAleatorio() {
        int numero;
        boolean b=false;
        do {
             numero = helper.ramdomInt(1000);
            if (numero % 7 == 0) {
                b = true;
            }
            if (numero % 3 == 0) {
                b = false;
            }
         
        } while (b != true);
        return numero;
    }

    public static void cargaArreglo() {
      
        for (int i = 0; i < vector.length; i++) {
            System.out.println("Ingrese Nros..");
            vector[i] = esMultiplo();
            if (vector[i] % 2 == 0) {
                pares++;
            } else {
                impares++;
            }
        }
    }

    public static void imprimirArreglo(int vector[]) {
        System.out.print("Vector: ");
        for (int i = 0; i < vector.length; i++) {
            System.out.print(vector[i] + " ");
        }
        System.out.println("");
    }

    public static void imprimirInverso(int vector[]) {
        System.out.print("Vector al Inverso: ");
        for (int i = vector.length - 1; i >= 0; i--) {
            System.out.print(vector[i] + " ");
        }
        System.out.println("");
    }
    
    public static int esMultiplo() {
        int numero;
        boolean b=false;
        do {
             numero = helper.ValidarIntPositivo("Intente de nuevo...");
            if (numero % 7 == 0) {
                b = true;
            }
            if (numero % 3 == 0) {
                b = false;
            }
            if (b==false) {
                System.out.println("el valor debe ser multiplo de 7 que a la vez no sean multiplo de 3"+"\nIngrese de nuevo...");
            }
        } while (b != true);
        return numero;
    }
}
