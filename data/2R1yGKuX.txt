#include "fmbf.h"

static int KF_STUDENT_0(BTRVFILE *bf)
{
    STUDENT_KEYS *KB = (STUDENT_KEYS *)bf->KeyBuf;
    STUDENT_KEYS *TV = (STUDENT_KEYS *)bf->KeyTopVal;
    STUDENT_KEYS *BV = (STUDENT_KEYS *)bf->KeyBotVal;

    return !(
        TV->_studentid.StudentID <= KB->_studentid.StudentID && 
        KB->_studentid.StudentID <= BV->_studentid.StudentID);
}

static int KF_STUDENT_1(BTRVFILE *bf)
{
    STUDENT_KEYS *KB = (STUDENT_KEYS *)bf->KeyBuf;
    STUDENT_KEYS *TV = (STUDENT_KEYS *)bf->KeyTopVal;
    STUDENT_KEYS *BV = (STUDENT_KEYS *)bf->KeyBotVal;

    return !(
        strcmpR(TV->_lastname_firstname_secondname.LastName, KB->_lastname_firstname_secondname.LastName) <= 0 && 
        strcmpR(TV->_lastname_firstname_secondname.LastName, KB->_lastname_firstname_secondname.LastName) <= 0  && 
        strcmpR(TV->_lastname_firstname_secondname.FirstName, KB->_lastname_firstname_secondname.FirstName) <= 0 && 
        strcmpR(TV->_lastname_firstname_secondname.FirstName, KB->_lastname_firstname_secondname.FirstName) <= 0  && 
        strcmpR(TV->_lastname_firstname_secondname.SecondName, KB->_lastname_firstname_secondname.SecondName) <= 0 && 
        strcmpR(TV->_lastname_firstname_secondname.SecondName, KB->_lastname_firstname_secondname.SecondName) <= 0 );
}

void SKF_STUDENT(int32 StudentID)
{
    STUDENT_KEYS *TV = (STUDENT_KEYS *)FileSTUDENT->KeyTopVal;
    STUDENT_KEYS *BV = (STUDENT_KEYS *)FileSTUDENT->KeyBotVal;

    FileSTUDENT->KeyNum = STUDENT_STUDENTID;
	FileSTUDENT->KeyFltr = KF_STUDENT_0;

    if (StudentID != 0)
	{
        TV->_studentid.StudentID = StudentID;
        BV->_studentid.StudentID = StudentID;
    }
    else
    {
        TV->_studentid.StudentID = DB_INT32_MIN;
        BV->_studentid.StudentID = DB_INT32_MAX;
    }
}

void SKF_STUDENT_LASTNAMEFIRSTNAMESECONDNAME(char *LastName, char *FirstName, char *SecondName)
{
    STUDENT_KEYS *TV = (STUDENT_KEYS *)FileSTUDENT->KeyTopVal;
    STUDENT_KEYS *BV = (STUDENT_KEYS *)FileSTUDENT->KeyBotVal;

    FileSTUDENT->KeyNum = STUDENT_LASTNAME_FIRSTNAME_SECONDNAME;
	FileSTUDENT->KeyFltr = KF_STUDENT_1;

    if (LastName)
	{
        strcpy(TV->_lastname_firstname_secondname.LastName, LastName);
        strcpy(BV->_lastname_firstname_secondname.LastName, LastName);
    }
	else
	{
        memset(TV->_lastname_firstname_secondname.LastName, DB_UINT8_ZERO, sizeof(TV->_lastname_firstname_secondname.LastName));
        memset(BV->_lastname_firstname_secondname.LastName, DB_UINT8_MAX, sizeof(BV->_lastname_firstname_secondname.LastName));
        TV->_lastname_firstname_secondname.LastName[sizeof(TV->_lastname_firstname_secondname.LastName) - 1] = '\0';
        BV->_lastname_firstname_secondname.LastName[sizeof(BV->_lastname_firstname_secondname.LastName) - 1] = '\0';
    }

    if (FirstName)
	{
        strcpy(TV->_lastname_firstname_secondname.FirstName, FirstName);
        strcpy(BV->_lastname_firstname_secondname.FirstName, FirstName);
    }
	else
	{
        memset(TV->_lastname_firstname_secondname.FirstName, DB_UINT8_ZERO, sizeof(TV->_lastname_firstname_secondname.FirstName));
        memset(BV->_lastname_firstname_secondname.FirstName, DB_UINT8_MAX, sizeof(BV->_lastname_firstname_secondname.FirstName));
        TV->_lastname_firstname_secondname.FirstName[sizeof(TV->_lastname_firstname_secondname.FirstName) - 1] = '\0';
        BV->_lastname_firstname_secondname.FirstName[sizeof(BV->_lastname_firstname_secondname.FirstName) - 1] = '\0';
    }

    if (SecondName)
	{
        strcpy(TV->_lastname_firstname_secondname.SecondName, SecondName);
        strcpy(BV->_lastname_firstname_secondname.SecondName, SecondName);
    }
	else
	{
        memset(TV->_lastname_firstname_secondname.SecondName, DB_UINT8_ZERO, sizeof(TV->_lastname_firstname_secondname.SecondName));
        memset(BV->_lastname_firstname_secondname.SecondName, DB_UINT8_MAX, sizeof(BV->_lastname_firstname_secondname.SecondName));
        TV->_lastname_firstname_secondname.SecondName[sizeof(TV->_lastname_firstname_secondname.SecondName) - 1] = '\0';
        BV->_lastname_firstname_secondname.SecondName[sizeof(BV->_lastname_firstname_secondname.SecondName) - 1] = '\0';
    }
}