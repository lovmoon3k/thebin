import json
import time
from typing import Dict, Optional
from confluent_kafka import Consumer

class KafkaConsumer:
    def __init__(self,
                 host: str,
                 port: int,
                 user: str,
                 password: str,
                 topic: str,
                 group: str,
                 cert_path: str
                 ) -> None:
        params = {
        'bootstrap.servers': f'{host}:{port}',
        'security.protocol': 'SASL_SSL',
        'ssl.ca.location': cert_path,
        'sasl.mechanism': 'SCRAM-SHA-512',
        'sasl.username': user,
        'sasl.password': password,
        'group.id': group,
        'auto.offset.reset': 'earliest',
        'enable.auto.commit': False,
        #'error_cb': error_callback,
        'debug': 'all',
        'client.id': 'someclientkey'
    }# напишите код здесь

        self.consumer = Consumer(params)
        self.consumer.subscribe([topic])

    def consume(self, timeout: float = 3.0) -> Optional[Dict]:
        #while True:
        msg = self.consumer.poll(timeout=timeout)
# если в Kafka сообщений нет, скрипт засыпает на секунду,
# а затем продолжает выполнение в новую итерацию
            #time.sleep(1)
            #continue
# проверка, успешно ли вычитано сообщение
        #raise Exception(msg.error())
        # декодирование и печать сообщения
        val = msg.value().decode()
        return json.loads(val)