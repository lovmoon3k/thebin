#include<iostream>
#include<cmath>
using namespace std;

double t, r, z, D, v, f;

const double e = 0.0001;  //Δx
const double lambda = 1.2;
const double C_infinity = 1;
const double C_zero = 1;

//функции получения данных от пользователя
void getTime();
void getCoordinates();
void getD();
void getV();
void getF();

void getData() {
    getTime();
    getCoordinates();
    getD;
    getV();
    getF();
}

double F(double a, double b, double c) {
    return pow(a, 2) + pow(b, 2) + pow(c, 2);
}

double dFa(double a, double b, double c) { //частная производная по x
    return (F(a + e, b, c) - F(a, b, c)) / e;
}

double dFb(double a, double b, double c) { //частная производная по y
    return (F(a, b + e, c) - F(a, b, c)) / e;
}

double dFc(double a, double b, double c) { //частная производная по z
    return (F(a, b, c + e) - F(a, b, c)) / e;
}

double dFbb(double a, double b, double c) { //частная производная по y частной производной y
    return (dFb(a, b + e, c) - dFb(a, b, c)) / e;
}

double sourceFunction(double times) {
    return C_infinity * (1 - exp(-lambda * times)) + C_zero * exp(-lambda * times);
}

double getResult() {
    double one = dFa(t, z, r) + v * dFb(t, z, r);
    double two = D * (dFbb(t, z, r) + dFc(t, z, r) / 2)
            + sourceFunction(t);

    cout << one << endl;
    cout << two << endl;
}

int main() {
    getData();
    getResult();
}

void getTime() {
    cout << "Введите время: ";
    cin >> t; cout << endl;
}

void getCoordinates() {
    cout << "Введите координаты: "; cout << endl;
    cout << "r: "; cin >> r;
    cout << "z: "; cin >> z; cout << endl;
}

void getD() {
    cout << "Введите коэффициент диффузии данного элемента в почве: ";
    cin >> D; cout << endl;
}

void getV() {
    cout << "Введите скорость нисходящего вертикального движения воды за счет осадков: ";
    cin >> v; cout << endl;
}

void getF() {
    cout << "Введите функцию источника поступления радионуклидов в почву: ";
    cin >> f; cout << endl;
}