/***
 created: 2022-12-09-21.58.50
***/

#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
template<typename U> using ordered_set=tree<U, null_type,less<U>,rb_tree_tag,tree_order_statistics_node_update>;
#define ll long long
#define all(we) we.begin(),we.end()
#define test int tt; cin>>tt; for(int cs=1;cs<=tt;cs++)
#define nl '\n'
#define ull unsigned long long

struct custom_hash {
  static uint64_t splitmix64(uint64_t x) {
    x += 0x9e3779b97f4a7c15;
    x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;
    x = (x ^ (x >> 27)) * 0x94d049bb133111eb;
    return x ^ (x >> 31);
  }
  size_t operator()(uint64_t x) const {
    static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();
    return splitmix64(x + FIXED_RANDOM);
  }
};

gp_hash_table<ll, ll, custom_hash> x;

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);


    test
    {
        x.clear();

        ll n,m,i,j,k,l,ans=0;

        string a;

        cin>>n;

        for(i=0;i<n;i++)
        {
            cin>>a;
            ull h=0;
            for(j=0;j<a.size();j++)
            {
                h=h*149 + a[j];

                x[h]++;

                ans=max(ans,x[h]*(j+1));
            }
        }
        cout<<"Case "<<cs<<": "<<ans<<nl;
    }

    return 0;
}
