Syntax List For Tkinter

button.config(activebackground='color')
button.config(relief=SUNKEN)
button.config(state=DISABLED)
button.config(width=10, height=2)
button[n] = Button(root, text="OK", command=some_function)
canvas.bbox(item)
canvas.config(scrollregion=(x1, y1, x2, y2))
canvas.config(xscrollcommand=scrollbar.set)
canvas.config(yscrollcommand=scrollbar.set)
canvas.coords(item)
canvas.create_arc(x1, y1, x2, y2, start=0, extent=180)
canvas.create_image(x, y, image=image)
canvas.create_line(x1, y1, x2, y2)
canvas.create_oval(x1, y1, x2, y2)
canvas.create_polygon(x1, y1, x2, y2, x3, y3, ...)
canvas.create_rectangle(x1, y1, x2, y2)
canvas.create_text(x, y, text="text")
canvas.delete(item)
canvas.itemconfig(item, fill='color')
canvas.itemconfig(item, width=2)
canvas.move(item, x, y)
canvas.pack()
canvas.scale(item, x, y)
canvas.xview_moveto(fraction)
canvas.yview_moveto(fraction)
canvas[n] = Canvas(root, width=width, height=height)
checkbutton.config(offvalue=False)
checkbutton.config(variable=checkbutton.var)
checkbutton.pack()
checkbutton.var = BooleanVar()
checkbutton[n] = Checkbutton(root, text="Option")
combobox.config(state='readonly')
combobox.config(values=['option1', 'option2', 'option3'])
combobox.current(index)
combobox.pack()
combobox[n] = ttk.Combobox(root)
entry.config(show='*')
entry.config(validate='key', validatecommand=some_function)
entry.get()
entry.pack()
entry[n] = Entry(root)
frame.pack()
frame[n] = Frame(root)
from tkinter import *
image[n] = PhotoImage(file="image.png")
label.config(fg="color", font=("font", size))
label.config(justify=LEFT)
label.config(wraplength=200)
label.grid(row=0, column=0)
label.pack()
label[n] = Label(root, text="Test")
listbox.config(activestyle=DOTBOX)
listbox.config(selectmode=MULTIPLE)
listbox.config(yscrollcommand=scrollbar.set)
listbox.insert(END, "item")
listbox.pack()
listbox[n] = Listbox(root)
menubar.add_cascade(label="Menu", menu=submenu)
menubar.entryconfig(index, state=DISABLED)
menubar[n] = Menu(root)
radiobutton.config(indicatoron=False)
radiobutton.config(variable=radiobutton.var)
radiobutton.pack()
radiobutton.var = StringVar()
radiobutton[n] = Radiobutton(root, text="Option", value=value)
root = Tk()
root.after(time, some_function)
root.after_cancel(id)
root.after_idle(some_function)
root.attributes('-alpha', 0.5)
root.bell()
root.bind("<Button-1>", button_1)
root.clipboard_append("text")
root.clipboard_clear()
root.clipboard_get()
root.config(bg="color")
root.config(menu=menubar)
root.deiconify()
root.destroy()
root.destroyed()
root.event_generate(event, **kwargs)
root.event_info()
root.focus_force()
root.focus_set()
root.geometry("widthxheight+x+y")
root.grab_release()
root.grab_set()
root.grid_columnconfigure(index, weight=1)
root.grid_rowconfigure(index, weight=1)
root.iconbitmap("icon.ico")
root.iconbitmap('icon.ico')
root.iconify()
root.iconphoto(True, photo)
root.is_set()
root.mainloop()
root.maxsize(width, height)
root.minsize(width, height)
root.overrideredirect(True)
root.protocol("WM_DELETE_WINDOW", some_function)
root.quit()
root.resizable(True, True)
root.resizable(width=False, height=False)
root.resizable(width=True, height=True)
root.state()
root.state(newstate='normal')
root.title("Title")
root.transient(parent)
root.update()
root.update_idletasks()
root.wait_visibility()
root.wait_window()
root.winfo_children()
root.winfo_class()
root.winfo_containing()
root.winfo_depth()
root.winfo_exists()
root.winfo_fpixels()
root.winfo_fpixels(str)
root.winfo_geometry()
root.winfo_height()
root.winfo_id()
root.winfo_ismapped()
root.winfo_manager()
root.winfo_name()
root.winfo_parent()
root.winfo_pointerx()
root.winfo_pointerxy()
root.winfo_pointery()
root.winfo_reqheight()
root.winfo_reqwidth()
root.winfo_rgb()
root.winfo_rgb(color)
root.winfo_rootx()
root.winfo_rooty()
root.winfo_screen()
root.winfo_screencells()
root.winfo_screendepth()
root.winfo_screenheight()
root.winfo_screenmmheight()
root.winfo_screenmmwidth()
root.winfo_screenvisual()
root.winfo_screenwidth()
root.winfo_toplevel()
root.winfo_viewable()
root.winfo_visual()
root.winfo_visualid()
root.winfo_visualsavailable()
root.winfo_width()
root.winfo_x()
root.winfo_y()
root.withdraw()
scale.config(from_=0, to=100)
scale.config(orient=HORIZONTAL)
scale.config(resolution=1)
scale.config(tickinterval=10)
scale.config(variable=scale.var)
scale.pack()
scale.var = DoubleVar()
scale[n] = Scale(root)
scale[n] = Scale(root, orient=HORIZONTAL)
scrollbar.config(command=canvas.xview)
scrollbar.config(command=canvas.yview)
scrollbar.config(command=listbox.yview)
scrollbar.pack()
scrollbar.pack(side=RIGHT, fill=Y)
scrollbar[n] = Scrollbar(root)
spinbox.config(from_=0, to=100)
spinbox.config(increment=1)
spinbox.config(wrap=True)
spinbox.pack()
spinbox[n] = Spinbox(root)
spinbox[n] = Spinbox(root, values=[1, 2, 3, 4, 5])
submenu.add_command(label="Option", command=some_function)
submenu[n] = Menu(menubar)
text.config(height=10, width=50)
text.config(state=DISABLED)
text.config(wrap=WORD)
text.config(xscrollcommand=scrollbar.set)
text.config(yscrollcommand=scrollbar.set)
text.delete(1.0, END)
text.get(1.0, END)
text.insert(END, "text")
text.insert(INSERT, "text")
text.pack()
text[n] = Text(root)
toplevel[n] = Toplevel(root)
treeview.config(columns=('col1', 'col2'))
treeview.config(show='headings')
treeview.heading('#1', text='Column 1')
treeview.insert('', 'end', values=('item1', 'item2'))
treeview.pack()
treeview[n] = ttk.Treeview(root)
ttk.Button(root, text="Button")
ttk.Checkbutton(root, text="Checkbutton")
ttk.Combobox(root)
ttk.Entry(root)
ttk.Frame(root)
ttk.Label(root, text="Label")
ttk.Notebook(root)
ttk.Progressbar(root, orient=HORIZONTAL)
ttk.Progressbar(root, orient=HORIZONTAL, length=200, mode='determinate', maximum=100, value=50)
ttk.Radiobutton(root, text="Radiobutton")
ttk.Scale(root, orient=HORIZONTAL)
ttk.Scrollbar(root)
ttk.Separator(root, orient=HORIZONTAL)
ttk.Spinbox(root)
ttk.Style().configure("style.TButton", background="color")
ttk.Style().configure("style.TButton", font=("font", size))
ttk.Style().configure("style.TLabel", font=("font", size))
ttk.Style().theme_use("clam")
ttk.Treeview(root)
ttk.Treeview(root, columns=("column1", "column2"), show='headings')
ttk.notebook(root)
ttk.panedwindow(root)
ttk.separator(root)
ttk.sizegrip(root)
widget.bind("<Button-1>", function)
widget.bind("<Key>", function)
widget.bind("<Double-Button-1>", function)
entry_widget.bind("<Return>", function)
listbox.bind("<<ListboxSelect>>", function)
checkbox.bind("<Button-1>", function)
radiobutton.bind("<Button-1>", function)
scale.bind("<ButtonRelease-1>", function)
scrollbar.bind("<Button-1>", function)
text_widget.bind("<Button-1>", function)
window.protocol("WM_DELETE_WINDOW", function)
canvas.bind("<Button-1>", function)
menu.bind_all("<MenuSelect>", function)
spinbox.bind("<Button-1>", function)
optionmenu.bind("<Button-1>", function)
treeview.bind("<Button-1>", function)
notebook.bind("<Button-1>", function)
label.bind("<Button-1>", function)
combobox.bind("<Button-1>", function)
frame.bind("<Button-1>", function)
message.bind("<Button-1>", function)
toplevel.bind("<Button-1>", function)
panedwindow.bind("<Button-1>", function)
progressbar.bind("<Button-1>", function)
sizegrip.bind("<Button-1>", function)
separator.bind("<Button-1>", function)
notebook_tab.bind("<Button-1>", function)
toolbutton.bind("<Button-1>", function)
menubutton.bind("<Button-1>", function)
ttk_widget.bind("<Button-1>", function)
frame.bind("<Configure>", function)
widget.bind("<Motion>", function)
widget.bind("<Enter>", function)
widget.bind("<Leave>", function)
widget.bind("<FocusIn>", function)
widget.bind("<FocusOut>", function)
widget.after(interval, function)
widget.bind("<<VirtualEvent>>", function)
widget.bind("<<CustomEvent>>", function)
widget.event_generate("<<EventName>>", when="tail")