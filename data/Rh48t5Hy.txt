/*
вЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈї
вЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈї
вЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈї
вЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЎїв їв ївўївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈї
вЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈїв ївў›вЈ‰вЈҐвЈ¤вЈ¶вЈ¶вЈ¶вЈ¶вЈ¶вЈ¶вЈ¤вЈ¬вЈ‰вЎ›в ївўївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈї
вЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈїв џвЈ©вЈґвЈѕвЈївЈївЈївЈївЈївЈївЎїв џв ›в ›в »вўївЈївЈївЈ·вЈ¦вЈЌв »вЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈї
вЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈїв џвЈЎвЈѕвЈївЈївЈївЈївЈївЈївЈївЎївўѓвЈґвЈѕвЈїв ‹вЈЃвЈЂв ™вЈївЈївЈївЈївЈ·вЈЊв №вўївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈї
вЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЎџвўЎвЈѕвЈївЈївЈївЈївЈївЈївЈївЈївЎїв ‡вЈјвЈївЈївЈївЈ·в ёвЈївЈївЈївЈївЈївЈївЈївЈївЈ·вЈЊвў»вЈївЈївЈївЈївЈївЈївЈївЈївЈївЈї
вЈївЈївЈївЈївЈївЈївЈївЈївЈївЎџвЈ°вЈївЈївЈївЈївЈївЈївЈївЎївЎ‹вў‘вЈ¤вЈ¤вЎ™вўївЈївЎїв џвЈ вЈ€в ќв »вЈївЈївЈївЈївЈївЈївЈївЈ†в №вЈївЈївЈївЈївЈївЈївЈївЈївЈї
вЈївЈївЈївЈївЈївЈївЈївЈївЎџвў°вЈївЈївЈївЈївЈївЈївЎївЎѓвЈ вЈѕвЈївЈївЈївЈ·вЈ¶вЈ¶вЈ¶вЈѕвЈївЈївЈ·вЈ„вў€вўївЈївЈївЈївЈївЈївЈївЈ†вў»вЈївЈївЈївЈївЈївЈївЈївЈї
вЈївЈївЈївЈївЈївЈївЈївЈїв ѓвЈївЈївЈївЈївЈївЈївЎџв ЂвЈґвЈївЈївЈївЈївЎїв џв ›в ›в »вўївЈївЈївЈївЈївЈ§в ‰вў»вЈївЈївЈївЈївЈївЈївЎ€вЈївЈївЈївЈївЈївЈївЈївЈї
вЈївЈївЈївЈївЈївЈївЈївЎївўёвЈївЈївЈївЈївЈївЈївўЈвў°вЈївЈївЈївЈїв ЏвЈ вЈѕвЈївЈївЈ·вЈ¦в №вЈївЈївЈївЈївЎ‡вЎЊвЈївЈївЈївЈївЈївЈївЎ‡вў»вЈївЈївЈївЈївЈївЈївЈї
вЈївЈївЈївЈївЈївЈївЈївЎ‡вўёвЈївЈївЈївўївЈївЈїв ёвўёвЈївЈївЈївЈїв ЂвЈївЈївЈївЈївЈївЈїв „вЈївЈївЈївЈївЎ‡в ЂвЈївЈївЈївЈївЈївЈївЎ‡вўёвЈївЈївЈївЈївЈївЈївЈї
вЈївЈївЈївЈївЈївЈївЈївЈївўёвЈївЈївЎ‡вЎЂвЈїв ‹вЈ¤вЈ¤вЈ¤вЎ™вўївЈївЈ†в №вЈївЈївЈївЈїв џвЈ°вЈївЈїв џв ›в ѓв ўвЈївЈївЈївЈївЈївЈївЎ‡вЈѕвЈївЈївЈївЈївЈївЈївЈї
вЈївЈївЈївЈївЈївЈївЈївЈївЎ€вЈївЈївЎ‡вўівЈ¤вЈјвЈївЈївЈївЈївўвЈївЈївЈ·вЈ¦вЈ¬вЈ¤вЈґвЈѕвЈївЎївўЎвЈѕвЈївЈївЈ·вЎЊвў»вЈївЈївЈївЈївўЃвЈївЈївЈївЈївЈївЈївЈївЈї
вЈївЈївЈївЈївЈївЈївЈївЈївў§в ёвЈївЈївЈ„в »в ївЈївЈїв їв ‹вўјвЈївЈївЈївЈївЈївЈївЈївЈївЈївЈ§в ёвЈївЈївЈївЈївЈїв вЈївЈївЈїв ЏвЈјвЈївЈївЈївЈївЈївЈївЈївЈї
вЈївЈївЈївЈївЈївЈївЈївЈївЈївЈ§в №вЈївЈївЈївЈ¶вЈ¶вЈ¶вЈ¶вЈ¦вЈ„вЎ‰вЈ›в їв їв їв їв їв їв ›в ‰вЈ‚вЈ¤вЈ‰вЎ‰вў№в џвЈ°вЈївЈїв ЏвЈ°вЈївЈївЈївЈївЈївЈївЈївЈївЈї
вЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈ§вЎвўївЈївЈївЈївЈївЈївЈївЈївЈївЈ·вЈ¦вЈ­вЈҐвЈ¤вЈ¤вЈґвЈ¶вЈївЈївЎїв ‹вўЂвЈЎвЈґвЈївЎївў‹вЈјвЈївЈївЈївЈївЈївЈївЈївЈївЈївЈї
вЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈ·вЈ†вЎ™вўївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЎїв ‹вЈ вЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈї
вЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈ¦вЈ‰в »вўївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЎїв џвЈ‹вЈґвЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈї
вЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈ¦вЈ¬вЈ‰вЎ›в »в їв їв їв їв їв їв џвў›вЈ‹вЈҐвЈґвЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈї
вЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈ¶вЈ¶вЈ¶вЈ¶вЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈї
вЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈї
вЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈї
вЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈївЈї
*/

#pragma GCC optimize("Ofast")
#pragma GCC target("avx2")

#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <cmath>
#include <stack>
#include <iomanip>
#include <fstream>
#include <string>
#include <set>
#include <deque>
#include <queue>
#include <map>
#include <bitset>
#include <random>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef string str;
//typedef __int128 ultraint;
#define endl "\n"
#define sqrt sqrtl

const ll inf = (ll)1e18 + 7;

ld eps = 1e-12;

struct dsu {
    vector <ll> par;
    vector <ll> size;
    dsu(ll n) {
        par.resize(n);
        size.resize(n, 1);
        for (ll i = 0; i < n; i++) {
            par[i] = i;
        }
    }
    ll get(ll v) {
        if (par[v] == v) {
            return v;
        }
        par[v] = get(par[v]);
        return par[v];
    }
    bool check(ll v, ll u) {
        return get(v) == get(u);
    }
    void unionn(ll v, ll u) {
        v = get(v);
        u = get(u);
        if (size[v] > size[u]) {
            swap(u, v);
        }
        par[v] = u;
        size[u] += size[v];
    }
};

struct edge {
    ll u, v, w;
    edge(ll _u = 0, ll _v = 0, ll _w = 0) {
        u = _u;
        v = _v;
        w = _w;
    }
    bool operator < (edge e) const {
        return w < e.w;
    }
};

istream& operator >> (istream& in, edge& e) {
    in >> e.v >> e.u >> e.w;
    e.v--;
    e.u--;
    return in;
}

signed main() {
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios_base::sync_with_stdio(0);
	cin.tie(NULL);
	cout.tie(NULL);
    ll n, i, j, ans = 0, m, v, mn = inf;
	cin >> n >> m;
	vector <ll> a(n);
    dsu d(n);
    for (i = 0; i < n; i++) {
        cin >> a[i];
        if (a[i] < mn) {
            mn = a[i];
            v = i;
        }
    }
    vector <edge> e(m);
    // РЎСЃР°РЅС‹Рµ СЃРїРµС†РїСЂРµРґР»РѕР¶РµРЅРёСЏ
    for (i = 0; i < m; i++) {
        cin >> e[i];
    }
    for (i = 0; i < n; i++) {
        if (i != v) {
            e.push_back({ v,i,a[i] + a[v] });
        }
    }
    sort(e.begin(), e.end());
    for (i = 0; i < e.size(); i++) {
        if (!d.check(e[i].v, e[i].u)) {
            ans += e[i].w;
            d.unionn(e[i].v, e[i].u);
        }
    }
    cout << ans << endl;
}
//з—›гЃїг‚’еЏ—гЃ‘е…Ґг‚Њг‚‹гЂ‚ з—›гЃїг‚’зџҐгЃЈгЃ¦гЃ„гЃѕгЃ™гЂ‚ з—›гЃїг‚’ж„џгЃг‚‹гЂ‚ з—›гЃїг‚’еЏ‚з…§гЃ—гЃ¦гЃЏгЃ гЃ•гЃ„гЂ‚ зњџгЃ®з—›гЃїг‚’зџҐг‚‰гЃЄгЃ‘г‚ЊгЃ°гЂЃзњџгЃ®дё–з•Њг‚’зђ†и§ЈгЃ™г‚‹гЃ“гЃЁгЃЇдёЌеЏЇиѓЅгЃ§гЃ™гЂ‚ д»ЉгЂЃгЃ‚гЃЄгЃџгЃЇз—›гЃїг‚’зџҐг‚‹гЃ§гЃ—г‚‡гЃ†гЂ‚ зҐћгЃ®зЅ°!