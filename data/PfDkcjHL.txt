#include <ctype.h>
#include <errno.h>
#include <math.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>

enum { BUF_SIZE = 63 };

int getstring(FILE *file, char *buf) {
    int len = 0;
    for (; len <= BUF_SIZE + 1; ++len) {
        char c = getc_unlocked(file);
        if (isspace(c) || c == 0 || c == EOF) {
            buf[len] = 0;
            break;
        } else {
            buf[len] = c;
        }
    }
    if (len > BUF_SIZE) {
        fprintf(stderr, "%s\n", "buffer size error");
        exit(1);
    }
    return len;
}

int main(int argc, char *argv[]) {
    double dans = NAN;
    int has_int = 0;
    int has_double = 0;
    int ians = 0;

    FILE *file = stdin;
    if (argc > 2) {
        fprintf(stderr, "%s\n", "Number args error");
        exit(1);
    }
    if (argc == 2) {
        if ((file = fopen(argv[1], "r")) == NULL) {
            fprintf(stderr, "%s\n", "Filename error");
            exit(1);
        }
    }

    clearerr(file);
    char buf[BUF_SIZE + 2] = {0};
    while (getstring(file, &buf[0])) {
        if (buf[BUF_SIZE] != 0) {
            fprintf(stderr, "%s\n", "buffer size error");
            exit(1);
        }
        errno = 0;
        char *end = NULL;
        int inum = (int)strtol(buf, &end, 10);
        if (errno || *end != 0) {
            errno = 0;
            end = NULL;
            double dnum = (double)strtod(buf, &end);
            if (errno || *end != 0) {
                // nothing
            } else {
                if (!has_double || dnum < dans) {
                    dans = dnum;
                    has_double = 1;
                }
            }
        } else {
            if (!has_int || inum > ians) {
                ians = inum;
                has_int = 1;
            }
        }
    }

    if (ferror(file)) {
        fprintf(stderr, "%s\n", "Reading file error");
        exit(1);
    }

    fclose(file);

    if (!has_int) {
        printf("nan ");
    } else {
        printf("%d ", ians);
    }

    if (!has_double) {
        printf("nan\n");
    } else {
        printf("%.10g\n", dans);
    }
    return 0;
}