import java.io.FileNotFoundException;
import java.util.*;

public class Roy {

    public static void main(String[] args) throws FileNotFoundException {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int [][] matrix = new int [n][n];
        List<List<Integer>> graph = new ArrayList<>();
        Set<Integer> used = new HashSet<>();

        for (int i = 0; i < n; i++) {
            graph.add(new ArrayList<>());
        }

        for (int i = 0; i < n; i++){
            for (int j = 0; j < n; j++){
                matrix[i][j] = in.nextInt();
                if (matrix[i][j] == 1){
                    graph.get(i).add(j);
                }
            }
        }

        List<List<Integer>> allComponents = new ArrayList<>();
        for (int v = 0; v < n; ++v) {
            if (!used.contains(v)) {
                allComponents.add(new ArrayList<>());
                dfs(graph, v, used, allComponents.get(allComponents.size() - 1));

            }
        }

        System.out.println(allComponents.size());

        for (List<Integer> verticesInComponent: allComponents) {
            System.out.println(verticesInComponent.size());
            for (int x: verticesInComponent) {
                System.out.print(x+1 + " ");
            }
            System.out.println();
        }
    }

    private static void dfs(List<List<Integer>> graph, int x, Set<Integer> used, List<Integer> verticesInComponent) {
        used.add(x);
        verticesInComponent.add(x);
        for (int d : graph.get(x)){
            if (!used.contains(d)){
                dfs(graph, d, used, verticesInComponent);
            }
        }
    }
}