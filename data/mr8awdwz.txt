import Foundation

struct SongData {
    let name: String
}

enum SongQueueContainer {
    case manuallyAdded
    case currentTrackList
    case similarTracks
    case unfamiliarTracks
    case familiarTracks
}

class SongQueue {
    static let shared = SongQueue()
    
    // Containers of the song queue.
    var manuallyAddedContainer: [SongData] = []
    var currentTrackListContainer: [SongData] = []
    var similarTracksContainer: [SongData] = []
    var unfamiliarTracksContainer: [SongData] = []
    var familiarTracksContainer: [SongData] = []
    
    func addSongs(newSongs: [SongData], queueContainer: SongQueueContainer) {
        var temp = newSongs
        
        // mach mit temp was du willst
        temp.remove(at: 1)

        switch queueContainer {
            case .manuallyAdded: manuallyAddedContainer = temp
            case .currentTrackList: currentTrackListContainer = temp
            case .similarTracks: similarTracksContainer = temp
            case .unfamiliarTracks: unfamiliarTracksContainer = temp
            case .familiarTracks: familiarTracksContainer = temp
        }
    }
}

print(SongQueue.shared.manuallyAddedContainer)
SongQueue.shared.addSongs(newSongs: [.init(name: "Enter the Sandman"), .init(name: "Guten Abend, gute Nacht")], queueContainer: .manuallyAdded)
print(SongQueue.shared.manuallyAddedContainer)