#ifndef CGIFLoader_h_included
#define CGIFLoader_h_included
#include "textures/CBaseTexture.h"
#include "textures/CTexture.h"
#include "textures/CIndexedTexture.h"
#include "palettes/CPalette.h"
#include "FileLoaders/IImageLoader.h"
#include "IDeviceDependent.h"


namespace mg
{
	class CGraphics;
	struct ITexture;
	class CPalette;
	class CIndexedTexture;
	class CTexture;
	
	class CIMXLoader:public IImageLoader,public IDeviceDependent
	{
	public:
		CIMXLoader(const char *url);
		CIMXLoader(CGraphics *dev,const char *url);
		CIMXLoader(const CIMXLoader &other);
		CIMXLoader();
		~CIMXLoader();
		virtual void   set_dc(CGraphics *dev);
		virtual bool   assign(CGraphics *dev,const char *URL);
		virtual void   push_update();
		virtual void   restore_device_objects(CGraphics *gc);
		virtual void   delete_device_objects();
		virtual void   invalidate_device_objects();

		virtual void   add_listner(ITextureListener *listener);
		virtual ITexture *get_output_image();	

	private:
		void		   load_image_data(); 
		const char*	   m_url;
		CPalette		 *	   m_palette;
		CTexture		 *	   m_index_image;
		CIndexedTexture  *	   m_image;
		CGraphics *	   m_dev;
	};
	COffScreenTexture *read_imx(FILE *f);
}


#endif
