#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Las funciones sirven principalmente para
# a) evitar la redundancia del código
# b) poder dividir el programa en partes más pequeñas y sencillas
# c) permitir el trabajo de varios programadores en forma simultánea
# d) permite reusar el código
"""
# definicion de la funcion
def imprimir(lista):
    '''Funcion que sirve para imprimir listas
    en forma vertical'''
    for item in lista:
        print(item)
        
numeros = [1,2,3,4]
nombres = ["Juan","Ana"]
lista = [True, "sada", 23]
        
        
# uso o llamada a la función
imprimir(numeros)
print(nombres)
imprimir(lista)

# funcion que no hace nada
def f():
    pass

# 2 tipos de funciones: las que devuelevn datos y las que imprimen
# Script que convierte kms a metros mediante una función (SIN GUARDAR DATOS)
def convertir(kms):
    print(kms*1000)
    
convertir(1.5)

# la funcion de arriba tiene el problema de no guardar los datos, por eso
# el emfoque adecuado es DEVOLVER EL DATO CALCULADO, no imprimirlo
def convertir(kms):
    return kms*1000

# si quiero guardar el dato:    
kms = convertir(1.5)
print(kms)
# si no quiero guardar el valor:
print(convertir(20.253))

#¿Cuando no usar return? Cuando haga una funcion que quiera imprimir
# otro ejemplo con funciones integradas
import math
raiz_2 = math.sqrt(2)
print(f"La raiz cuadrada 2 es {raiz_2}")

"""
import aritmetica
print(f"Suma de 2 y 4: {aritmetica.sumar(2,4)}")
print(f"Cociente entre 3 y 0: {aritmetica.dividir(3,0)}")