$ rspec
WARN: Unresolved or ambiguous specs during Gem::Specification.reset:
      simplecov_json_formatter (~> 0.1)
      Available/installed versions of this gem:
      - 0.1.4
      - 0.1.3
WARN: Clearing out unresolved specs. Try 'gem cleanup <gem>'
Please report a bug if this causes problems.
WARNING:
Stimulus Reflex requires caching to be enabled. Caching allows the session to be modified during ActionCable requests.
To enable caching in development, run:
    rails dev:cache
WARNING:
Stimulus Reflex requires caching to be enabled. Caching allows the session to be modified during ActionCable requests.
But your config.cache_store is set to :null_store, so it won't work.

Randomized with seed 53091
............................................................................................F..F.F..F.FFF..............................................................FFF............................F.F.F........................................................................................F...FFF............................

Failures:

  1) Api::ApiController#token_authenticate_user bearer token is valid
     Failure/Error: expect(controller.current_user).to eq(user)
     
       expected: #<User id: 106, email: "edison@rodriguez.info", first_name: "Allyn", last_name: "Trantow", created_at...+0000", username: "@betsey_quigley", online: false, locale: "en", delete_at: nil, role: "moderator">
            got: nil
     
       (compared using ==)
     # ./spec/controllers/api/api_controller_spec.rb:25:in `block (3 levels) in <top (required)>'

  2) Api::ApiController#token_authenticate_user user not found
     Failure/Error: expect(json_response["error"]).to eq I18n.t("api.errors.not_found")
     
       expected: "Record is not found"
            got: "Unexpected error"
     
       (compared using ==)
     # ./spec/controllers/api/api_controller_spec.rb:60:in `block (3 levels) in <top (required)>'

  3) Api::ApiController#token_authenticate_user token is expired
     Failure/Error: expect(json_response["error"]).to eq I18n.t("api.errors.expired_token")
     
       expected: "Token is expired"
            got: "Unexpected error"
     
       (compared using ==)
     # ./spec/controllers/api/api_controller_spec.rb:67:in `block (3 levels) in <top (required)>'

  4) Api::V1::ProjectsController GET /api/v1/projects/:id error if task is not found
     Failure/Error: expect(json_response["error"]).to eq I18n.t("api.errors.not_found")
     
       expected: "Record is not found"
            got: "Unexpected error"
     
       (compared using ==)
     # ./spec/controllers/api/v1/projects_controller_spec.rb:47:in `block (3 levels) in <top (required)>'

  5) Api::V1::ProjectsController GET /api/v1/projects/:id when user is not member for project unauthorized error
     Failure/Error: expect(json_response["error"]).to eq I18n.t("api.errors.unauthorized")
     
       expected: "You don't have access to that."
            got: "Unexpected error"
     
       (compared using ==)
     # ./spec/controllers/api/v1/projects_controller_spec.rb:35:in `block (4 levels) in <top (required)>'

  6) Api::V1::ProjectsController GET /api/v1/projects/:id when user is member for project serialized project object
     Failure/Error: expect(json_response["project"]).to eq serialized.to_json
     
       expected: "{\"data\":{\"id\":\"67\",\"type\":\"project\",\"attributes\":{\"title\":\"Mann, Roberts and Rohan\",\"status\":null,\"tasks\":{\"data\":[]}}}}"
            got: nil
     
       (compared using ==)
     # ./spec/controllers/api/v1/projects_controller_spec.rb:27:in `block (4 levels) in <top (required)>'

  7) Api::V1::ProjectsController GET /api/v1/projects serialized projects object
     Failure/Error: expect(response).to have_http_status(:ok)
       expected the response to have status code :ok (200) but it was :unauthorized (401)
     # ./spec/controllers/api/v1/projects_controller_spec.rb:14:in `block (3 levels) in <top (required)>'

  8) Api::V1::TasksController GET /api/v1/tasks/:id error if task is not found
     Failure/Error: expect(json_response["error"]).to eq I18n.t("api.errors.not_found")
     
       expected: "Record is not found"
            got: "Unexpected error"
     
       (compared using ==)
     # ./spec/controllers/api/v1/tasks_controller_spec.rb:39:in `block (3 levels) in <top (required)>'

  9) Api::V1::TasksController GET /api/v1/tasks/:id when user is not member for project unauthorized error
     Failure/Error: expect(json_response["error"]).to eq I18n.t("api.errors.unauthorized")
     
       expected: "You don't have access to that."
            got: "Unexpected error"
     
       (compared using ==)
     # ./spec/controllers/api/v1/tasks_controller_spec.rb:27:in `block (4 levels) in <top (required)>'

  10) Api::V1::TasksController GET /api/v1/tasks/:id when user is member for project serialized task object
      Failure/Error: expect(json_response["task"]).to eq serialized.to_json
      
        expected: "{\"data\":{\"id\":\"52\",\"type\":\"task\",\"attributes\":{\"title\":\"Kanlam\",\"status\":\"selected\"}}}"
             got: nil
      
        (compared using ==)
      # ./spec/controllers/api/v1/tasks_controller_spec.rb:19:in `block (4 levels) in <top (required)>'

  11) JwtService.decode raises verification error if token is invalid
      Failure/Error: expect { JwtService.decode(invalid_token) }.to raise_error(JWT::VerificationError)
      
        expected JWT::VerificationError, got #<JWT::DecodeError: No verification key available> with backtrace:
          # ./app/services/jwt_service.rb:8:in `decode'
          # ./spec/services/jwt_service_spec.rb:37:in `block (4 levels) in <top (required)>'
          # ./spec/services/jwt_service_spec.rb:37:in `block (3 levels) in <top (required)>'
      # ./spec/services/jwt_service_spec.rb:37:in `block (3 levels) in <top (required)>'

  12) JwtService.decode decodes correctly
      Failure/Error:
        decoded_token = JWT.decode(token, Rails.application.credentials.jwt_secret_key,
                                   true, { algorithm: "HS256" })[0]
      
      JWT::DecodeError:
        No verification key available
      # ./app/services/jwt_service.rb:8:in `decode'
      # ./spec/services/jwt_service_spec.rb:19:in `block (3 levels) in <top (required)>'

  13) JwtService.encode encodes correctly
      Failure/Error:
        decoded_token = JWT.decode(token, Rails.application.credentials.jwt_secret_key,
                                   true, { algorithm: "HS256" })[0]
      
      JWT::DecodeError:
        No verification key available
      # ./app/services/jwt_service.rb:8:in `decode'
      # ./spec/services/jwt_service_spec.rb:12:in `block (3 levels) in <top (required)>'

  14) Admin::AdminBaseController.authenticate_admin! when user is not a admin not access
      Failure/Error: expect(response).to have_http_status(:redirect)
        expected the response to have a redirect status code (3xx) but it was 200
      # ./spec/requests/admin/admin_base_spec.rb:32:in `block (4 levels) in <top (required)>'

  15) ApiAuthenticate#token_authenticate_user user not found
      Failure/Error: expect(json_response["error"]).to eq I18n.t("api.errors.not_found")
      
        expected: "Record is not found"
             got: "Unexpected error"
      
        (compared using ==)
      # ./spec/controllers/concerns/api_authenticate_spec.rb:63:in `block (3 levels) in <top (required)>'

  16) ApiAuthenticate#token_authenticate_user bearer token is valid
      Failure/Error: expect(controller.current_user).to eq(user)
      
        expected: #<User id: 396, email: "alex@thompson-kautzer.io", first_name: "Sherlyn", last_name: "Lynch", created...+0000", username: "@adella_padberg", online: false, locale: "en", delete_at: nil, role: "moderator">
             got: nil
      
        (compared using ==)
      # ./spec/controllers/concerns/api_authenticate_spec.rb:28:in `block (3 levels) in <top (required)>'

  17) ApiAuthenticate#token_authenticate_user token is expired
      Failure/Error: expect(json_response["error"]).to eq I18n.t("api.errors.expired_token")
      
        expected: "Token is expired"
             got: "Unexpected error"
      
        (compared using ==)
      # ./spec/controllers/concerns/api_authenticate_spec.rb:70:in `block (3 levels) in <top (required)>'

Finished in 11.04 seconds (files took 3.31 seconds to load)
326 examples, 17 failures

Failed examples:

rspec ./spec/controllers/api/api_controller_spec.rb:22 # Api::ApiController#token_authenticate_user bearer token is valid
rspec ./spec/controllers/api/api_controller_spec.rb:56 # Api::ApiController#token_authenticate_user user not found
rspec ./spec/controllers/api/api_controller_spec.rb:63 # Api::ApiController#token_authenticate_user token is expired
rspec ./spec/controllers/api/v1/projects_controller_spec.rb:44 # Api::V1::ProjectsController GET /api/v1/projects/:id error if task is not found
rspec ./spec/controllers/api/v1/projects_controller_spec.rb:32 # Api::V1::ProjectsController GET /api/v1/projects/:id when user is not member for project unauthorized error
rspec ./spec/controllers/api/v1/projects_controller_spec.rb:24 # Api::V1::ProjectsController GET /api/v1/projects/:id when user is member for project serialized project object
rspec ./spec/controllers/api/v1/projects_controller_spec.rb:11 # Api::V1::ProjectsController GET /api/v1/projects serialized projects object
rspec ./spec/controllers/api/v1/tasks_controller_spec.rb:36 # Api::V1::TasksController GET /api/v1/tasks/:id error if task is not found
rspec ./spec/controllers/api/v1/tasks_controller_spec.rb:24 # Api::V1::TasksController GET /api/v1/tasks/:id when user is not member for project unauthorized error
rspec ./spec/controllers/api/v1/tasks_controller_spec.rb:16 # Api::V1::TasksController GET /api/v1/tasks/:id when user is member for project serialized task object
rspec ./spec/services/jwt_service_spec.rb:35 # JwtService.decode raises verification error if token is invalid
rspec ./spec/services/jwt_service_spec.rb:17 # JwtService.decode decodes correctly
rspec ./spec/services/jwt_service_spec.rb:10 # JwtService.encode encodes correctly
rspec ./spec/requests/admin/admin_base_spec.rb:29 # Admin::AdminBaseController.authenticate_admin! when user is not a admin not access
rspec ./spec/controllers/concerns/api_authenticate_spec.rb:59 # ApiAuthenticate#token_authenticate_user user not found
rspec ./spec/controllers/concerns/api_authenticate_spec.rb:25 # ApiAuthenticate#token_authenticate_user bearer token is valid
rspec ./spec/controllers/concerns/api_authenticate_spec.rb:66 # ApiAuthenticate#token_authenticate_user token is expired

Randomized with seed 53091

Coverage report generated for RSpec to /home/usr/git/Todoser/coverage. 2883 / 2992 LOC (96.36%) covered.
Stopped processing SimpleCov as a previous error not related to SimpleCov has been detected