#include <iostream>

using namespace std;


bool is_digit_num(char c) {
    return (c>='0' && c<='9');
}

int check(int n, int w, int h, long long r, int cnt_strip) {
    float hOfRow = (float) h / cnt_strip;
    long long Counter1 = n / cnt_strip;
    long long Counter2 = (n - 1) / cnt_strip + 1;

    float maxW = hOfRow;
    float minW = hOfRow / 1000000 * r;

    if (minW * Counter1 > w || minW * Counter2 > w) {
        return -1;
    }
    if (maxW * Counter1 < w || maxW * Counter2 < w) {
        return 1;
    }
    return 0;
}

int main() {
    long long t;
    cin >> t;

    while (t--) {
        long long n, w, h;
        long long r=0;
        string string_r;
        cin >> w >> h >> n >> string_r;
        for (auto x : string_r){
            if(is_digit_num(x)) {
                r += x - '0';
                r *= 10;
            }
        }


        long long left = 0;
        long long right = n + 1;
        while (right - left > 1) {
            long long m = (left + right)/2;
            long long result = check(n, w, h, r, m);
            if (result == -1)
                left = m;
            else if(result == 1)
                right = m;
            else{
                right=m;
                break;
            }
        }

        long long count_strip = right;

        if(check(n, w, h, r, count_strip) == 0) {
            long long minCountInRow = n / count_strip;
            long long maxCountInRow = minCountInRow;
            if (n % count_strip != 0)
                maxCountInRow += 1;
            cout << count_strip << ' ' << minCountInRow << ' ' << maxCountInRow << '\n';
        }
        else{
            cout<<-1<<endl;
        }
    }
}
