#!/bin/bash


checkIfStringContainsOtherString()
{
	if [[ $1 == *"$2"* ]]; then
		    echo "Path contains directory.";
		    return 1
		else
		    echo "Path does not contain directory.";
		    return 0
		fi
}

function addDirToVariable()
{
	echo "Directory $1 added to PATH variable."
}

function removeDirFromVariable { $1 } 
{
	# sed -i 's/old-text/new-text/g'

	echo "Directory $1 removed from PATH variable."
}

function expandRelativePathToAbsolute { $1 } 
{
	# readlink - print resolved symbolic links or canonical file names
	# realpath - return the canonicalised absolute pathname
	EXPANDED_PATH=$(realpath)
	echo "Expanded the relative [ $1 ]  path to absolute [ $EXPANDED_PATH ]."
}

function setNewPathVariableInSystem { $1 } 
{

	echo "New path variable has been set in the user system enviroment variable."
}

function printApplicationUsage 
{
	echo -e "
\033[1mAplication path2add usage:\033[0m
	-add-current		Add current directory if it doesn't already exist
	-remove-current		Remove current directory if it doesn't already exist
	-add-argument	 [DIR or PATH NAME]	Remove current directory if it doesn't already exist
	-remove-argument [DIR or PATH NAME]	Remove directory passed as launch argument if it doesn't exist
	
	--help 			Print application usage

	\033[1mExamples of usage:\033[0m
		add2path	-add-current
		add2path	-add-argument /home/YOUR-ACCOUNT-NAME/bin
"
}





case ${1} in
-add-current)
	dirAlreadyAdded=$(checkIfStringContainsOtherString {$PATH $(pwd)})
	if [ ! dirAlreadyAdded ]; then
		RESULT=$(addDirToVariable {$DIR})
	fi
	setNewPathVariableInSystem {$RESULT}
	;;
-remove-current)
	dirAlreadyAdded=$(checkIfStringContainsOtherString {$PATH, $(pwd)})
	if [ ! dirAlreadyAdded ]; then
		RESULT=$(removeDirToVariable {$DIR})
		setNewPathVariableInSystem {$RESULT}
	fi
	;;
-add-argument)
	PASSED_ARG=${2}
	if [[ -d "$PASSED_ARG" ]]; then 
		expandRelativePathToAbsolute{$PASSED_ARG}
	        dirExist=$(checkIfStringContainsOtherString {$PATH, $EXPANDED_PATH})
	        if [ ! dirExist ]; then
	                RESULT=$(addDirToVariable {$DIR})
			setNewPathVariableInSystem {$RESULT}
		else 
			printApplicationUsage
		fi
	fi
	;;
-remove-argument)
	PASSED_ARG=${2}
	if [[ -d "$PASSED_ARG" ]]; then
		expandRelativePathToAbsolute{$PASSED_ARG} 
		dirExist=$(checkIfStringContainsOtherString {$PATH, $EXPANDED_PATH})
		if [ ! dirExist ]; then
			RESULT=$(removeDirToVariable {$DIR})
			setNewPathVariableInSystem {$RESULT}
		else
			printApplicationUsage
		fi
	fi
	;;
--help)
        printApplicationUsage;;	
*)
	printApplicationUsage;;
esac


exit 0
