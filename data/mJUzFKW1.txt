;;; Backtrace
#|
end of file on #<FLEXI-STREAMS:FLEXI-INPUT-STREAM {70307F9583}>
   [Condition of type END-OF-FILE]

Backtrace:
 0: (READ-CHAR #<FLEXI-STREAMS:FLEXI-INPUT-STREAM {70307F9583}> :EOF-VALUE 0 #<unused argument>)
 1: (SB-IMPL::%READ-PRESERVING-WHITESPACE #<FLEXI-STREAMS:FLEXI-INPUT-STREAM {70307F9583}> :EOF-VALUE (NIL) T)
 2: (SB-IMPL::%READ-PRESERVING-WHITESPACE #<FLEXI-STREAMS:FLEXI-INPUT-STREAM {70307F9583}> :EOF-VALUE (NIL) NIL)
 3: (READ #<FLEXI-STREAMS:FLEXI-INPUT-STREAM {70307F9583}> :EOF-VALUE NIL NIL)
 4: (READ-PLANS #P"/Users/rpg/projects/scepter/shop-mcts/strike-force-one/data/tactics-search/plans-010000.lisp.gz")
|#

;;; from:
(defun read-plans (pathname)
  (with-open-file (raw-stream pathname :element-type '(unsigned-byte 8))
    (let* ((gzip-str (gzip-stream:make-gzip-input-stream raw-stream))
           (str (flexi-streams:make-flexi-stream gzip-str :element-type 'base-char)))
      (unwind-protect
       (iter (for x = (read str :eof-value nil))
         (while x)
         (collecting (shop:shorter-plan x)))
        (close str)
        (close gzip-str)))))
