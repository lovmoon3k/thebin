class TetrominoFactory {
  private tetrominos: Tetromino[] = [];
  private generatedTetrominos: Tetromino[] = [];
  private queue: Tetromino[] = [];
  
  constructor() {
    for (const tetrominoInfo of TETROMINOS) {
      this.tetrominos.push(new Tetromino(tetrominoInfo));
    }
  }
  
  public getRandomTetromino(): Tetromino {
    if (this.queue.length === 0) {
      this.fillQueue();
    }
    
    let nextTetromino = this.queue.shift();
    this.fillQueue();
    
    return nextTetromino;
  }
  
  private fillQueue() {
    while (this.queue.length < 4) {
      if (this.generatedTetrominos.length === this.tetrominos.length) {
        this.generatedTetrominos = [];
      }
      
      let randomIndex = Math.floor(Math.random() * this.tetrominos.length);
      let randomTetromino = this.tetrominos[randomIndex];
      
      while (this.generatedTetrominos.includes(randomTetromino)) {
        randomIndex = Math.floor(Math.random() * this.tetrominos.length);
        randomTetromino = this.tetrominos[randomIndex];
      }
      
      this.generatedTetrominos.push(randomTetromino);
      this.queue.push(randomTetromino);
    }
  }
}
