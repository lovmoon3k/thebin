#### Algebraic/ BFS ####
clc
clear all
format short

% max = 3x+ 4y
% x+y<=450
% 2x+y<=600

A=[1 1 1 0; 2 1 0 1]; % in standard form
C=[3 4 0 0];
b=[450; 600];

[n, m] = size(A);

if n > m
    sol = zeros(n, nchoosek(n, m));
    for i = 1:size(sol, 2)
        x = A(:, i)\b;
        if all(x >= 0 & x ~= inf & x ~= -inf)
            sol(i, i) = x(i);
        end
    end
else
    error('nCm does not exists')
end

[Zmax, Zindex] = max(C * sol);
bfs = sol(:, Zindex)';
optimal_bfs = array2table([bfs, Zmax], 'VariableNames', {'x_1', 'x_2', 'x_3', 'x_4', 'Z'});


###### Graphical Method ######
% clc;
% clear all;
% 
% x=0:0.1:10
% y1=(5-x)/9;
% y2=(3-x)/2;
% y3=8-2*x;
% y1=max(0,y1);
% y2=max(0,y2);
% y3=max(0,y3);
% plot(x,y1,'r',x,y2,'y',x,y3,'b')
% 
% 
% a=[1 1 1;1 2 1;2 1 3]
% b=[1;2;4];
% x=a\b



####### Points of intersection #######
% clc;
% clear all;
% a=[1 2;1 1;1 -2;0 1;1 0];
% b=[10;6;1;0;0];
% without using for loop

% %case1
% a=[1 2;-1 1];
% b=[10;6];
% x1=a\b
% 
% %case2
% a2=[1 2;1 -2];
% b2=[10;1];
% x2=a2\b2
% 
###### Feasible Points??? ######
%with multiple constraints
 
 x=[1 0;2 1;10 100; -1 10;5 0; 9 0; 8 5];
 x1=x(:,1);
 x2=x(:,2);
 c1=(x1+2*x2)-10;
 s1=find(c1>0); % >0 for <=0 constraint
 x(s1,:)=[]
  c2=(x1+x2)-5;
 s2=find(c2<0);
 x(s2,:)=[]



########## Standard form conversion ##############
C = [1, 3, 7];
A = [2 3 4; 1 5 2; 2 4 3];
b = [-1; -3; 4];

neg_rows = b < 0;
A(neg_rows,:) = -A(neg_rows,:);
b(neg_rows) = -b(neg_rows);

I = [0, 0, 1];
s = eye(size(A,1));
s(I>0,I>0) = -s(I>0,I>0);
s(neg_rows,:) = -s(neg_rows,:);
mat = [A s b];
