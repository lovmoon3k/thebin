local EV
local TI

getgenv().AgroAura = false;
getgenv().Upgrade = false;
getgenv().Reward = false;
getgenv().Hatch = false;
getgenv().Moves = false;

function Attack()
    spawn(function ()
        while getgenv().AgroAura == true do
game:GetService("ReplicatedStorage").Remotes.Attack:FireServer() wait(0.1)
        end
    end)
end
function Upgrade()
    spawn(function ()
        while getgenv().Upgrade == true do
local args = {[1] = "Upgrade",[2] = "Weapon_Damage"} game:GetService("ReplicatedStorage").Remotes.Shop:FireServer(unpack(args)) wait(0.1)
local args = {[1] = "Upgrade",[2] = "Coin_Multiplier"} game:GetService("ReplicatedStorage").Remotes.Shop:FireServer(unpack(args)) wait(0.1)
local args = {[1] = "Upgrade",[2] = "Fruit_Damage"} game:GetService("ReplicatedStorage").Remotes.Shop:FireServer(unpack(args)) wait(0.1)
        end
    end)
end
function LoseTimeAndGetNothing()
    spawn(function ()
        while getgenv().Reward == true do
local args = {[1] = "1"} game:GetService("ReplicatedStorage").Remotes.Reward:FireServer(unpack(args)) wait(1)
local args = {[1] = "2"} game:GetService("ReplicatedStorage").Remotes.Reward:FireServer(unpack(args)) wait(1)
local args = {[1] = "3"} game:GetService("ReplicatedStorage").Remotes.Reward:FireServer(unpack(args)) wait(1)
local args = {[1] = "4"} game:GetService("ReplicatedStorage").Remotes.Reward:FireServer(unpack(args)) wait(1)
local args = {[1] = "5"} game:GetService("ReplicatedStorage").Remotes.Reward:FireServer(unpack(args)) wait(1)
local args = {[1] = "6"} game:GetService("ReplicatedStorage").Remotes.Reward:FireServer(unpack(args)) wait(1)
local args = {[1] = "7"} game:GetService("ReplicatedStorage").Remotes.Reward:FireServer(unpack(args)) wait(1)
local args = {[1] = "8"} game:GetService("ReplicatedStorage").Remotes.Reward:FireServer(unpack(args)) wait(1)
local args = {[1] = "9"} game:GetService("ReplicatedStorage").Remotes.Reward:FireServer(unpack(args)) wait(1)
local args = {[1] = "10"} game:GetService("ReplicatedStorage").Remotes.Reward:FireServer(unpack(args)) wait(1)
local args = {[1] = "11"} game:GetService("ReplicatedStorage").Remotes.Reward:FireServer(unpack(args)) wait(1)
local args = {[1] = "12"} game:GetService("ReplicatedStorage").Remotes.Reward:FireServer(unpack(args)) wait(1)
        end
    end)
end
function Egg()
    spawn(function ()
        while getgenv().Hatch == true do
if EV == "Basic" then local args = {[1] = "BasicEgg",[2] = "HatchBtn"} game:GetService("ReplicatedStorage").Remotes.Egg:FireServer(unpack(args)) wait(0.1) end
if EV == "Bizarre" then local args = {[1] = "BizarreEgg",[2] = "HatchBtn"} game:GetService("ReplicatedStorage").Remotes.Egg:FireServer(unpack(args)) wait(0.1) end
if EV == "Desert" then local args = {[1] = "DesertEgg",[2] = "HatchBtn"} game:GetService("ReplicatedStorage").Remotes.Egg:FireServer(unpack(args)) wait(0.1) end
if EV == "Jungle" then local args = {[1] = "JungleEgg",[2] = "HatchBtn"} game:GetService("ReplicatedStorage").Remotes.Egg:FireServer(unpack(args)) wait(0.1) end
if EV == "Dominus" then local args = {[1] = "DominusEgg",[2] = "HatchBtn"} game:GetService("ReplicatedStorage").Remotes.Egg:FireServer(unpack(args)) wait(0.1) end
if EV == "Dark" then local args = {[1] = "DarkEgg",[2] = "HatchBtn"} game:GetService("ReplicatedStorage").Remotes.Egg:FireServer(unpack(args)) wait(0.1) end
if EV == "Glitched" then local args = {[1] = "GlitchedEgg",[2] = "HatchBtn"} game:GetService("ReplicatedStorage").Remotes.Egg:FireServer(unpack(args)) wait(0.1) end
if EV == "Ice" then local args = {[1] = "IceEgg",[2] = "HatchBtn"} game:GetService("ReplicatedStorage").Remotes.Egg:FireServer(unpack(args)) wait(0.1) end
if EV == "Ocean" then local args = {[1] = "OceanEgg",[2] = "HatchBtn"} game:GetService("ReplicatedStorage").Remotes.Egg:FireServer(unpack(args)) wait(0.1) end
if EV == "Magma" then local args = {[1] = "MagmaEgg",[2] = "HatchBtn"} game:GetService("ReplicatedStorage").Remotes.Egg:FireServer(unpack(args)) wait(0.1) end
        end
    end)
end
function Skill()
    spawn(function ()
        while getgenv().Moves == true do
local args = {[1] = "One"} game:GetService("ReplicatedStorage").Remotes.Validate:FireServer(unpack(args)) wait(0.1)
local args = {[1] = "Two"} game:GetService("ReplicatedStorage").Remotes.Validate:FireServer(unpack(args)) wait(0.1)
local args = {[1] = "Three"} game:GetService("ReplicatedStorage").Remotes.Validate:FireServer(unpack(args)) wait(0.1)
        end
    end)
end

local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()

local w = library:CreateWindow("Anime Fruit Simulator")

local b = w:CreateFolder("Main")

b:Toggle("Kill Aura",function(val)
getgenv().AgroAura = val
Attack()
end)

b:Toggle("Auto Upgrade",function(val)
getgenv().Upgrade = val
Upgrade()
end)

b:Toggle("Auto Reward",function(val)
getgenv().Reward = val
LoseTimeAndGetNothing()
end)

b:Toggle("Auto Moves",function(val)
getgenv().Moves = val
Skill()
end)

b:Toggle("Auto Hatch",function(val)
getgenv().Hatch = val
Egg()
end)

b:Dropdown("Select Egg To Hatch",{"Basic","Bizarre","Desert","Jungle","Dominus","Dark","Glitched","Ice","Ocean","Magma"},true,function(val)
EV = val
end)

local b = w:CreateFolder("Miscellaneous")

b:Button("Redeem Codes",function()
local args = {[1] = "1kFollowing:O?"} game:GetService("ReplicatedStorage").Remotes.Code:FireServer(unpack(args)) wait(0.1)
local args = {[1] = "50kMEMS?!"} game:GetService("ReplicatedStorage").Remotes.Code:FireServer(unpack(args)) wait(0.1)
local args = {[1] = "WelcomeToFruitSim"} game:GetService("ReplicatedStorage").Remotes.Code:FireServer(unpack(args)) wait(0.1)
local args = {[1] = "IWantSpins:)"} game:GetService("ReplicatedStorage").Remotes.Code:FireServer(unpack(args)) wait(0.1)
local args = {[1] = "1MIL!"} game:GetService("ReplicatedStorage").Remotes.Code:FireServer(unpack(args)) wait(0.1)
local args = {[1] = "5kLikes!"} game:GetService("ReplicatedStorage").Remotes.Code:FireServer(unpack(args)) wait(0.1)
local args = {[1] = "20kMEMS"} game:GetService("ReplicatedStorage").Remotes.Code:FireServer(unpack(args)) wait(0.1)
end)

b:Button("Check Fruit Spawns",function()
if game:GetService("Workspace").FruitSpawns.Smoke then TPTo(game:GetService("Workspace").FruitSpawns.Smoke.Moku.CFrame) end wait(TI)
if game:GetService("Workspace").FruitSpawns.Bomu then TPTo(game:GetService("Workspace").FruitSpawns.Bomu.Base.CFrame) end wait(TI)
if game:GetService("Workspace").FruitSpawns.Gomu then TPTo(game:GetService("Workspace").FruitSpawns.Gomu.Gomu.CFrame) end wait(TI)
if game:GetService("Workspace").FruitSpawns.Suna.Suna then TPTo(game:GetService("Workspace").FruitSpawns.Suna.Suna.CFrame) end wait(TI)
if game:GetService("Workspace").FruitSpawns.Mero.Base then TPTo(game:GetService("Workspace").FruitSpawns.Mero.Base.CFrame) end wait(TI)
if game:GetService("Workspace").FruitSpawns.Snow.Yuki then TPTo(game:GetService("Workspace").FruitSpawns.Snow.Yuki.CFrame) end wait(TI)
if game:GetService("Workspace").FruitSpawns.Hie.Hie then TPTo(game:GetService("Workspace").FruitSpawns.Hie.Hie.CFrame) end wait(TI)
if game:GetService("Workspace").FruitSpawns.Bari.Base then TPTo(game:GetService("Workspace").FruitSpawns.Bari.Base.CFrame) end wait(TI)
if game:GetService("Workspace").FruitSpawns.Zushi.Base then TPTo(game:GetService("Workspace").FruitSpawns.Zushi.Base.CFrame) end wait(TI)
if game:GetService("Workspace").FruitSpawns.Paw.Base then TPTo(game:GetService("Workspace").FruitSpawns.Paw.Base.CFrame) end wait(TI)
if game:GetService("Workspace").FruitSpawns.Yami.Yami then TPTo(game:GetService("Workspace").FruitSpawns.Yami.Yami.CFrame) end wait(TI)
if game:GetService("Workspace").FruitSpawns.Ito.Ito then TPTo(game:GetService("Workspace").FruitSpawns.Ito.Ito.CFrame) end wait(TI)
if game:GetService("Workspace").FruitSpawns.Ope.Base then TPTo(game:GetService("Workspace").FruitSpawns.Ope.Base.CFrame) end wait(TI)
end)

b:Box("Teleport Interval","number",function(val)
TI = val
end)

local b = w:CreateFolder("Credits")

b:Label("Made by X_LuaF#0705",{
    TextSize = 21;
    TextColor = Color3.fromRGB(255,255,255);
    BgColor = Color3.fromRGB(69,69,69);
})
 
b:Button("Copy Discord Invite",function() setclipboard("discord.gg/8tRb8MQcW5") end)

b:DestroyGui()
 
local b = w:CreateFolder("LocalPlayer")

b:Button("Full Version",function() loadstring(game:HttpGet("https://pastebin.com/raw/GphZf9Xe", true))() end)
b:Button("Rejoin",function() loadstring(game:HttpGet("https://pastebin.com/raw/mM7JBG5h", true))() end)
b:Button("Reset",function() loadstring(game:HttpGet("https://pastebin.com/raw/EEY6SATj", true))() end)

local S
local J
local H
local G
 
b:Box("Speed","number",function(val)
S = val
end)
b:Box("Jump","number",function(val)
J = val
end)
b:Box("Hip Height","number",function(val)
H = val
end)
b:Box("Gravity","number",function(val)
G = val
end)
 
b:Toggle("Speed",function(bool)
getgenv().Speed = bool
Speed(S)
end)
b:Toggle("Jump",function(bool)
getgenv().Jump = bool
Jump(J)
end)
b:Toggle("Hip Height",function(bool)
getgenv().Hip = bool
Hip(H)
end)
b:Toggle("Gravity",function(bool)
getgenv().Grav = bool
Grav(G)
end)
 
b:Slider("FOV (Default is 70)",{min = 0;max = 120;precise = true;},function(val)
    game.workspace.CurrentCamera.FieldOfView = val
end)
 
function TPTo(PCFrame)
    local plr = game.Players.LocalPlayer;
           if plr.Character then
            plr.Character.HumanoidRootPart.CFrame = PCFrame
        end
    end
 
getgenv().Speed = false;
getgenv().Jump = false;
getgenv().Hip = false;
getgenv().Chat = false;
getgenv().Grav = false;
 
function Chat(Mes, Freq)
    spawn(function ()
        while getgenv().Chat == true do
local args = {[1] = Mes,[2] = "All"} game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
wait(Freq)
        end
    end)
end
 
function Speed(Nume)
    spawn(function ()
        if getgenv().Speed == true then
            while getgenv().Speed == true do
                game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = Nume
                wait()
            end
        elseif getgenv().Speed == false then
            game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = 16
        end
    end)
end
function Jump(Nume)
    spawn(function ()
        if getgenv().Jump == true then
            while getgenv().Jump == true do
                game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = Nume
                wait()
        end
    elseif getgenv().Jump == false then
            game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = 50
        end
    end)
end
function Hip(Nume)
    spawn(function ()
        if getgenv().Hip == true then
            while getgenv().Hip == true do
            game:GetService("Players").LocalPlayer.Character.Humanoid.HipHeight = Nume
            wait()
        end
    elseif getgenv().Hip == false then
            game:GetService("Players").LocalPlayer.Character.Humanoid.HipHeight = 0.1
        end
    end)
end
function Grav(Nume)
    spawn(function ()
        if getgenv().Grav == true then
            while getgenv().Grav == true do
                game:GetService("Workspace").Gravity = Nume
            wait()
        end
    elseif getgenv().Grav == false then
        game:GetService("Workspace").Gravity = 196.2
        end
    end)
end