-- Define the inventory to push items to
local toInventory = peripheral.wrap("minecraft:barrel_5")

-- List of inventories to pull items from
local fromInventories = {
"storagedrawers:standard_drawers_1_0", 
"minecraft:barrel_3",
"minecraft:barrel_4",

}





--------------------------------------------
-- Define the item to transfer
local itemToTransfer = 0
-- Define the number of items to transfer
local amountToTransfer = 0

-- Connect peripherals
local sides = {"left", "right", "top", "bottom", "front", "back"}
for i, side in ipairs(sides) do
  local device = peripheral.getType(side)
  if device == "modem" then
    rednet.open(side)
    print("Opened rednet on " .. side)
  elseif device then
    local wrapper = peripheral.wrap(side)
    print("Wrapped " .. device .. " on " .. side)
  end
end

-- print(itemToTransfer, ": ", amountToTransfer)

function moveItems()
  -- Loop through the list of inventories
  for i, fromName in ipairs(fromInventories) do
    local fromInventory = peripheral.wrap(fromName)

    -- Get a list of all items in the inventory
    local items = fromInventory.list()

    -- Loop through the items in the inventory
    for slot, item in pairs(items) do
      -- Check if the item is the specified item to transfer
      if item.name == itemToTransfer then
        local transferred = fromInventory.pushItems(peripheral.getName(toInventory), slot, amountToTransfer)
        amountToTransfer = amountToTransfer - transferred
        if amountToTransfer <= 0 then
          return
        end
      end
    end
  end
end

function split(s, delimiter)
    result = {};
    for match in (s..delimiter):gmatch("(.-)"..delimiter) do
        table.insert(result, match);
    end
    return result;
end

function receive()
	senderID, message, protocol = rednet.receive()
    split(message, " ")
    itemToTransfer = tostring(result[1])
    amountToTransfer = tonumber(result[2])
		-- if senderID then
			-- print("true")
		-- return true
	-- end
end

function wholething()
	receive()
	print(itemToTransfer, ": ",amountToTransfer)
	moveItems()
end

while true do
  local success, error = pcall(wholething)
  if not success then
    print(error)
  end
end
