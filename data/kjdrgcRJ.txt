Console.Write("Введите строку: ");
string userInput = "" + Console.ReadLine(); // Пустая строка - защита от null.

// iterable.Count - LINQ. Принимает в себя лямбда-функцию для обработки каждого элемента. Возвращает число удволетворительных символов условию лямбда-функций.
// В данном случае строку можно представить как char[], т.е. как массив символов.
// Эта функция аналогична этому примеру:
// int counter = 0;
// foreach (char symbol in userInput){
//      counter += symbol == 'й' ? 1: 0;
//}
// Метод ToLower переводит строку в нижний регистр. "Привет, Маша сегодня не будет гулять." -> "привет, маша сегодня не будет гулять."
// Здесь он нужен для того чтобы отдельно не считать заглавные буквы.
Console.WriteLine($"Количество букв 'й' в строке: {userInput.ToLower().Count(a => a == 'й')}");
Console.WriteLine($"Количество букв 'ы' в строке: {userInput.ToLower().Count(b => b == 'ы')}");
Console.WriteLine($"Количество букв 'я' в строке: {userInput.ToLower().Count(b => b == 'я')}");

// string.Replace - заменяет все включения строки или символа внутри строки. Возвращает строку, поэтому их можно собирать вот в такую "стопочку"
userInput = userInput.Replace(",", ",  ").Replace("ой", "");
Console.WriteLine($"Вывод: {userInput}");