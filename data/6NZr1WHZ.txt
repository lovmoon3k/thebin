/*
by: senb1
*/

#include <bits/stdc++.h>

#define ll long long
#define all(x) x.begin(), x.end()
#define fr first
#define sc second
#define mk make_pair

using namespace std;

const ll inf = 1e9 + 6;

vector<string> nums = {
    "BIR",  "EKI",  "uc",    "ToRT",  "BESH",
    "ALTY", "JETI", "SEGIZ", "TOGUZ", "ON"}; // * all possible numbers

void solve() {
    string s, s3;
    cin >> s;
    ll n = s.size(), ans = inf;
    map<char, int> mp1;
    for (int i = 0; i < n; i++) { // * add indecies of every letter's first
                                  // occurrence to s3 for s and s3
        if (mp1[s[i]] != 0) {
            s3 += char(mp1[s[i]]);
        } else {
            mp1[s[i]] = i + 49;
            s3 += char(mp1[s[i]]);
        }
    }

    for (ll i = 0; i < 10; i++) {
        for (ll j = 0; j < 10; j++) {
            for (ll k = 0; k < 10; k++) { // * check all possible combinations
                if (nums[i].size() + nums[j].size() + nums[k].size() == n) {
                    string s2 = nums[i] + nums[j] + nums[k], s4;

                    map<char, int> mp2;
                    for (int q = 0; q < n;
                         q++) { // * do same thing as before for s2 and s4
                        if (mp2[s2[q]] != 0) {
                            s4 += char(mp2[s2[q]]);
                        } else {
                            mp2[s2[q]] = q + 49;
                            s4 += char(mp2[s2[q]]);
                        }
                    }

                    // cout << s3 << endl << s4 << endl;
                    if (s3 == s4) // * chech if they are equal
                        ans = min(ans, i + j + k + 3);
                }
            }
        }
    }

    if (ans == inf) // ! if ans is inf then s is invalid
        cout << 1 << endl;
    else // * otherwise s is valid
        cout << ans << endl;
}
/*
ONONON
9
VSZVFKZTWK
7
PSPSPS
9
FKZTWVVVSZS
1
*/

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);

    int t = 1;
    // cin >> t;
    while (t--)
        solve();
}
