#include<bits/stdc++.h>
using namespace std;
int main()
{
    string pt,encrypt;
    cout<<"Enter plain text: ";
    cin>>pt;
    if(pt.size()%2!=0)
        pt+='X';
    int n;
    cout<<"Enter the order of key: ";
    cin>>n;
    ///taking key matrix
    int arr[n][n];
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            cin>>arr[i][j];
        }
    }
    int ind=0;
    for(int l=0;l<pt.size();l+=2){
    int arr1[n][1];
    for(int i=0;i<n;i++)
    {
        arr1[i][0]=pt[ind]-'A';
        ind++;
    }

    ///Matrix Multiplication
    int ans[n][1];
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<1;j++)
        {
            ans[i][j]=0;
        }
    }
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<1;j++)
        {
            for(int k=0;k<n;k++){
            ans[i][j]=(ans[i][j]+arr[i][k]*arr1[k][j])%26;
            //cout<<arr[i][k]<<" "<<arr1[k][j]<<endl;
            }
        }
    }
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<1;j++)
        {
          encrypt+='A'+ans[i][j];
        }
    }
    }
    cout<<"Encrypt Message: "<<encrypt<<endl;

    ///inverse matrix;
    int mulinv=0;
    int det=(arr[0][0]*arr[1][1])-(arr[0][1]*arr[1][0]);
    for(int i=1;;i++)
    {
        if((det*i)%26==1){
            mulinv=i;
            cout<<"multiplication inverse: "<<mulinv<<endl;
            break;
        }
    }



    int arr2[n][n];
    int temp=arr[0][0];
    arr[0][0]=arr[1][1];
    arr[1][1]=temp;
    arr[0][1]=(-1*arr[0][1]);
    arr[1][0]=(-1*arr[1][0]);


    cout<<"Adj: "<<endl;
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            cout<<arr[i][j]<<" ";
        }
        cout<<endl;
    }
    cout<<endl<<endl;
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            arr2[i][j]=((arr[i][j]*mulinv)%26);
        }
    }

    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            if(arr2[i][j]<0)
                arr2[i][j]+=26;
        }
    }
    string decrypt;
    int ind1=0;
    for(int l=0;l<encrypt.size();l+=2){
    int arr3[n][1];

    int arr1[n][1];
    for(int i=0;i<n;i++)
    {
        arr3[i][0]=encrypt[ind1]-'A';
        ind1++;
    }

    int ans1[n][1];
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<1;j++)
        {
            ans1[i][j]=0;
        }
    }

    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            cout<<arr2[i][j]<<" ";
        }
        cout<<endl;
    }
    cout<<endl;
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<1;j++)
        {
            cout<<arr3[i][j];
        }
        cout<<endl;
    }
    cout<<endl;
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<1;j++)
        {
            for(int k=0;k<n;k++){
            ans1[i][j]=(ans1[i][j]+arr2[i][k]*arr3[k][j])%26;
            //cout<<ans1[i][j]<<" ";
            //cout<<arr[i][k]<<" "<<arr1[k][j]<<endl;
            }
        }
    }
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<1;j++)
        {
          decrypt+=ans1[i][j]+'A';
        }
    }
    }

    cout<<"Decrypt Message: "<<decrypt<<endl;




    return 0;
}


