#include <stdio.h>
#include <stdlib.h>
#include <math.h>

double **resmatDouble(int m, int n);

double determinant(double** mat, int n) {
  double det = 0;
  int c, subi, i, j, subj;
  double** submat;

  if (n == 2) {
    return((mat[0][0] * mat[1][1]) - (mat[1][0] * mat[0][1]));
  }
  else {
    submat = resmatDouble(n,n);

    for (c = 0; c < n; c++) {
      subi = 0;
      for (i = 1; i < n; i++) {
        subj = 0;
        for (j = 0; j < n; j++) {
          if (j == c) {
            continue;
          }
          submat[subi][subj] = mat[i][j];
          subj++;
        }
        subi++;
      }
      det = det + (pow(-1, c) * mat[0][c] * determinant(submat, n - 1));
    }

    free(submat);
  }

  return det;
}


double **resmatDouble(int m, int n) {  // m -rows n -cols
    double **mat = (double **)malloc(m * n * sizeof(double) + m * sizeof(double *));
    double *ptr = (double *)(mat + m);
    for (int i = 0; i < m; i++) mat[i] = ptr + n * i;
    return mat;
}

int** input(int m, int n, int* matrixCorrect) {  // m -rows n -cols
    int** mat = (int**)malloc(m * n * sizeof(int) + m * sizeof(int*));
    int* ptr = (int*)(mat + m);
    int flag = 1;
    int temp;
    for (int i = 0; i < m; i++) mat[i] = ptr + n * i;
    for (int i = 0; i < m; i++)
        for (int j = 0; j < n; j++) {
            if (flag) {
                // temp = myInput();
                // if (!isMyInputCorrect(temp)) {
                //     flag = 0;
                //     *matrixCorrect = 0;
                // } else {
                //     mat[i][j] = temp;
                // }
            }
        }
    return mat;
}

double** inputDouble(int m, int n, int* matrixCorrect) {  // m -rows n -cols
    double** mat = (double**)malloc(m * n * sizeof(double) + m * sizeof(double*));
    double* ptr = (double*)(mat + m);
    int flag = 1;
    int temp;
    for (int i = 0; i < m; i++) mat[i] = ptr + n * i;
    for (int i = 0; i < m; i++)
        for (int j = 0; j < n; j++) {
            if (flag) {
                scanf("%lf", &mat[i][j]);
                // Сделать проверку на дабл 
                
                
                // temp = myInputDouble();
                // if (!isMyInputDoubleCorrect(temp)) {
                //     flag = 0;
                //     *matrixCorrect = 0;
                // } else {
                //     mat[i][j] = temp;
                // }
            }
        }
    return mat;
}





int main() {
  int n = 4, i, j;
  
  // СДЕЛАТЬ ВВОД n 
  int matrixCorrect = 1;
  double** mat = inputDouble(n,n,&matrixCorrect);

  printf("Determinant of the matrix is: %lf\n", determinant(mat, n));

  free(mat);

  return 0;
}