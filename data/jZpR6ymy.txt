//_____________________________ cmake
cmake_minimum_required(VERSION 3.5)
project(untitled)

set(CMAKE_CXX_STANDARD 17)
find_package(Boost COMPONENTS unit_test_framework)
add_executable(untitled main.cpp)
target_link_libraries(untitled ${Boost_UNIT_TEST_FRAMEWORK_LIBRARY})
//_____________________________
#define BOOST_TEST_MODULE My Test
#include <boost/test/included/unit_test.hpp>
BOOST_AUTO_TEST_CASE(Test_1)
{
    BOOST_TEST(pretty_s("abcaazz", 2) == 5);
}
BOOST_AUTO_TEST_CASE(Test_2)
{
    BOOST_TEST(pretty_s("aaaaa", 2) == 5);
}
BOOST_AUTO_TEST_CASE(Test_3)
{
    BOOST_TEST(pretty_s("abcd", 2) == 3);
}
BOOST_AUTO_TEST_CASE(Test_4)
{
    BOOST_TEST(pretty_s("abvca", 2) == 3);
}
BOOST_AUTO_TEST_CASE(Test_5)
{
    BOOST_TEST(pretty_s("a", 1) == 1);
}
BOOST_AUTO_TEST_CASE(Test_6)
{
    BOOST_TEST(pretty_s("a", 0) == 1);
}
BOOST_AUTO_TEST_CASE(Test_7)
{
    BOOST_TEST(pretty_s("ab", 0) == 1);
}
BOOST_AUTO_TEST_CASE(Test_8)
{
    BOOST_TEST(pretty_s("ab", 1) == 1);
}
BOOST_AUTO_TEST_CASE(Test_9)
{
    BOOST_TEST(pretty_s("abc", 10) == 3);
}
BOOST_AUTO_TEST_CASE(Test_10)
{
    BOOST_TEST(pretty_s("aabcxxxbc", 2) == 5);
}
BOOST_AUTO_TEST_CASE(Test_11)
{
    BOOST_TEST(pretty_s("aabcxxxbcxxxx", 2) == 9);
}
BOOST_AUTO_TEST_CASE(Test_12)
{
    BOOST_TEST(pretty_s("abcdefghxxxx", 2) == 6);
}
